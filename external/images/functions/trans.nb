(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    262697,       5499]
NotebookOptionsPosition[    259224,       5436]
NotebookOutlinePosition[    259650,       5453]
CellTagsIndexPosition[    259607,       5450]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.897294199895015*^9, 3.8972942006512527`*^9}},
 CellLabel->
  "In[1984]:=",ExpressionUUID->"a491692a-93ed-4358-8868-89885c7b18d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "PlotPiecewise", ",", "PlotPiecewise`plot", ",", "PlotPiecewise`init", 
     ",", "PlotPiecewise`solve", ",", "PlotPiecewise`expand", ",", 
     "PlotPiecewise`annotatedPoints", ",", "PlotPiecewise`boundaryPoints", 
     ",", "PlotPiecewise`interiorPoints", ",", "PlotPiecewise`sowAnnotations",
      ",", "PlotPiecewise`inDomain"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise", "::", "usage"}], "=", 
   "\"\<PlotPiecewise[Piecewise[...], {x, a, b}, opts]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise", "::", "limindet"}], "=", 
   "\"\<Limit `` is not numeric or infinite at ``\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise", "::", "nonpw"}], "=", 
    "\"\<Function `` is not a Piecewise function or did not expand to \
one\>\""}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`debug", "::", "debug"}], "=", "\"\<``\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`debug", "::", "plot"}], "=", "\"\<``\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`debug", "::", "annotation"}], "=", "\"\<``\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`debug", "::", "limit"}], "=", "\"\<``\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PlotPiecewise`debug", "=", 
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"PlotPiecewise`debug", "::", "debug"}], ",", 
     RowBox[{"PlotPiecewise`debug", "::", "plot"}], ",", 
     RowBox[{"PlotPiecewise`debug", "::", "annotation"}], ",", 
     RowBox[{"PlotPiecewise`debug", "::", "limit"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "@@", "PlotPiecewise`debug"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotPiecewise", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<DotSize\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"\"\<EmptyDotStyle\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"\"\<FilledDotStyle\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"\"\<AsymptoteStyle\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"\"\<BaseDotSize\>\"", "\[Rule]", 
        RowBox[{"Offset", "[", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], "]"}]}], ",", 
       RowBox[{"\"\<AdditionalPoints\>\"", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"addition", " ", "pts", " ", "to", " ", "annotate"}], "*)"}], 
       
       RowBox[{"\"\<PiecewiseExpand\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"(*", 
        RowBox[{"which", " ", 
         RowBox[{"fns", ".", "to"}], " ", "expand"}], "*)"}], 
       RowBox[{"\"\<ContinuousEndpoints\>\"", "\[Rule]", "Automatic"}]}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"eval", ".", "formula"}], ",", 
       RowBox[{"not", " ", "limit"}]}], "*)"}], 
     RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "EmptyDot", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "FilledDot", "]"}], "=", 
     RowBox[{
      RowBox[{"Options", "[", "Asymptote", "]"}], "=", 
      RowBox[{
       RowBox[{"Options", "[", "PlotPiecewise`plot", "]"}], "=", 
       RowBox[{
        RowBox[{"Options", "[", "PlotPiecewise`init", "]"}], "=", 
        RowBox[{"Options", "[", "PlotPiecewise", "]"}]}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"graphics", " ", "elements"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"EmptyDot", ",", "FilledDot", ",", "Asymptote"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EmptyDot", "[", 
     RowBox[{"pt_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<EmptyDotStyle\>\"", "]"}], "===", 
     "None"}]}], ":=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FilledDot", "[", 
     RowBox[{"pt_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<FilledDotStyle\>\"", "]"}], "===", 
     "None"}]}], ":=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Asymptote", "[", 
     RowBox[{"pt_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<AsymptoteStyle\>\"", "]"}], "===", 
     "None"}]}], ":=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EmptyDot", "[", 
    RowBox[{"pt_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"White", ",", 
     RowBox[{
      RowBox[{"OptionValue", "[", "\"\<EmptyDotStyle\>\"", "]"}], "/.", 
      RowBox[{"Automatic", "\[Rule]", 
       RowBox[{"{", "}"}]}]}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{"pt", ",", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<DotSize\>\"", "]"}], "/.", 
        RowBox[{"Automatic", "\[Rule]", 
         RowBox[{"OptionValue", "[", "\"\<BaseDotSize\>\"", "]"}]}]}]}], 
      "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FilledDot", "[", 
    RowBox[{"pt_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"OptionValue", "[", "\"\<FilledDotStyle\>\"", "]"}], "/.", 
      RowBox[{"Automatic", "\[Rule]", 
       RowBox[{"{", "}"}]}]}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{"pt", ",", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<DotSize\>\"", "]"}], "/.", 
        RowBox[{"Automatic", "\[Rule]", 
         RowBox[{"OptionValue", "[", "\"\<BaseDotSize\>\"", "]"}]}]}]}], 
      "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Asymptote", "[", 
     RowBox[{"x0_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dashing", "[", "Large", "]"}], ",", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<AsymptoteStyle\>\"", "]"}], "/.", 
       RowBox[{"Automatic", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"x0", ",", 
          RowBox[{
           RowBox[{"OptionValue", "[", "PlotRange", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"PlotPiecewise`$inequality", "=", 
   RowBox[{"Greater", "|", "Less", "|", "LessEqual", "|", "GreaterEqual"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PlotPiecewise`$discontinuousAuto", "=", 
   RowBox[{"Ceiling", "|", "Floor", "|", "Round", "|", "Sign"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PlotPiecewise`$discontinuousAll", "=", 
   RowBox[{"Ceiling", "|", "Floor", "|", "Round", "|", "Sign", "|", 
    RowBox[{"(*", 
     RowBox[{"Min", "|", "Max", "|", "Clip", "|"}], "*)"}], "UnitStep", "|", 
    "IntegerPart", "|", 
    RowBox[{"(*", 
     RowBox[{"FractionalPart", "|"}], "*)"}], "Mod", "|", "Quotient", "|", 
    "UnitBox", "|", "UnitTriangle", "|", "SquareWave"}]}], 
  RowBox[{"(*", 
   RowBox[{"|", "TriangleWave", "|", "SawtoothWave"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "|", "BernsteinBasis", "|", "BSplineBasis", "|", "Abs", "|", "If", "|", 
    "Which", "|", "Switch"}], "*)"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`$discontinuous", "=", 
    RowBox[{"Ceiling", "|", "Floor", "|", "Round", "|", "Sign"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"auxiliary", " ", "functions"}], "*)"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "causes", " ", "Conditional", " ", "solutions", " ", "to", " ", "expand", 
     " ", "to", " ", "all", " ", "possibilities"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"arises", " ", "from", " ", "trig", " ", "eq"}], ",", 
      RowBox[{"and", " ", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "--"}], " ", "perhaps", " ", 
       RowBox[{"C", "[", "2", "]"}]}], ",", 
      RowBox[{"etc", "?"}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`expand", "[", 
    RowBox[{"cond_Or", ",", "var_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotPiecewise`expand", "[", 
      RowBox[{"#", ",", "var"}], "]"}], "&"}], "/@", "cond"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`expand", "[", 
    RowBox[{"cond_", ",", "var_"}], "]"}], ":=", 
   RowBox[{"Reduce", "[", 
    RowBox[{"cond", ",", "var", ",", 
     RowBox[{"Backsubstitution", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`solve", "[", 
     RowBox[{"eq_", ",", "var_"}], "]"}], "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
     "eq", ",", "PlotPiecewise`$discontinuous", ",", "Infinity", ",", 
      RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotPiecewise`solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Equal]", 
         RowBox[{"C", "[", "1", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
        RowBox[{"And", "@@", 
         RowBox[{"Cases", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"Except", "[", "_Equal", "]"}]}], "]"}]}]}], ",", "var"}], 
      "]"}], "&"}], "/@", 
    RowBox[{"Cases", "[", 
     RowBox[{"eq", ",", 
      RowBox[{
       RowBox[{"PlotPiecewise`$discontinuous", "[", "e_", "]"}], 
       "\[RuleDelayed]", "e"}], ",", "Infinity"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`solve", "[", 
     RowBox[{"eq_", ",", "var_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"var", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"var", "/.", "#"}], ")"}]}], "}"}], "&"}], "/@", 
      RowBox[{"List", "@", 
       RowBox[{"ToRules", "@", 
        RowBox[{"PlotPiecewise`expand", "[", 
         RowBox[{
          RowBox[{"Reduce", "[", 
           RowBox[{"eq", ",", "var", ",", "Reals", ",", 
            RowBox[{"Backsubstitution", "\[Rule]", "True"}]}], "]"}], ",", 
          "var"}], "]"}]}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"False", "\[Rule]", 
       RowBox[{"{", "}"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "limit", " ", "routines", " ", "for", " ", "handling", " ", 
     "discontinuous", " ", "functions"}], ",", 
    RowBox[{"which", " ", "Limit", " ", "fails", " ", "to", " ", "do"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`nlimit", "[", 
    RowBox[{
     RowBox[{"f_", "?", "NumericQ"}], ",", 
     RowBox[{"var_", "\[Rule]", "x0_"}], ",", "dir_"}], "]"}], ":=", "f"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`nlimit", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"var_", "\[Rule]", "x0_"}], ",", "dir_"}], "]"}], ":=", 
   RowBox[{"NLimit", "[", 
    RowBox[{"f", ",", 
     RowBox[{"var", "\[Rule]", "x0"}], ",", "dir"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`limit", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"var_", "\[Rule]", "x0_"}], ",", "dir_"}], "]"}], "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Numerator", "[", "f", "]"}], ",", 
      "PlotPiecewise`$discontinuous", ",", "Infinity", ",", 
      RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y0", ",", "f0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"f0", "=", 
       RowBox[{"f", "//.", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"disc", ":", "PlotPiecewise`$discontinuous"}], ")"}], "[",
            "z_", "]"}], "/;", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"z", ",", "PlotPiecewise`$discontinuous"}], "]"}]}], 
         "\[RuleDelayed]", 
         RowBox[{"disc", "[", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dz", "=", 
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{"z", ",", "var"}], "]"}], "/.", 
                RowBox[{"var", "\[Rule]", 
                 RowBox[{"N", "@", "x0"}]}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Mean", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"z", "/.", 
                RowBox[{"var", "\[Rule]", 
                 RowBox[{"N", "@", "x0"}]}]}], ",", 
               RowBox[{"z", "/.", 
                RowBox[{"var", "\[Rule]", 
                 RowBox[{"x0", "-", 
                  RowBox[{"0.1", " ", 
                   RowBox[{
                    RowBox[{"Last", "[", "dir", "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1", ",", "dz"}], "]"}]}]}]}]}]}]}], "}"}], 
             "]"}]}], "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"PlotPiecewise`debug", "::", "limit"}], ",", 
        RowBox[{"{", 
         RowBox[{"f0", ",", "f", ",", 
          RowBox[{"var", "\[Rule]", "x0"}], ",", "dir"}], "}"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"y0", "=", 
           RowBox[{"PlotPiecewise`nlimit", "[", 
            RowBox[{"f0", ",", 
             RowBox[{"var", "\[Rule]", "x0"}], ",", "dir"}], "]"}]}], ",", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"y0", "=", 
             RowBox[{"Limit", "[", 
              RowBox[{"f0", ",", 
               RowBox[{"var", "\[Rule]", "x0"}], ",", "dir"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"NumericQ", "[", "y0", "]"}]}], ",", 
              RowBox[{"y0", "=", "Indeterminate"}]}], "]"}]}], "]"}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Power", "::", "infy"}], ",", 
          RowBox[{"Infinity", "::", "indet"}], ",", 
          RowBox[{"NLimit", "::", "noise"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "y0"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`limit", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"var_", "\[Rule]", "x0_"}], ",", "dir_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "y0", "}"}], ",", 
      RowBox[{
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"y0", "=", 
            RowBox[{"f", "/.", 
             RowBox[{"var", "\[Rule]", "x0"}]}]}], ",", 
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{"y0", "=", 
              RowBox[{"Limit", "[", 
               RowBox[{"f", ",", 
                RowBox[{"var", "\[Rule]", "x0"}], ",", "dir"}], "]"}]}], ",", 
             
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"NumericQ", "[", "y0", "]"}]}], ",", 
               RowBox[{"y0", "=", "Indeterminate"}]}], "]"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Power", "::", "infy"}], ",", 
           RowBox[{"Infinity", "::", "indet"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "y0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"PlotPiecewise`$reverseIneq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Less", "\[Rule]", "Greater"}], ",", 
     RowBox[{"Greater", "\[Rule]", "Less"}], ",", 
     RowBox[{"LessEqual", "\[Rule]", "GreaterEqual"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`reverseIneq", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"rel", ":", "PlotPiecewise`$inequality"}], ")"}], "[", "args__",
      "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"rel", "/.", "PlotPiecewise`$reverseIneq"}], ")"}], "@@", 
    RowBox[{"Reverse", "@", 
     RowBox[{"{", "args", "}"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`inDomain", "[", "]"}], ":=", 
   RowBox[{"LessEqual", "@@", 
    RowBox[{"PlotPiecewise`domain", "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "3"}], "}"}], "]"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`inDomain", "[", "dom_", "]"}], ":=", 
    RowBox[{"LessEqual", "@@", 
     RowBox[{"dom", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "3"}], "}"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"annotatedPoints", "--"}], " ", "returns", " ", "list", " ", "of",
     " ", "abscissas", " ", "to", " ", "be", " ", "\"\<annotated\>\"", " ", 
    "with", " ", 
    RowBox[{"dots", "/", "asymptotes"}], " ", 
    RowBox[{"boundaryPoints", "--"}], " ", "returns", " ", "list", " ", "of", 
    " ", "boundaries", " ", "numbers", " ", "between", " ", "pieces", " ", 
    RowBox[{"interiorPoints", "--"}], " ", "returns", " ", "list", " ", "of", 
    " ", "points", " ", "where", " ", "the", " ", "denominator", " ", "is", 
    " ", "zero"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`annotatedPoints", "[", 
     RowBox[{"allpieces_", ",", "domain_", ",", "additionalpoints_"}], "]"}], 
    ":=", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"PlotPiecewise`boundaryPoints", "[", 
         RowBox[{"allpieces", ",", "domain"}], "]"}], ",", 
        RowBox[{"PlotPiecewise`interiorPoints", "[", 
         RowBox[{"allpieces", ",", "domain"}], "]"}], ",", 
        "additionalpoints"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`boundaryPoints", "[", 
     RowBox[{"allpieces_", ",", 
      RowBox[{"domain", ":", 
       RowBox[{"{", 
        RowBox[{"var_", ",", "_", ",", "_"}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"conditions", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Equal", "@@@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Last", "/@", "allpieces"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"HoldPattern", "@", 
                RowBox[{"Inequality", "[", 
                 RowBox[{
                 "a_", ",", "rel1_", ",", "b_", ",", "rel2_", ",", "c_"}], 
                 "]"}]}], "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PlotPiecewise`reverseIneq", "[", 
                  RowBox[{"rel1", "[", 
                   RowBox[{"a", ",", "b"}], "]"}], "]"}], ",", 
                 RowBox[{"rel2", "[", 
                  RowBox[{"b", ",", "c"}], "]"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"rel", ":", "PlotPiecewise`$inequality"}], ")"}], 
                "[", 
                RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PlotPiecewise`reverseIneq", "[", 
                  RowBox[{"rel", "[", 
                   RowBox[{"a", ",", "b"}], "]"}], "]"}], ",", 
                 RowBox[{"rel", "[", 
                  RowBox[{"b", ",", "c"}], "]"}]}], "}"}]}]}], "}"}]}], 
           "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"PlotPiecewise`debug", "::", "annotation"}], ",", 
         "conditions"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"var", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"(*", 
           RowBox[{"deletes", " ", "no", " ", "soln", " ", 
            RowBox[{
             RowBox[{"{", "}"}], "'"}], "s"}], "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"PlotPiecewise`solve", "[", 
              RowBox[{
               RowBox[{"#", "&&", 
                RowBox[{"PlotPiecewise`inDomain", "[", "domain", "]"}]}], ",",
                "var"}], "]"}], "&"}], "/@", "conditions"}], ",", "1"}], 
          "]"}]}], "/.", 
        RowBox[{"var", "\[Rule]", 
         RowBox[{"{", "}"}]}]}]}]}], " ", 
     RowBox[{"(*", 
      RowBox[{"no", " ", "BPs", " ", "in", " ", "domain"}], "*)"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`interiorPoints", "[", 
     RowBox[{"allpieces_", ",", 
      RowBox[{"domain", ":", 
       RowBox[{"{", 
        RowBox[{"var_", ",", "_", ",", "_"}], "}"}]}]}], "]"}], ":=", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"formula", ",", "condition"}], "}"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"solns", "=", 
               RowBox[{"PlotPiecewise`solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Denominator", "[", 
                    RowBox[{"formula", ",", 
                    RowBox[{"Trig", "\[Rule]", "True"}]}], "]"}], "\[Equal]", 
                   "0"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"condition", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LessEqual", "\[Rule]", "Less"}], ",", 
                    RowBox[{"GreaterEqual", "\[Rule]", "Greater"}]}], "}"}]}],
                    ")"}], "&&", 
                  RowBox[{"LessEqual", "@@", 
                   RowBox[{"PlotPiecewise`domain", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "3"}], "}"}], "]"}], 
                    "]"}]}]}], ",", "PlotPiecewise`var"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{
              RowBox[{"PlotPiecewise`var", "/.", "solns"}], "/.", 
              RowBox[{"PlotPiecewise`var", "\[Rule]", 
               RowBox[{"{", "}"}]}]}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Numerator", "[", "formula", "]"}], ",", 
               "PlotPiecewise`$discontinuous", ",", "Infinity", ",", 
               RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"solns", "=", 
                 RowBox[{"PlotPiecewise`solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Numerator", "[", "formula", "]"}], "\[Equal]", 
                    "0"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"condition", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LessEqual", "\[Rule]", "Less"}], ",", 
                    RowBox[{"GreaterEqual", "\[Rule]", "Greater"}]}], "}"}]}],
                     ")"}], "&&", 
                    RowBox[{"LessEqual", "@@", 
                    RowBox[{"PlotPiecewise`domain", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "3"}], "}"}], "]"}], 
                    "]"}]}]}], ",", "PlotPiecewise`var"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{
                RowBox[{"PlotPiecewise`var", "/.", "solns"}], "/.", 
                RowBox[{"PlotPiecewise`var", "\[Rule]", 
                 RowBox[{"{", "}"}]}]}]}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
      RowBox[{"Transpose", "@", "allpieces"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sowAnnotations", "-", 
     RowBox[{"Sows", " ", "irregular", " ", "points"}]}], ",", 
    RowBox[{
     RowBox[{"tagged", " ", "with", " ", "three", " ", "ids"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<filled\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\"\<empty\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\"\<asymptote\>\"", "\[Rule]", "x"}], ";"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise`sowAnnotations", "[", 
    RowBox[{"allpieces_", ",", 
     RowBox[{"domain", ":", 
      RowBox[{"{", 
       RowBox[{"var_", ",", "a_", ",", "b_"}], "}"}]}], ",", 
     RowBox[{"{", "}"}]}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`sowAnnotations", "[", 
     RowBox[{"allpieces_", ",", 
      RowBox[{"domain", ":", 
       RowBox[{"{", 
        RowBox[{"var_", ",", "a_", ",", "b_"}], "}"}]}], ",", "points_List"}],
      "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"PlotPiecewise`debug", "::", "annotation"}], ",", 
        RowBox[{"\"\<sowAnn\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"allpieces", ",", "points"}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"PlotPiecewise`sowAnnotations", "[", 
           RowBox[{"allpieces", ",", "domain", ",", "##"}], "]"}], "&"}], "@@@", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"First", "[", "#", "]"}], "\[Equal]", "a"}], ",", 
               "Indeterminate", ",", "a"}], "]"}], "}"}], "~", "Join", "~", 
            "#", "~", "Join", "~", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "\[Equal]", "b"}], ",", 
               "Indeterminate", ",", "b"}], "]"}], "}"}]}], ",", "3", ",", 
           "1"}], "]"}]}], "&"}], "@", 
       RowBox[{"SortBy", "[", 
        RowBox[{"points", ",", "N"}], "]"}]}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`sowAnnotations", "[", 
     RowBox[{"allpieces_", ",", 
      RowBox[{"domain", ":", 
       RowBox[{"{", 
        RowBox[{"var_", ",", "_", ",", "_"}], "}"}]}], ",", "xminus_", ",", 
      RowBox[{"x0_", "?", "NumericQ"}], ",", "xplus_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "y0", ",", "yplus", ",", "yminus", ",", "f0", ",", "fminus", ",", 
        "fplus"}], "}"}], ",", 
      RowBox[{
       RowBox[{"f0", "=", 
        RowBox[{"First", "[", 
         RowBox[{
          RowBox[{"Pick", "@@", 
           RowBox[{"MapAt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "/.", 
                 RowBox[{"var", "\[Rule]", "x0"}]}], "&"}], "/@", "#"}], 
              "&"}], ",", 
             RowBox[{"Transpose", "@", "allpieces"}], ",", "2"}], "]"}]}], "/.", 
          RowBox[{
           RowBox[{"{", "}"}], "\[Rule]", 
           RowBox[{"{", "Indeterminate", "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"y0", "=", 
          RowBox[{"f0", "/.", 
           RowBox[{"var", "\[Rule]", 
            RowBox[{"N", "@", "x0"}]}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Power", "::", "infy"}], ",", 
           RowBox[{"Infinity", "::", "indet"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"xminus", "=!=", "Indeterminate"}], ",", 
         RowBox[{"(*", 
          RowBox[{"xminus", "\[NotEqual]", 
           RowBox[{"left", " ", "endpoint"}]}], "*)"}], 
         RowBox[{
          RowBox[{"fminus", "=", 
           RowBox[{"First", "[", 
            RowBox[{
             RowBox[{"Pick", "@@", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "/.", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"Mean", "[", 
                    RowBox[{"{", 
                    RowBox[{"xminus", ",", "x0"}], "}"}], "]"}]}]}], "&"}], "/@",
                   "#"}], "&"}], ",", 
                RowBox[{"Transpose", "@", "allpieces"}], ",", "2"}], "]"}]}], 
             "/.", 
             RowBox[{
              RowBox[{"{", "}"}], "\[Rule]", 
              RowBox[{"{", "Indeterminate", "}"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"yminus", "=", 
           RowBox[{"PlotPiecewise`limit", "[", 
            RowBox[{"fminus", ",", 
             RowBox[{"var", "\[Rule]", "x0"}], ",", 
             RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}]}], ";"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"xplus", "=!=", "Indeterminate"}], ",", 
         RowBox[{"(*", 
          RowBox[{"xplus", "\[NotEqual]", 
           RowBox[{"right", " ", "endpoint"}]}], "*)"}], 
         RowBox[{
          RowBox[{"fplus", "=", 
           RowBox[{"First", "[", 
            RowBox[{
             RowBox[{"Pick", "@@", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "/.", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"Mean", "[", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "xplus"}], "}"}], "]"}]}]}], "&"}], "/@",
                   "#"}], "&"}], ",", 
                RowBox[{"Transpose", "@", "allpieces"}], ",", "2"}], "]"}]}], 
             "/.", 
             RowBox[{
              RowBox[{"{", "}"}], "\[Rule]", 
              RowBox[{"{", "Indeterminate", "}"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"yplus", "=", 
           RowBox[{"PlotPiecewise`limit", "[", 
            RowBox[{"fplus", ",", 
             RowBox[{"var", "\[Rule]", "x0"}], ",", 
             RowBox[{"Direction", "\[Rule]", 
              RowBox[{"-", "1"}]}]}], "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "yminus", "]"}], "\[Equal]", "Infinity"}], "||", 
          RowBox[{
           RowBox[{"Abs", "[", "yplus", "]"}], "\[Equal]", "Infinity"}]}], 
         ",", 
         RowBox[{"Sow", "[", 
          RowBox[{"x0", ",", "\"\<asymptote\>\""}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumericQ", "[", "y0", "]"}], ",", 
         RowBox[{"Sow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0"}], "}"}], ",", "\"\<filled\>\""}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"PlotPiecewise`debug", "::", "annotation"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0", ",", "f0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"xminus", ",", "yminus", ",", "fminus"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"xplus", ",", "yplus", ",", "fplus"}], "}"}]}], "}"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "#"}], "}"}], ",", "\"\<empty\>\""}], "]"}], 
         "&"}], "/@", 
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"yminus", ",", "yplus"}], "}"}], ",", "NumericQ"}], 
            "]"}], ",", "y0"}], "]"}]}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"initialization", " ", "of", " ", "context", " ", "variables"}], 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`init", "[", 
     RowBox[{
      RowBox[{"f", ":", 
       RowBox[{"HoldPattern", "@", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"pieces_", ",", "default_"}], "]"}]}]}], ",", 
      RowBox[{"domain", ":", 
       RowBox[{"{", 
        RowBox[{"var_", ",", "_", ",", "_"}], "}"}]}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PlotPiecewise`domain", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"domain", ",", "Infinity"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotPiecewise`var", "=", "var"}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlotPiecewise`allpieces", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"default", "=!=", "Indeterminate"}], ",", 
          RowBox[{"Append", "[", 
           RowBox[{"pieces", ",", 
            RowBox[{"(*", 
             RowBox[{
             "add", " ", "True", " ", "case", " ", "to", " ", "pieces"}], 
             "*)"}], 
            RowBox[{"{", 
             RowBox[{"default", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Head", "[", "#", "]"}], "===", "Not"}], ",", 
                  RowBox[{"Reduce", "[", "#", "]"}], ",", "#"}], "]"}], "&"}],
                "@", 
               RowBox[{"Simplify", "[", 
                RowBox[{"Not", "[", 
                 RowBox[{"Or", "@@", 
                  RowBox[{"(", 
                   RowBox[{"Last", "/@", "pieces"}], ")"}]}], "]"}], 
                "]"}]}]}], "}"}]}], "]"}], ",", "pieces"}], "]"}], "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"formula_", ",", 
           RowBox[{"HoldPattern", "@", 
            RowBox[{"Or", "[", "e__", "]"}]}]}], "}"}], "\[RuleDelayed]", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"formula", ",", "#"}], "}"}], "&"}], "/@", 
            RowBox[{"List", "[", "e", "]"}]}], ")"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotPiecewise`$discontinuous", "=", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<PiecewiseExpand\>\"", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "Automatic", "\[Rule]", "PlotPiecewise`$discontinuousAuto"}], ",", 
          RowBox[{"All", "\[Rule]", "PlotPiecewise`$discontinuousAll"}], ",", 
          
          RowBox[{"None", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"PlotPiecewise`debug", "::", "debug"}], ",", 
        RowBox[{"\"\<f\>\"", "\[Rule]", "f"}]}], "]"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"The", " ", "main", " ", "plotting", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise`plot", "[", 
     RowBox[{
      RowBox[{"f", ":", 
       RowBox[{"HoldPattern", "@", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"pieces_", ",", "default_"}], "]"}]}]}], ",", 
      RowBox[{"domain", ":", 
       RowBox[{"{", 
        RowBox[{"var_", ",", "a_", ",", "b_"}], "}"}]}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "PlotPiecewise`var", ",", "PlotPiecewise`domain", ",", 
        "PlotPiecewise`allpieces", ",", "PlotPiecewise`$discontinuous"}], 
       "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"INITIALIZATION", ":", "PlotPiecewise`var"}], ";", 
        "\[IndentingNewLine]", "PlotPiecewise`domain", ";", 
        "\[IndentingNewLine]", "PlotPiecewise`allpieces", ";", 
        "\[IndentingNewLine]", "PlotPiecewise`$discontinuous"}], "*)"}], 
      RowBox[{
       RowBox[{"PlotPiecewise`init", "[", 
        RowBox[{"f", ",", "domain", ",", "opts"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"PlotPiecewise`debug", "::", "plot"}], ",", 
         RowBox[{
         "\"\<allpieces\>\"", "\[Rule]", "PlotPiecewise`allpieces"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"POINTS", " ", "OF", " ", "INTEREST"}], "*)"}], 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"annotatedpoints", "=", 
            RowBox[{"PlotPiecewise`annotatedPoints", "[", 
             RowBox[{
             "PlotPiecewise`allpieces", ",", "PlotPiecewise`domain", ",", 
              RowBox[{"OptionValue", "[", "\"\<AdditionalPoints\>\"", "]"}]}],
              "]"}]}], ",", 
           RowBox[{"plotopts", "=", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"Options", "[", "Plot", "]"}], ",", 
                RowBox[{"Except", "[", 
                 RowBox[{"Exclusions", "\[Rule]", "_"}], "]"}]}], "]"}]}], 
             "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"PlotPiecewise`debug", "::", "plot"}], ",", 
            RowBox[{
            "\"\<annotatedpoints\>\"", "\[Rule]", "annotatedpoints"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", "ANNOTATIONS", "*)"}], 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"annotations", "=", 
              RowBox[{"Last", "@", 
               RowBox[{"Reap", "[", 
                RowBox[{
                 RowBox[{"PlotPiecewise`sowAnnotations", "[", 
                  RowBox[{
                  "PlotPiecewise`allpieces", ",", "PlotPiecewise`domain", ",",
                    "annotatedpoints"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<asymptote\>\"", ",", "\"\<empty\>\"", ",", 
                   "\"\<filled\>\""}], "}"}]}], "]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{"PlotPiecewise`debug", "::", "plot"}], ",", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<asymptote\>\"", ",", "\"\<empty\>\"", ",", 
                   "\"\<filled\>\""}], "}"}], "\[Rule]", "annotations"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"PROCESS", " ", "PLOT"}], "*)"}], 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"exclusions", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Exclusions", "]"}], "===", 
                    "None"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"OptionValue", "[", "Exclusions", "]"}], "}"}], 
                    "]"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"PlotPiecewise`var", "\[Equal]", "#"}], "&"}], "/@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"First", "@", "annotations"}], "]"}]}]}], "]"}]}], 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"can", "'"}], "t", " ", "we", " ", "use", " ", 
                  RowBox[{"annotatedpoints", "?"}]}], "*)"}], "}"}], ",", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"curves", "=", 
                   RowBox[{"Plot", "[", 
                    RowBox[{"f", ",", "domain", ",", 
                    RowBox[{"Evaluate", "@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Exclusions", "\[Rule]", "exclusions"}], "}"}], 
                    ",", "plotopts"}], "]"}]}]}], "]"}]}], "}"}], ",", 
                 RowBox[{"Show", "[", 
                  RowBox[{"curves", ",", 
                   RowBox[{"Graphics", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "1", "]"}], "[", "1", "]"}], 
                    ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", "1", "]"}], "[", "1", "]"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PlotStyle", "]"}], "/.", 
                    RowBox[{"Automatic", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], ",", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Map", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Asymptote", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"PlotRange", "[", "curves", "]"}]}], ",", 
                    "opts"}], "]"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"EmptyDot", "[", 
                    RowBox[{"#", ",", "opts"}], "]"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"FilledDot", "[", 
                    RowBox[{"#", ",", "opts"}], "]"}], "&"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Depth", "[", "#", "]"}], ">", "2"}], ",", 
                    RowBox[{"First", "[", "#", "]"}], ",", "#"}], "]"}], 
                    "&"}], "/@", "annotations"}]}], "}"}]}], "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}]}], 
        "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "user"}], "-", "interface"}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPiecewise", "[", 
     RowBox[{
      RowBox[{"f", ":", 
       RowBox[{"HoldPattern", "@", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"pieces_", ",", "default_"}], "]"}]}]}], ",", "domain_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"PlotPiecewise`plot", "[", 
     RowBox[{"f", ",", "domain", ",", "opts"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "tries", " ", "to", " ", "expand", " ", "f", " ", "as", " ", "a", " ", 
    "Piecewise", " ", "function"}], "*)"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"PlotPiecewise`pweMethods", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Simplification\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<EliminateConditions\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<RefineConditions\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<ValueSimplifier\>\"", "\[Rule]", "None"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"domain", ":", 
      RowBox[{"{", 
       RowBox[{"var_", ",", "a_", ",", "b_"}], "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "PlotPiecewise`graphics", "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"restrict", " ", "var", " ", "in", " ", 
       RowBox[{"PiecewiseExpand", "/", "Reduce"}]}], "*)"}], 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a0", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "<", "a"}], ",", "#", ",", 
               RowBox[{"#", "-", 
                RowBox[{"1", "/", "2"}]}]}], "]"}], "&"}], "@", 
            RowBox[{"Floor", "[", "a", "]"}]}]}], ",", 
          RowBox[{"b0", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", ">", "b"}], ",", "#", ",", 
               RowBox[{"#", "+", 
                RowBox[{"1", "/", "2"}]}]}], "]"}], "&"}], "@", 
            RowBox[{"Ceiling", "[", "b", "]"}]}]}]}], "}"}], ",", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"pwf", "=", 
            RowBox[{"Assuming", "[", 
             RowBox[{
              RowBox[{"a0", "<", "var", "<", "b0"}], ",", 
              RowBox[{"PiecewiseExpand", "[", 
               RowBox[{
                RowBox[{"f", "/.", 
                 RowBox[{
                  RowBox[{"dis", ":", 
                   RowBox[{
                   "PlotPiecewise`$discontinuousAll", "[", "_", "]"}]}], 
                  "\[RuleDelayed]", 
                  RowBox[{"Piecewise", "[", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"cond_", "/;", 
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"cond", ",", 
                    RowBox[{"C", "[", "_", "]"}]}], "]"}]}]}], 
                    "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Reduce", "[", 
                    RowBox[{"#", ",", "var", ",", 
                    RowBox[{"DeleteDuplicates", "@", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"C", "[", "_", "]"}], ",", "Infinity"}], 
                    "]"}]}]}], "]"}], "&"}], "/@", 
                    RowBox[{"LogicalExpand", "[", 
                    RowBox[{"cond", "/.", 
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"And", "[", 
                    RowBox[{"e__", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#", ",", "var"}], "]"}], "&"}], ")"}]}], "]"}], 
                    "]"}], "\[RuleDelayed]", 
                    RowBox[{"Reduce", "[", 
                    RowBox[{"And", "[", "e", "]"}], "]"}]}]}], "]"}]}], 
                    ")"}]}]}], "]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"List", "@@", 
                    RowBox[{"Reduce", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dis", "\[Equal]", 
                    RowBox[{"C", "[", "1", "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], 
                    "&&", 
                    RowBox[{"a0", "<", "var", "<", "b0"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"C", "[", "1", "]"}], ",", "x"}], "}"}], ",", 
                    RowBox[{"Backsubstitution", "\[Rule]", "True"}]}], 
                    "]"}]}]}], "]"}], ",", "Indeterminate"}], "]"}]}]}], ",", 
                
                RowBox[{"Method", "\[Rule]", "PlotPiecewise`pweMethods"}]}], 
               "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "pwf", "]"}], "===", "Piecewise"}], ",", 
            RowBox[{"PlotPiecewise`graphics", "=", 
             RowBox[{"PlotPiecewise`plot", "[", 
              RowBox[{"pwf", ",", "domain", ",", "opts"}], "]"}]}], ",", 
            RowBox[{"PlotPiecewise`graphics", "=", 
             RowBox[{"PlotPiecewise`plot", "[", 
              RowBox[{
               RowBox[{"Piecewise", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"f", ",", 
                    RowBox[{
                    RowBox[{"-", "Infinity"}], "<", "var", "<", 
                    "Infinity"}]}], "}"}], "}"}], ",", "Indeterminate"}], 
                "]"}], ",", "domain", ",", "opts"}], "]"}]}]}], "]"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "PlotPiecewise`graphics"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097196249343243`*^9, 3.80971962864644*^9}, {
  3.897208781173283*^9, 3.897208785926613*^9}, {3.89729411281208*^9, 
  3.897294113188251*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a99f547d-f3d9-4dbe-b4c5-78a5ab7b299f"],

Cell[BoxData["\<\"/Users/ant/Sites/JumpStartIM/assets/images/functions\"\>"], \
"Output",
 CellChangeTimes->{3.8972087863947067`*^9, 3.897293911164521*^9, 
  3.897294116491016*^9, 3.8972942155368233`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"078312e7-717c-404d-86e5-ec4880019082"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897294195879683*^9, 
  3.8972941968987913`*^9}},ExpressionUUID->"0d7fb5a5-e047-4c93-9da8-\
e964130e3092"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{"(", 
          RowBox[{"x", "+", "2"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "<=", "x", "<", "1"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"9", ",", 
        RowBox[{"1", "<=", "x", "<", "5"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", "8"}], ")"}]}], ",", 
        RowBox[{"5", "<=", "x", "<=", "8"}]}], "}"}]}], "\[IndentingNewLine]",
      "}"}], ",", "Indeterminate"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"PlotPiecewise", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
    RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "10000"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "15"}], "]"}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "15", ",", "2"}], "]"}], "}"}]}], ",", 
    RowBox[{"TicksStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "->", 
     RowBox[{"Directive", "[", "16", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "->", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Style", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldForm", "[", 
           RowBox[{"y", "==", 
            RowBox[{"f", "[", "x", "]"}]}], "]"}], ",", "18"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "8"}], "}"}]}], "]"}], "}"}]}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans1.svg\>\"", ",", "\"\<trans1.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.847532839746132*^9, {3.8475328747438183`*^9, 3.84753287487076*^9}, {
   3.847532904916058*^9, 3.847533012582322*^9}, {3.897058568383511*^9, 
   3.8970589119036083`*^9}, {3.8970589699065447`*^9, 3.897059047308299*^9}, {
   3.8970648371064587`*^9, 3.897064867300941*^9}, {3.897080533874935*^9, 
   3.8970805440786324`*^9}, {3.8970809170939627`*^9, 3.89708096392625*^9}, {
   3.89729394913175*^9, 3.897294024141103*^9}, {3.8972941492319736`*^9, 
   3.8972941495022383`*^9}, {3.8972942436885757`*^9, 3.897294384133092*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"9c89d5d8-e722-4f9c-b5f1-2c7a506ae065"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.], 
       LineBox[CompressedData["
1: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
3ejUjwqJOL/ygFoP9EFywp58sSIiLv8j9nGisA/ktBVYEV+IWOiovZNuRh/s
/Nr3daqc8z6C/C/feN4Hs48SKHnVRFx87hQ9JboPjulvf72ujohVBPUp1bf7
wF6xoWr+JxFXidzlU7vcB7RFy+P5rZx9DRVdcT/dBw5ZJecVOjj6zl9PvXDp
A5MXcgtDXUTMynpVXGDbBwOuHkznfiIOOSWyls+Mk2dV0oWvw0Qc9c2c13F7
H4jJVh+/OcHJTzmxL1SzD14NdVbNzBCxdaWdUL5yH1TS+pLKKJy+fJQ3Fa3g
5Otond3BIGLy9Qsei0J9sD7/Q8krFuf7cNxAM4TRC9t/htFPcUvh3oBdR770
9YJA6Z7cLn4pzC6bD1qs6QW3qbmOPBEp/HDsw/eCd73gteJhkL+kFEag3bk6
oRdUxWSfdEpLYe5W+4F713vh7L6Y9WlyUngoVjcv07MXLjnQtJQVpbChtlLm
Lqte2OBokRe6Vgq/ECp40qXbCx7JD1+bbZDC6x5yW25c3QtHPgKxaKMULrZh
zgfx9EIPoX/urrYULp9dqtsz3gNiHqT9e/Sk8PiOMi9o7gHqnanVOYZSWKVy
PW1nUQ+cnuxwv7hTCt+g77cMSOmBp2sL1k7uksJj3rKJr8N7wCHpmn2FmRSu
+jQrYePXA6XiukshB6RwRV7ogdxDPdBl/Wft7EEp3DRafoNo3AP3fp8p+uLA
6aOu+NIG1R4gaUzXGh6RwsmRZYmFYj3Ac9nZPtlFCh+MOJ2/h9INrwS+WHuc
kMJrdVqjw/91A/OkUHX7SSnMJzPs0VDRDb2ipu8yz0hhpw5uj8iMbjibHiB+
8qwUbjTrVFuM6YYSqYixXxelsD352IB/YDfEfHuo//yqFGbuf3oi3rUbVHaH
LkkHS2Gp4H5xvX3d4FLktfPybSlsNNvyvk2rG9ZfMJzdFiGFw8RCVm6U7Yb0
JbpCxn0p3Hey/dytpS741PC/iss7nurvj+MhWqLce93rLvdKoZCihZw3IWkQ
JUIKKWWlKUVRKC2FzPJFsiN75GPvvffeeyQl8fv8/nw+zjnv836/3q9zPufz
NfP+OwEwsh794DnUiTnfVG1c9BaAE9rcfVurO7H5dTVXjf0F4LhdxY4PyTi3
n7AU/SQAFoqnJSuCOrHYZ4kj/qEC4Kv2YDePayf2035Tq81XATi0J143w7IT
G76gBVKxAvAn+7OKsE4n9p7XZUdAggBUeMqLeRzuxN8LXx5YpAgAxuNVF8bq
xLKrkzX6MgRA9NJ8xKFNnZjBm+/v1HIEwH9+5Vb1TAf27H2I5qYCAZCRLeCk
tHZg1ywcnR1LBKAlYf8L85wOrNVJfdfpSgGY2RwnL/GlA1t4vaa6sU4AxLcP
JIa87sBKrb5032oSAPtz+UzanQ5szzuFcfl2Aeg6ZnxWw6gDO+6aY/e9G/cb
P9e3KdUOjM96ry1hQAAiKDqcvns6sMuB73oaRgQgucqINkfowGz8u8tVJgWg
Adu2W2u5HdvYSRffPicAhEtPVk362zGj6ePr3izi/mpd/jda3o4ZLl3W/vlH
ANzeMRfuJLZjw6o3BDJXBcDy57+4JP92TNL0spY0FwGMfdwuLTq3Y2sF6qsc
GwmQL0CV/2bRjj2i03ZivATQULTsoGm1Y99VO4t3bydAT+gVe88D7di9xNft
iyQCfEwh1cQx2rGfU3ssbakEyA1v1NPgacfo7HTbeiYBlmsVG4cm27B6P7lR
7x0EOB91mXywqQ2D3uAObnEC5OVIab/IasMUrZagWZIAnxK4k8+FtmH900rM
d/sIEHTGv6v+ZRt2TPn2vd8HCBAt0byie6sNk2n9CLnyBGhPqO5zN2jDWpWi
nh9EBKDetcvOQW0Y73i0Iq8qASpIjHzrXW3YuGfAzQoNAgSbPn9dw9eGuf67
RzpymgBPJn3PyC22YpFJx/bx6BDgmYh508muVsz9yL+Sp3oE+COn6N5R1IoJ
pIY3D18kgPOzH9I2sa2Y+H3FCzEmBNj1ZDkwybsV+70hT4dpToDu9N7Vvw9b
Mb2uA7mz1wmwobruVfaVVuxSlN+XWGsCnH3r1LtXsxVjq41yk+0JEPu6USJC
phWz2yne2nuPgL8nhw/XUFqxB03ndho4EoCEcd6242jFJB/Zjmc6E4DgWhpK
HG3BrK49ZD96RoD9Cyf8bta2YNdE7BsmPAhgGnLHtSi1BZtmX1zKfE2ApD8X
5eo/tWDSc9K+h98T4O7eU9suuLdg1LS52M++eH9Dh/u6rVuw93nhBywCCaCY
p+ggpNeCFQWqHun4TABlhiLPBcUW7FlmY/y3cAKknVfP4d2Bx6/RCbKOIsAZ
eV7Fu1tasO0pP9a3xxHgl6Hjt965Ziy/m9Lz5TsBMImI0dW2Zkyy9bIcKw3X
s6HjlE9+M6ZS6svxLIsAx7IyI6SjmrGBlWw4nkuAb2fOFz/0asYQR+1yeiEB
9gj7d5Tdb8bENRt2vSwjAKVyhOZ1qRnLflFYrlqN679znr3leDO20T90LK6e
AGpZXxgeUni8SbuH91oI8PwfsSeN1Izd3ybpNtVBgOZHUr7jf5swvwctXIW9
BPBr1X7g09+EmbfY/XEdIoBj717WQnkTNsa9ZDk/RgDbnek/dBObsL8PrE/l
TuP+EFxhXfNvwkqyaqMUFwiweVDz2/zTJkxpke0cukSA/6ZVZJ9eb8JUbpsV
X1shgMGXX4/ytZuwdXleHh3riCDir5vNc6gJ09RNyI7nJoKRZdauAkYThjqz
r9/cTIS0oW69/TxN2LRc6ttmPiLs+BzzKHyyEZOo/yz+H4EICevlrpc1NmLC
6J4ilUKEePUSJ4sfjRgWKl/6iE6EH0VcnjzhjdiU5kyREpsIU7N/jQxeNWKN
+e+Uvu0kgrRBsOg3+0bsuLOIhPNuIn4MT5AfGzRiFvtDPQ/vJULSm8Saf8qN
mFIKn2WILBE+Zuc/fireiIU/upl+7TARgnzfzqVta8QKCCkuXYpESIzjNpz7
1YDZzkznfFcmwqH/3GZCuxqw4jzB27fUidADBSc2FDdgzWZ7Qrs18XiMKH+b
2AbsjqbMsRgtIthFaH7z8G7AKtaJmOw6R4TMLUsz1McNWHUcx8JLfSKQ4k/t
SjBrwIw+1/0+Y0wErxVjkd8nG7Avl9845F0hAtODQjy2vwF7aKFg9cGCCPTZ
LhkeoQbsr2lz85mbRFBYb0J4xNGAHdh7KTvdlgg3z7+Y+DlSj62gZoLLHSJk
69i+YNXWY49ZCsN/HhDBSfKyTmF6PRa59FrG8DERzh5b3nbzcz12hVA3SXMh
ghqPtk+hez3WsLpO1NONCJo8Wvxsm3qsXppdZeCJ1/N9k5aMXj3mKS091/yW
CBsUajLSlOqxaVGJ10e9ifBtnRJVZWc91mNCDOTyJ8ID++vgvLUee3ljcseD
YCLosBWNsIU6LC8jmXkqlAjBsdSw++11WNjaDa9NX4mwaTD5W39+HaZE4nO+
G0MEN/3fidpRdZiF7X/dkEAEUYclh1teddgJf3ZGZjIRZO9xWG9+WIc1Z7zd
wszA4yckn4+4XIfNMadren8Q4YPvjvWLGnVYoe4Rfp18IgxmKESq763Ddlbd
yRUpIUJExqX72wTrMJmjn8Y6K4jw8upR3tertdivR8mv1Wpxvc4U+fIO1WIa
HFlhW5vweAMbR5SqarFz5+PlnrURISNlUfJOUi02PeV16GI3EbTNp4LZAbXY
vsdm34UGiLARC2l86lKLSXeyI91HiFCn92/d0PVaLMO5lv/8JBGyAkgLy9q1
2L/5m/O1s0QQzDq87cWRWmzSaPHUwUUiuFC4d1BZtdj1LbZCf/8QgV/k9V/j
jbVY8IumyzarRDCoe/ThRFcNdvmUJFWZiwT3yIvPS6JrsCruWyf/bSBBU8og
V4xjDfbzTejSNV4S6FXvsvbWqMEijQpJ+7eTQAj1Xhmg1GCCy/Xx0SQS5Fz/
FisyXo1Jv6nBeKkk/L1T138trRprsMhWqWaS4M3GG+ECHtXYfn5fUNpBgnSn
82cLzlVjwismCVvFSbDzdPqLNtFqrDBdMNBTkgR3GmUovYtVmKBV1r95GRIM
Nv31msyvwhbMtOszDpDAd6/Sx0sfqrCXe+rZe+VJcIOrwb3ZpAqLP6Q6wIVI
wHr3uFpJqgp7LB9Ozz9GAsrdzyG8q5UYz9a5WmkNEuxvJFzqLa/E6KLSS8un
8Pw81yKEAiux8c36fnfPkqDy7zr1Y1aVmPmobWLbeRJIDp+rtT9SiVltfqAY
fJEE1eKs4Q2bKzHJFSsVfhMSeA0dHQltrsAe7tfJ7DUjwUHDW0rS4RXYbZOd
0YHXScCUoLOF71ZgO42GiNzWJBC7JTRDUqnAzIN95qpukcB++xsNe4EK7FL8
/hNq90jw+Qbld85AOcaR+oMS8ZAE00cX329PLMf2cx65aOFMAmfLExllT8sx
OvM/wSZXvB7+2XL3M+WYt9Mf1TAPPP5WvusxzHKsMF5pWvg1CVYLlA2xmTIs
pOkWv5sXCZZ+lhxpyy7DNin7hJ70xdc7FYXpvy7Dv6dfErAAXI+npD9dBmVY
+98vMh8+43ocdQzXFSvD5Oy9xbXDSXBaR79D+ncpppFuG5gVSYKZXvd//EWl
2LiKwhO3OBI0lkjH6PmUYqrBCz1riSQIvDYR/9qiFNOc9k8zTSWB69Pl4HLZ
UqzTVYZjZxYJ4haeUKzXl2LiY0lFPhgJ/vQYOJHqSjCOD2IrVwvxep5ryMd/
KsGeyb6IFi4jwUeX+KextiVYflhLg3sVCSSWLZITFEuwV/qCtlr1JPhX5mtP
3VqCbetSfl7UTIIFghD9ZVsxJhJhvDWwgwQVgom08YhirOvqta0Xe0kwdCs3
4tv9Ykxn0dijZBD3z3ERhqNqMXa+TPWu9xgJPt35y4wlFmPbrSld/NO4nhfH
71UNFWEPNrRn35nH+5G1J/Pn9yLMatiT78gSCVTuDHo8dS3CqD67O2L+4vl/
nVEhahdh5zwyhJzWCcL0+226HxlFmLz9wdoj3IKw1Bw57TxdiLXtCeEI3yQI
Ij4f7tpkFWLcu5fDrfkE4W3Monu+ZyE2vgQFQwKC0P3QepbHuBBzzL5rcJws
CFqFh1TP7i7E/IoCrmykCwKnhcMOjr8FmN2n2MH7LEFofrp1OrWkAGvMim9T
3ykIU4sU1fqPBdh8ZPCJQglBGBaRn+26XoBlvnq4b4+0IKwrj3OfOVCAbUs5
7jm3XxCMy/yiLXgKMOE4jssWhwShQ6U5faA+H8sei4mQVxQEhbsSjLMh+RgX
Q/XqbxCErrUFXtFbOLPKPpmrCcJ/67ePrhzNx7yuKWnKaArC1ytfzijw5eP/
CyF20Wfw+u5rbbnRk4eVv5rl49MVBP8Np5I+xeZhmj0ywnUXBGFoBhs+/DgP
c+G4FK1iJAi6Om7cbSfyMI3rjl8JVwQhzNr0oSU5D8socqNXXxWEA30pD01G
c7GBeSfeQzcEYbTa0MIwJRcLML9ms2aD60d06Mp+nottiVA8ee+2ICw2jiJR
nVxskyRnwKkHeH9O2/x2FM7FvkemXOZ9jO+n1PzAvhfDiIvnQx8+FYStTXda
fjtgGJfb8HkNN0E4Sec8rUnFsNhhs2eFLwXhdFOmzaPsHGydUs3u3W8F4YML
5VqmXg7W17b72MwHXM9e83sFSz+wR2q3m039BOHGfj2j1nc/sLDFmI4Dwbie
v+ynq/b8wO4G1evP/ycIXjecPr6pysY4CMPaxhGCsLtBmmx4LRujVo9lisUI
wvHJqrj5DdnYlH7755BvgiB+32/2RnQWdqM9fYUzWRBO/dqweUY1C7sT4l6B
37GwuNNCXmk4Ezty8BjpwA9B6DthqezvnIm93DZTuz5fEHSYhiaYcCbmnem+
wbVYENzNH0gU52VgmoZ8qePlgrD2Sb681TADewXPmxNrBOHvi4mnqSvpmMfi
6C2xRkGQt1TeFuKTjm2fUXReaRWEo5n5mjdk0jG1Hqf1WV2CUJS1P2itLg2T
/Ry3XrxfEN4lHi8MuZmGxYVV3vs5LAg9F05ybeVNw/rvt5rZTgjCgu3DaYP4
VCxPpb60YUYQNB+dSfiukYpJ6mR//vhTEHYe2f6ieSwF09n3YW7TH0E4Nv7g
MI9rCsZ9/mJKxz98fCuvtyAzBTO15Z/z5STDq97XPPNYMuZgkPh13QYyHIxM
1mozSMaYHsdqy7aQwZxV/s1zOQl75JZ/W3kbGfQ2b8lmBidhzxz3vg0lksFz
dPbTj0NJmFDKK7qZEBnU7hf5ibV9xyxzmkXrGWRQWVayDLb/jqnxbv8cIkKG
Qqmv2t0C37EOicPeDDEybG6QH1xLTsRoSqc5nu0hwwer22ektBKxMV+d3hMy
ZAhJDajZOZuA2WGq8jlyZJj9aSG2+0UC9lxSjOf9ETKs/3JpD79oAqb6bumE
lhIZFLa8fOXk+Q3LLkjemKVChp/JIba/cuKxfAXTI27HyZCKeT9Zvy4ec3Fd
GVw7SYZ18T1jDapx2GTes41m2mSofXZnXZZDLDao+i9453kyRGUPqx7OjsG8
P5rG+xqQYWNX6MGq6Wj8PZcuc+0Snk9vypMdO6OxzOy/u9lmZOhTi/jNbxmF
GVMlQ15cI4P+h14GMTgSe5V9yv2sFRlalX/bxXd/xe5KXxwrsSNDd6vBrcvb
vmITgxd+BN8lg5WuQHmDWgTG+/7YJuOHZODaG6nd5fEFG+aj15Y7kYG14P5s
NSscO107uNHPlQzqFLXhlJUwzOZKQDbBA6+XZRAirRyGyY8dHX3wigwSAmkb
sLuh2IeUuudHvchwzXw+aCjtPyzirM6nBB8y7Pl8v2fHeAimtr9A3DWADPd/
6D7cwQrB3m4S2YM+k8HPgepmX/IJ806wjowKI8OZE2z7KulgTDQo6uPtSDII
dvRnnEsMxGwv1HNMxpJhWlbn+yWFAMx809jA6UQyNBif5/b74oeNrM0c4k8l
Q/kJQvK/3R+xHcUDPM6ZZKjiufrj/TsfbLK25PgZjAz9z2+JnNvujdnE+HFV
FpBhQ+Wew37+77GgRxcOyZaS4ciAQ+QWTi9M7z1P159KMvx5wD2mt+UtVn4/
9J9NHZ5vldLBxXpPrPI/6XfHmnH9ExoG/aI8sPv5kQEcHWRQJHdr+qQ+x7q/
87NseshwmLXNYtbVBasdsSDLD5Ih8aLtLQ1+Z+zRZPSL5FEyyHndbcuUc8Aa
RjpvU6bIMLKlIma83R5LE1ur6ZgjQzGD3P6xwxI7f4jv6+lfZFDWtzaN5r6I
PfHcOsv8S4ZtGP0W18tN2Pnm5YS2NTLsvfnNVjVTDw3ONk6qrKdA6fmmyDnm
dbRO+3PAlk0USLFfZXzjskfNTnoFLlspoPtL5Z/Y/Qfo8Pw/YwMBCiQa1wr5
VjohdaMPdkJkCphdyjCLuuiCtvqSVt1pFGiaMOWOevMcmRI9/p1nUWDHou+M
1isPZGc6cr9elAJn7WwfzD30ROJf5W4clqCAxQnWKbmoN8hGxr76nxQF9tRI
yb2tfYesXwTF3dpPgY+RaSPnrN6j5V1pq6qHKLCQ+WH84zpvtC8LK+FQpIDi
lhSveAcfxBZO2WINFHB4qdLtI/ARhZQE5B1So0D4cVKN9js/1Iys5xNOUAA7
Ks//gicApcdLBRLOUKDatOKnV1AgkjDtTmnSoUB50X9ONuRgpDPkeFL9AgUy
LwzG0b5/Qjxxm3QFjShw2ktRMEwkBF2/+by+5jIFkn2ixEK7Q5DLn6nKQ1cp
4JNY6fki+j8kUal+ZM2SAtZWAvnt10ORp80r1l0bfH8lvpPEQ2Howfl8B83b
FPCQSnJ8xRGOtssOa256QAGNrIdONjnhyLz3l++9RxRwufy74bDnF3Ssfunc
sacUSAr3+2ulGYE6Pwy9znlOASPu/vIe7q+IdSpPacdLCjg/7puUr/uK5jRe
Xxl5QwF/b66+tTeRyJGkvmbwgQJSBR1icUZRyHvXDJ+kHwWO8BkL+u+KRnrS
br4jQbiev9e1TPdHo3ruzf5n/6NA+p+L45LfYlA722krLQLvT0BLTaN1LPq0
tWflfTQFBC/8M8oSj0ObZ6XMf8ZTwHFPm+LLhTjETbY+mpJEgZZPLdP5CfEo
fau/l2g6BeIkXi0MPP6GljVSLixkU+BH1L6racwEtKib42eXR4HeyluiQY8S
UMD5lLMtRRTI/cu79W5/AqoKDHoUXE4B2sOMbhflRJSZaCciUEMB2fV5bc8i
E5Es7wH54QYKuNODxSO2fkd6xiNlYa0UuPDs5eWVm9+RnJNbI38XBQaX6vPU
67+jTwOksx19FJjMlOQt3peE8invNc4PU0CG1zDa/G0S+qC6kpY+ToF9loO3
ln4moZlkPX/HGTx/krMIppuM1i8GL04uUGC46s7Kw8xkFOHQVPDjNwUMiWi3
nnAK+vlzedODfxQ4FU1Vtnicgv6irRW9HEKwfPLs0xsDKehdDf9qJI8Q7Djq
Hx2mkoq6pddihLcIwSZ5xX+1Uakovb67YpFfCPYUJYUx+NOQknWsWQpRCMo+
K8p+tk5Dj1ss7u0Qwte7sSaJjWlI023731mGEPzJIr3BZNNR7fqoZSsRIdjy
pMf1hVc6WvdQ2r5+lxC0a60PO76UjnJkww0/7hECUVv5GHm9DHTwB0/uZhl8
v4CKTvaPDCTvaeDbJScENrr7TMVFMtGoVsCg/xEhkDKKrDV7kol0Bkvi1isJ
QZTdw+sfhjORxo+h0WoVIQhpNB5bUstCv6/Ofjp+XAgaikk5jmFZSId7rDLq
pBAUFIpnL2zMRkfG6qxuaguBtMDpsJBr2ag96Kt7xzkh0LtZmaRcnY02+lgT
YwxwvQjGcWTpH2jWiEWXuITnr5m/zPvqB3Kh5QW+MxWC+69dbv2a+4FCmTqv
L1wTgrfC5+qIZ3PQw7maP5U3hcD8x5OLYuk5qHejUut/dkJwd+zpIQMGhuYF
A6Qv3xUCjqve/zBHDGX/7F+rdBACzUmOKWo/hghk+jF/JyFwv5Jr2sTKRaKb
VDiIrkKwgTj+O1YrF/XOnT/0wF0ILE7lhTm55CIJ4Ys9Cq+EwFWSXTCemIsk
6Sc5498JgdN76SXtoVyUbSz50dlHCD6iXU3F5Dz0y+dvmHwArq93hFiLeh4a
D07bE/4J76dt45s+hzx0c9xsp3WYEPjOvbzhFpWHInj++Q9+FQKxrD2z8q15
yFPomZtaLD6++eHLsc35aNXu7yB3Iq4vx1n//fL5aLefSc6dFCGocWrKvmud
jwa5kjcdyxQCv7D+c7rB+egCWqzBcoTAmb/dFyrz0Z1bony7CoRAjcN5Smwt
HzFHj+VMlOB+C4hNj5IuQM+ktcdMKnF/ZLr77TQtQHcyTrnJ1glBDOu0SKJ3
AdqmcChwtkkIxqQDWS0FBcjiFd8eo3Yh4C7wlV36VYA0RJolxXqEoGeVmpW4
qxANub+MChkQgpanLyYdzxciyUHJT1yjQhD38st+8ChE655j64snhUBZQXPq
U1oherOoNHxwTgiSbwVlL40Xosjo+CMbfuH5zrQeuMwoQjZ6vNx5y0Lwgfhp
h9mpIjRdp3dSYk0IcrFtuy47F6FlLy+uOS4qRAvwBi/FF6FcdsbBaxupcHsi
WfxFfxES+FXbobiVChe3aFzaTSpG2/Oaf//dToW1erONFqrFqNSw7J2lIBVc
WFIlgfeLEa9CbMBBGhUKSM7LN78Wo83jjsLfhakgopPVcrK5GCW9PUIni1LB
hPilbOemEjTmMPKyQxyP70SWCThcgtpkXe6ckaKCrM2hmI1WJejc/q21rP1U
2P1FudbtUwl6JOYW1nmQCj2ujZafq0qQ8eTEnLoCnu8okfJ9XSkqX1T+vg2o
UPizS95EphTNVz+b8lDF42l4baCblKLCTykh4xpUeMqeH633KkWiSc1FMaep
8Dq0Q0k0rxQpfRy8StOhwv0o+yjbn6WoH3/hj+tRQVj/vcd50TJ0LL1q/XVD
KgydDtp+UrcMnf4asanGhAovynS/ybuVoeF22yc+5lSYmPyQV5hShg5277Tf
bEmFPb5PRzXGyhBxV2VTtzU+380go5NWjj6ZX04MsqfCF2bm6uaT5ajHvm/D
pvtUCFEs1Zd1KkffinRqGx2poM9pIvYrrhwdGU0gaD2hgjR/7+fSznJkxfGv
+vszKgz8xyflw1+BpEyOrNx9QQW9ziLpFaUKFPnKNHzkNRW+Bu1WM7avQN9W
HXPS31NBMNyBuzq8Aplec9W+/ZEKx3TPyrc1VKDqz/eNOwOpcMaj2bWbpxKV
0o06w0OoQL46qOx0sBI9tJRqpn2hQk7JZyLlRiXKXJ5Wno+igustNa+8oEoU
7vJp5/d4KvAU3HbhrqxEGu3yz1hJVLgeoOVxbK0SOdwrOTedRgV3oWRO+t4q
ZN4PITey8X71cIqtv1SFllUjzWpzqdC7Z81k+F0VYkyu+fkUUSFD+NlWs1x8
3FT1xKZyKtzyT61pW6hCpkyHm53VVDh+sUHh8q5qdK82kNu/gQod+Q/oT89X
IzWdGOr6ViqcTqzYHuRRjUIoMf9Vd1Lh8fGvjmfTq1Fy/Mew431UqBC1fis4
Uo3uKNgzooeosOTem9YkVINyeI9ushqnQt/7znN7T9Sgoriftp3TVIja4cbj
+qgG6X8I0ohdoMLbv0Kmw/E1yNd2v//V37jfHA/uH+yqQa9oKeZVK1QwhCdb
bDbWom284qHeHDT46ytx+BCrFp2pdL+4mYcGLxMkbP8dqUXUupZnPZtpEDnF
dDypW4veVZLEPvHT4IuTft7wjVqU+xFUtxBp4FU/ut35WS1y/GrY0EKhgdHD
H0HmQbVo3s2sS4dBg1Q195W6pFokYGxgksamwVrDVwvFKnz9faTruIsGYqm8
W34O1iJxU4H8qd00UDIszYhcrUV0r6ZQbC8NBnc4HB0i16HMVLe/D+VoYAk2
f2321iFirGjN4GEadAlnFixq1KHloe/E+KM0kNHVLC67XIf8Z6SadqrQQCC6
Jnjngzo0MOO71V2dBgMFMc5OXng8udm04ydp8GFfZaBoVB06eeJgV6oWDfab
Hssvya9DlqFWd56fo0HC8KpIensdUq5468ZpQIMfb77py8zXocLxkG2WxjTI
/JPq92VLPao/E8q715QGPumchOs76lGQyzvXMAsaXJb/8lHsaD2aX7axun8T
n9+jOGejh7OlQpWcHQ0WWinPuWzqUVzkz8iQOzSg+Zzc4eNej37u+fTrpgMN
RL7k/739uR79cpLDhh7TIL1VOqo9tR6FlqavabjQ4GjN3GWl2nrUqSf1fYs7
Df4T+qMzM1KPqpPf9DzypMHPXRe0gjka0OkLvU6n39Gg+UI0q4HagB7MCvtu
8KHBx05lSb39DcjI4JS4nT8NjovKqDSfbEDVPJaShz/h8zHT92FmDei3q31M
fCgNzjEnJ60fN6BvalZBz77S4ErIDXqubwMSWNXlVo2lwel7Um4m8Q1or5v4
WGICDcT5jy//LWlArTpTSs4pNOj/Gx451NOA5Gc+8f/NoMEe3t97Liw1IA0X
Jf3LOTQw6/kvo2hbI+o3qBbYWUCDhzzvnj4Vb0QHOU5q+JXQ4Mlso668SiOi
TKXN3KikAWmV7+9Dw0YUXiPAL1ZHgxcmrzs33m5E408vRnk10WDS1bT0w6tG
9OPB+xTDdhpIrzhO3wxvRCdQmmJjN+7Hjy/HKrIa0ZOVMoWDAzTI/TUzLd7U
iFRXK2OXRmhgEuUv3TDZiPJrsv2uTdJgmhnw4CFPE6oaCvp1cA73+2j3ig2z
Cb2vsKxJXqSBQRNFb+JAE1oXKcqiL9NA7XlUhrlWE1otrenvX6XBthdOF/Zc
a0JJGddY+lx0KNeKXpt+0oR+Tc/USG6kA0G+4pF8QBMaoFosjfPSQeGBjFxD
YhN6KVjmf2E7HXQcJhevVzQhTI8ev0OQDhrVk3MnB5pQvIXR0U9UOlSp9+en
Ljeh49YvVTmF6aDsIv2JSWxGVumRP4p20MF7O5bUsKcZnWxISjwkTodms4iG
52rNKH3/N/ImKTp8bXMpxS41o1oPv8WCfXS4EBa2pH6vGYXE25yROkiHX3tp
+yreNqNVygGhX/J0uLOtJTzoazMi6Y5eskZ06EsaE7mZ14wy6zwFVVXp0PVw
7m5eezPafJyhvv4EHdJ9jnJdnW9GAq8CZ+1P08Hldm8AN28LiiRt3qqsQ4c9
X0qsFna0oN82V8N/6NHBbDmMYKnQguZz4pN2GNLhpUBLYce5FvRQd1RuzIQO
75zOJARataCsNL59xuZ0cIujR+i7taCXl3d+lrGkw5Z1vXbBn1sQ57rdz6es
6WATMXJ3b1oLOmBLG9a3p0Mev/rznNoW9FPkX/qO+3RYqBytDhhtQdYRFTzB
jnRIjnsytbrWgrxYHpVrznQwP2sreFmoFan0yK3Pf4bP1wh14NvXiuKsq1P3
v6DDLS7JkQzNVvQF9Ds439DBqS9aYsqsFWlsrr2f/Z4ONwg2EdaOrSg8TO6t
6Ec6qG30kJrwbkVvnr6gTAbSYU17eDolthXJ7K2gm4bQIdIoMPNxcSu6zP73
/tAXOvR6qhlW9bQi+c2Mp7+i6LDEJ3fwxlIrqs6XGDeLp8O/cw609dvb0Cy2
q0gmiQ7905wKE+JtqPzVNlpsGh30Yp/uvQhtSFt7dHRbNh0yJC9IFxu0IVP9
BPGmXDr8XXfrmvOtNiQtc3XgeBEdJP36og94tqEXpzZvo5bTYVLneMHt8Db0
2iQ4uamaDp5X5khrWW1IU4XRiBroICQ7b+/e1Ia8LV9f3dSK90P/0GbjqTYU
cHn81tNOvN//3bqXub4daZw58Ku/F+9HHOcUkdmOnj+xmwwbosPhra3B2Qfa
0UMXP2PCOB3m9643uKLVjv6VJuC14P2PuHNG91o7ku9J+WSyQIdEaKdUObUj
9mTkneIlOpQG+04d82tHvkdfZb9aoUPOmY8rGxLaUeElI2cODgaE5U+Tysra
kVMhPbmJmwHkiwrrBQba0SCr4vKHzQy4oVYpGbncjtaftvBY42NA7EKSiQKx
AyX+mGNXEBhQtdhTSZPsQORVy4NqFAY8pnHwPzvWgcQP1OZH0hlAX+9gOGbU
gYoTduXdZDMgAA70B97pQPQVS/munQzYABq3T77pQJyvgnfG72YAl5l2m8vX
DvROAPO4vpcB3W1BDhuwDtR+vcqiTpYBkQQQfdHagRK4KlP9DzPg7H9im/Rn
OxCySXu67SgDxuau/t6xuRMZMT7kDCszYJuFf/b9HZ1oR4HR7Qh1BghKb8+i
KHSi8MOEMOJJBmzJ6ClIPdeJvs9nqPZrMaDn4zxPqFUnevjo9JVL5xigErDM
JD3rRJMr1YsF+gzwNjFQfh7ciSbyYMXDmAFFD1aCVVI6UYTe58crVxgwfO7X
+n/V+Py903Y1FgzwPTcEaLQTda7t7vS8yQDRSEpa9Voncvt8Lv+XLQNCc0IP
GQp1oRxXG2reHQasit+al9vXhRIO3Z064oDXkyrn4qvRhU71Wx4OesyAwg1a
9MUrXehO3ZlFYxcGOMXGzYY4dCH9dyypajcGiBHNak586EKlH/qbgz0Z8K3G
aBTFdKE5C6+/tHcMKI4/2fwjvwsVy0j7uXozoFLbq/pwZxcSQ1kRmv4MSFSn
cXD87ELKjAMyucEMeL7292jx1m40jj7v8QllwGhHnRZBrBspGix90v3KgN28
k4FxSt1IQ0XxdW4MAwzXjOZV9btRr+2tqVcJDLipLuAqYdeN5Kw/lG5IYcDm
xOxRH/dutP9KGM0qgwF+3T/010K6UbZ/WO/eHAZwX+biSk3vRpyh71ih+Qy4
Ev45zbK+G9VPW9ffLmHAKd59yl8mupHW/iMr0pV4P0t5uKW5etAztbkQv1oG
1KjLNiTRe9DxYP+0K00MuCYU3uEm14MKC6VPtLUx4A3/5oy+kz1ooj9RR76b
AeGlxSFHrvagT2o7q5f7GeDfVJLf/agH8T54Xmg5guv7RXjmiW8P2jjTJHl4
kgHKZVnn7eJ7UPYBwraUWQZ82Hbaa6SoB9FuK92kLTKgiXqgxbAHn79ocLjv
DwN+PbhygbHUg+LVTZ+cX8X9fXp+1npjL+rvvCgvwcUEHdt41nZSL8qxVLYa
3sAEr6xXU+2sXqRXTBTS4WXCcUtfFCbVixyvtR5ibGfCFORLvz/Si/RbPep8
SUy4GH19o5paL+pDYgN/hJiA7spf+3W2F/2eSLHIZjKBcEParNq4F5Ve23dV
agcTTHJPD4bf6EWi4sFN/8SYcDtyRAvd70WSPb9+pEky4V5mmP461140dfUo
m7WPCXNSnsPY214kv+/Or5EDTDCs8N4eEdiLVCo/ql+SZ8LR8rK8l5G9qDkm
ZqMcYsLwRQcj2ZReRHaJU1k4xgRn0klvzrxetE08aOmyBhPe7tM4W1vVi3wF
HJnSp3G+fy2msA1fX6meG3WWCXpaHLOPhnpR3uN17Xx6TPDxKM6Qne9Fh29H
X224yISCiTjW9tVedOOwspW6CRMsE3J5pzbj1auUDlLMmdDMc2bgFbkPeakc
bWq8zgRZ9396ujv6ULLAZ0DWTNhg2apFkelDZmJzjE32TKi40zTEpdiHKrfI
3Ht6D99f4LRF0vE+1DdspD7wkAkG22dvXjnXh57yPPQId2bCSfkUvoOX+1Dn
oqsa8RkTUgq/HNxk3YcKJZzuDHgwgc8h/S+nQx+ykLrKvPKaCXsxtZjcZ33o
u5g8lHoxocRiteeRVx/ytFhreOPLBK3DbYkmwX2IeTexnyuQCWdu9mxUju5D
SqW6Zq2fmUCSuaw5nNqHNgoMGvqG4/kyuSS+5/ehV3uu1HBGMeGPTd2rRzV9
KPhFdXJ1HBMEx/JeW3f0Ics0cdKJ70z4+1PSQWSkD3V32E3FpjJB37RgrGkB
r0816pBdFhPC/zgufVvrQ58eV6/0YUy4Pm/y0oO3H40sD8gmFTJh4VHOhp1C
/ajTZqTfuowJNvuQyKhoP3r5vYW3pYoJl49P5EXt60eF8umRn+uZoOKesep1
tB+lv3+OCbYwIVA8KfeBZj+S33tMY6qDCdmGYtY7LvQji/xpjbheJlSm/0j9
adqPTu10L6QNMeHcfefnhbb9KLeS//vYGF6vidlcpmM/mjz2nGoxzYTN7XnH
77r3o4LE0eWKeSbkppzcIe3dj8TNFU97LTHBImspcGtIPzo+/IjKvcIEV5Ea
/4nYfjQfG2fQuk4YrtPYLq8z8PEbldt8uIVBUclng15RP9JbalFZt1kYPPLl
BBj1/WihtGG4nE8YCux+ZWzu7keaN7K5VQnCUJyw/1T2WD86yfkhKIIsDKAT
YGb1qx+1dht8uU4XhmiGKOUY5wAS9twq0cYSBk/NtrMU/gH00zGRGbVTGOQ2
bbqXSBtAd8yOvTLdLQyVcxcP3RIbQLHU/Dvl0sLQqdD6eK/cALIX3FfjJSsM
Hd/uXyHCAJrvexW+4bAw6DxXKV86NYBW51onOhWFwWvSnfHZYACl/haICVQW
BuzxzFbrqwNIvObI0EZ1Ybhq5+J6xH4A7RrX9mrSFIblV4d8JZ0GUFfjuXRt
LWG4oHDtw8CLAaScqn4hRVcY9pzMJ/n7DiCZTvHrDvrCMPMMHbgbOoDa65YW
JoyEYTdrtE3r2wDi502b+3FFGKROb7GczhpAs4rm1xwshEE4XNsnqWQAvTq6
emHghjC8MMpTv984gJJcPDJjbYWhX+mcz5XeAeT9ce2j6B1h4Eq6Us0/OYBE
wsynnj8QhkCPgFfZvweQ/EJGsvpjYdjhsTjydv0g4iOs/Ep5KgwiY46lV7YP
Iqv70jHP3IRh+x1R9YuMQeQWc7qdw1MYSt4djxeUGEQnmy8+vf5WGBb5fAPr
DgyiIDX9AGlvYRBI49mVpDyIIp6pSIf5CcPX3NADH84MIrSRIXc/GM/HKGPv
IcNB5OIylCgXKgxa7PlijmuDyKkyIDokAl+voTdQfnsQ8RgCySpGGIr8OoMy
nQeRZkb98tA3YUCOXWDjOYgO8+nqn0gWhn3Yphssv0H0/WuBGG8Gvl5KX+ZP
2CAa3sa2f/xDGG6u1DnWJgyiyBwb6TP5wvDKuDjx5o9BRDSLNt1YIgxBo53P
pMoGkXxL/fZbFcIg2sTsmmoaRNNvJ/YfqcX1mnCpb+wbRBcpc9XfGoXhpZnA
6czpQaQ7NNz5vA33pzX9u9nfQfQ7stxUrVsYhkM0kmU3DKELioFmSf14vQdD
FDiJQ0iFaNT8ZEQYti0KXV4SHkLDWZsKVyaEYVCNzzZhzxA6ePGLhOmsMMj8
luK6fngICRzdxyG2iOffaCunrjqEImeidAP+CANToGtc5OwQqhwWoFivCoNf
X6FngfEQOjUuF+3NwQLOjuqyl5ZDaFtZM3c5FwsGDqx/rX1vCNHK7ah7eViQ
nGk4pegyhDhln1rd3MiCU3VSh6deDyGljx4PgzazwOjEno1BAUMoj+Gh/I+X
BYYTmndvRQwhNu+q2gF+FtRP+1xTSxpCJXQrruDtLDhM51pC2BDS9NFe7SCw
wKJj3G61fAiJbpJM4RdkwZaVf7ZZLXj9n9dEb1NYEKIuy/t5AN8v+ER9HJUF
cfMfpJ7ODqEnPzwPUxgseCpje0Ts3xCitBVevC/MAlU/q/6FjcPotdGdzDg2
C5yv+GzDSMNIg5PeQBBlQfS53o4E9jDq5ZeXOLuLBUFtX7wspIZRFUVLwVWc
BTy5vpVU+WHEqWrEM7SbBSa1UeGLasNIoKWHjynFAhmVUY4anWFk+cqw1m0v
C0rV/jthZTKMBI9Wnx7cxwLt24+kZW4Oo8/n0zYKybFAi9PVb/7+MLJ95/fo
8UEWKGXFfO5wHUZ02VmpjMMs+Mmt5eXxdhgx65QCx+RZIPKdsVEuaBhZeD3P
O3GUBciDj84TOYxeZajsfIpY0IjtTmlOHka/uX4rjyqzQJ9tOVGVO4wgdUfQ
LlUWhBNFeF9UDqMeM/XvBuosuGbJ812lbRgVyl55mq3BAuoo76LI0DB6dnP+
9S9NXK9SpR8c87heRY66l0+z4KD8hG346jAap6405mixgNycgVlvHkGirfMf
fp5lgV1DkvcB8gj6kta35eI5FqQv1/CI7hhBnGvqeb56uB5JFmbN0iMoVTls
f6k+rke1uJq7wgj6FrFkJGHIghKBrYWXjo8gt9v5hVeMWZCaTi+VOzeCQk2f
D5WZsMBqNiK1+vIIIp5G+btMWbBdR1flrdUIMvts23nRnAXSpD26ZxxG0B+C
37ccCxYocO7kkHs+gm7OHsz9c50FmLamHOU9nu9M1Qvzm7if9o2fzf00gvaP
GfIXWrNAXSGW9230CGKevFy/bMuCPxH+p4zSRtCZGqMzV+xZEKgYJaFdMIKM
s2o2fL7DAm5z2bkNNSMoL/TI47p7LBieHD2a0zGCrGIDY2QdWJD2OVcscGQE
zTPukK0dWbCWVOB77+cIyk1UVWx+zAL+i8qzJI5RNAC8DLknLODb3TfcwYvz
IU0FSxcWPDeMNQ0RGkUSZ58IVD9jwUSqv6PnzlF0ql5SbLM7C4TCOZzl942i
wjO1S/IvWJAz771h9OgoejZ182mgJwt0b2pKZZ8YRayfjzUaXuN+VdvT+kZv
FHEyPErl3+Hn8YQ0y8N0FOXFbXRzeM8CZk+MjprNKGo+8mQt1psFBs3nNnM4
jiKZ0Zl92z6ywHVJ2GTAbRRZrjb9p+nPgp0PBY8UfhhFIweTy5MDWfD2jfu/
6yGjKOvGi2+ETywYraSayMWOIiueproTISzIsGpTW00fRaaFlLhvoSxwOJhZ
Nl04ig6O1xdNhrNg3XvS4bDaUXR5y7MA5ldcrzNBe/S6RlHtGSnxJ1EsmD6g
lr13bBQxlk8tpMew4JyTUP2GX6MoocT8PjueBS761+vDOMeQ37vbaU4JLPhs
1GZrwTeGLuX9lkv6zgK5/LvvxWhj6Abx3k1yCu7Ps3I6/GJjSKfGskcnDb/P
VJgfF2XHkEvsed6cDBbcL3Ip/gxjiOf54UVGNgt222/6YHdqDF0v8qKdz8H3
f5I1iAzG8PfywHJWLgts0t82HLg6hnzmo8nL+fj5dumOnbEbQ7bplrOSRSyI
jNPfEvl4DL0LYbm8LWHBLOcij/uLMfR69vTZsjIWJGRku5v7jqE609tt+ytZ
cIhzbZ47DM+39i3Dq5oF8XfM/lbFj6G+LyKfi2vx+0ljwcM7awwFB8e17Wlg
wUP1L0lPS8bQwX/xZ683sUC4ua50f8MY2qX/9bl/CwsUSyTM+nvGkGHTR/vl
NhZo9IcFpE+MIZvM1aD9nSyovHTiwuvfY6g4z/hJQDd+v3BvT/RYP45WZGT/
a+vF4x/VXTy+bRy5Ba493jrAAqmW3BxuxjjSFy8k3BpiQU2A9s5x8XG0gbE2
HDPCgjFsy/aqA/h62f23BcdZUH5PeeS2yjhSVzfKujuJn6cL/heVz4wj69wV
iJ3Gvy/+dN2thuOow8jHWWCOBTSe/NE1i3G080r4X60F/H5a33891X4cFV6O
lnVZZIGXmZTNTedxFOMSKTq4xIKlyYBtxz3HkQ0vQ5exzIKmFtnDbL9x9CD9
hbzbCp7/ueOaWPg4ajaZ6hpYxc/f30d/XBPGEcG2JIfCwQYaV7fU8R/jyCfE
X/8xFxvIB66syZSNo59H+vdmcLOh/felrO7GcRRZzS4Y28AGEtNj5WXfOAp/
bsCvuZmN/7M0tBtPjaNH4Rv8n/KyoY+hqbR3eRwFDMV1jPKxwf53v5IYzwTy
eVNuKLadDRXmvyQGtk+g4f3dHy8S2BC4/0BAMHMCPf4z9uoHiQ2Gu32/Ou2e
QHNiVtgSmQ3vXUXkLx2aQDEPhqOvUNngZSORxqE6gbIKL+jk0tng7KpTV6E1
gSIfoEO/mGwY+hNh5200gTrOCDcZstkgH8CIc70+gcZf3U3w28GGC5V8jQfv
TCDt4vzj5TvZMGmy58nokwm0wt7ot0ecDXaMG2W5rybQ86GCnea72WCl2Pjx
o/8EOldx36pSkg17p9K190dMIIdYEVuJvWzoL8EiFhIn0MPFY9+M97GBd/38
06ScCZR/2TgyT5YNu26oL/uXT6BR2anulQNsSNtXvOTUMoF0JO5WXzvMhm2e
uT1igxOIQP3pUCLPBn2+LvOlmQmUYD9muqrIBsqCqG3RygTynmpefxWxoYTj
rWDmxkmkVys/GKrMBqXQ25H2xElkFe/j3HSMDZLhrpgEexKVxo82HFJnw+ba
lNsbpCYRJ/n71VsabDAxJsQNHJlELv/dTmjXZMOjRxO1ruqT6IKYZNrh02zw
KBry0tSZRJtJhn+ttfB67La08pvg63e6/K4/i+utqpv198Ykag0SluU/x4bM
aNKLmHv4+LZkCdDD9bLn6jRwnUR3vkBbiD4b+MwJldJvJ1FB6LHi1otsEEs7
o8wZNIn085WswJgNMnKxuitfJ1HZiQQtZxM2rDv2TDszaRK9q6TMfL/CBo0k
9/p7uZPo0y2H44Lm+P6n4+YMKieRh5N2l7YFG6RPrPootE2ijDhhyazrbPjS
XCbaNzSJUOvQQepNNmx5k6YdNzeJQm+IOGtbs2EsopbjweokOiV84UmqLRtS
x7ZoW26eQvUKnNjCLTaczMnzYApOoXjd8Iydd3C//AxVrxeZQrWvlazd77FB
91zEf7HSOO/VupT7gA3FpKanzxWmkODPCxslHNnAYel0SkRjCiUkXbBxe8yG
PcMnkod0p5B4R9X2LGc2VBXCf18vT6FhUUUbYRc2XKoy2PPOagq5NLM2Gj5j
w7VDn+TvO0wh8+h/F4vd2HBI1lhOxG0KBTjUWe56wYYlfaWKBS88vwRaqrEn
Xn+v5kjBpym0afOlrMLXbDjv5RCSGT2FoEJwlfMdG441iqjeTZ1CVe7FKwfe
syHqwZKVdMEUCrGwSfbzZsOq+vR+vpoppB33KqreFz+f97Y5TXZMIXXBsAuK
/rhfDsclvRmdQu8fJuQFBLJhYIeV24WfUyhLXc6yNpgNPXZ63UyOabT7QELZ
gRA2lI+YNvBunUb3PEOv2Yfi/pod+55DmUbkLs+8sHA2RFwMItvunEbrzlo3
rv/KBmzaTkh93zQqlCwSPRrFBu1BuxCa0jSq2U2S/hKD53tzYnuK5jSSETVa
4Ihnwxzdg3VXbxpZPxf6dSCBDYl7tZNlzabR3MaaRP/vbLhsJT9EsZ1GOj+X
oxuT2eC+WTtwxXEaLXMIG6M0NtyV71UI95hGvzbLV3zKwPvp/d7B3nsa1TpW
3GvKYkOklp0i+m8azfKd71DIYcOUnF3Q/rhpNLnp/GOHXDb8iRkfHkufRkrr
TnXE5LPh8bN3qZ+LplELRWF+axEbZt30dzyqm0an/UPUj5ewoWP8JOlC9zTa
pLiqm1DGhte9GXOL49OI2q7D4KvE75N1mjezfuHjvQzRY9W4359y33DmmkFK
G/sGvtay4azkAPcN/hmk5UftG6hnA9tS4RWFNoNSd5wMIDaxwXID9rFIbAaZ
193mvdvChpAac/CXnUHTwwLZsW1s0PpzwOYmzCCMGS1K7MTrOSVxxPzUDLLK
SSvX6cbr3/9xmqU/g+wMsiXdetmwz0FGotN8BmUIZhwf68f9MTaxLsduBvUq
SIbsGML9lF1v/OnxDDrt+jHx9QgenyX3ReXlDOIv/uM0OcYGzfi0F1t9Z1C8
Xf0LkUk2/Ai2WGgOnUEfjoad9phmAyvt0HJx/AzSsx8/UzSLzzd1nXiYOYNs
QsV5l+bx+9hm+YpUyQyq/HnJRX8R1/fLh7s8DTNow7ctB72W2OB2VJ+vu2cG
vfRMCP3zhw161z56OUzOoMtmpyr0VvDzP0kJiMTZJHYwyATnn7cCQltwvrT4
yOY6zu8fBScdmJpBhu5x2x/iXO0V1jSH84UYPv1gnNWzvwndmJlBZxZqBwdw
Pri99L+L8zNI3vX8qt0/Njz3PRH9AucjlVM1Djg30iq+p+N8mOT2nwvO9ruq
CwQXZtCBr6mq3jjHKzQO1eO8r4LsmYbzLoteiZOLM0ic0E5exVkw63eiwu8Z
RAy7tM9zlQ0TU2+SbXAOqmzP88Y5l7Uz7T+cRX/p6XzC+Ybb2ewNf2aQ3Amt
24k4/zgbXdyAs+4MSmnB2XzUsOPmX1xvBfYR0TU2HKHNd33CmXo1uEwKZ74z
Hr11OIe9Ebp4COf0pOShQysz6HvfdkdNnLc4b53l+jeD6t05f9jh/J2ErQ9a
nUHbGwfgB87uGuc31OAc8M+krhhnI8eJTZxrM4gt1nmlFmeZ+Ke8B3CO0taf
b8OZu4/Mfx3nfQ8bXQZwbifEbw/EOT1MmzCFc7y6KrEaZ+WqyrBfOL8yaWz5
P4/X3S/9P/8PiAVfxw==
        "]], LineBox[CompressedData["
1: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
P4ADLFMnHj2E09yeJIRHwwfNf0/XxcFMH4Onah4R3v/1evhFMnzmy0nP4cdw
xPntLz+lw6IFTLG0WbBKdtNViRz4E/+7Ob58wnnuUDGavYCFrsSNGBXD1Ct1
mUovYSXTkzSu5fCa2hrzpUqYlo68KbkKjrle4PquFo51TqsrqYcXpb+UjjXC
ndHW2l9aYKp60btMHXBJwpMqhS54cNk46XgPfEHYdL99H2w591TOdhD+aBRh
ce4LnB73ji3gKzx7QSHUewxOIKWKevEdLlV1juv7AWsyH1RsnoYVa5ki1n4T
fr9oHLQ0D8e3SbmNLsH9N2y37Vol5OfVgNS2DbiwJYFBYgtWtU+LEt+2/T+f
zVXZxU0Ov6qX4NOnghMdXKc1aeCh70tng2nhB1T7Cwt2w5Wlt8ue7IVVpaQt
evbBOmonn39ggZvX+/6+PQg/CakZ/ckOL6XMXRvlgrPvX8nexwu3sIX2yvHD
DrK/coUFYTuxRxyWx+CRkgh5EzG4bGfXv+gT8NaOovIqKbg+cmB/iQw8OafJ
OikPB3+mahhXhGMv2zh2K8Pbu6kKSdXhmfq/yasasHiEsICIDvx7k6L0vB7M
vcwzrmEAVzRFvrxpDDcdVha6bgqrc8c/sbWAj/wTK4u0goOs9ruFXIRlUtQ7
31yCL91k5h1zhGmnhHm6r8B7BKIatrnCMSsytBvXYLdU0eXjXnDdVMOghQ8c
/jbDVu8mXO7YGhnsD1ukS9sGBsGet86IudyBp0Uz01PuwsOuKhUx92HBu2Ku
rRHwrFI110IULBAWfXM8Fm7IKfZmfAR/0WM5QJ9M6J809vL1VFirwfUvTzpc
6Enz+cBT2GXrt/XZZ3A+w8FI7TzYpGWqQraAsL7JVpBTESFed4uli6VwzyUq
qpRX8NGts4wNr2ESjm/N5W9h0QNVbL9qCP3++Bvr5Dv4X9PTvT0NsG9LyXOS
FtjdkHr2bxvc+jqv8+gHQr3f/co71w0PGLoLK32Cb9Sp6rsPwInlNuzOn2Gm
kJYH2SMw2VrnUtc32Hn5IHnDBHyivezl6hTsI5iwa/kXfEyU2XJiFlaiGzu3
Zx7u9vw7S70E15TpCyiuwGxJutaO6/DajngFs3+wmC5vzQNSsv88xUkyGUoG
0z3yovKghGMmpVrTqAmuURKP2wXPuyYqtNLDbc8lF5r3wMzhHmkVTHCdyubs
1H7C/nfbx0dZYaenU74s7LC1bfouJS6450WmigQPnPFxjt2RD571C0m3Owrn
dVUe0heGG9ZPygSIwuaF20i9xWE9WcZLBZJwhXNDY680nMxf09kgB3+uIru+
fApO+BLZPKdE2C/t7d4vqoT1ZY6TUmnAJtYLMRtacI3lZvMxXTj9h06WkD78
l+nUzYNGcDbrzSUNE0J+8kkZlczhC4xdvb6WsBmnfGSmDdxbsbQQZwfn8y0v
NznAW1ynMuqd4Po6PvWiq/CklPnDL25wsPTArW4POIAxjXbHdfh3NPkj4Rvw
QHJJC5sfzHErP0UnEJ74MbNPPRimFPIRCwyFk5iequeHwbl3mSnTwuF9vZ9s
uyNhkrwvlz/EwKbcQU5V8fBe72u004mwukG+0VgKod7UxxRZnsCjF/V4FTNh
K/W3JWLZsDzFtdGLufAjLdeyC89hWynaOxqFcMTm0l/PElhck4fOqQyWuvak
Ka2C0J+HbfkevyGc36fxdng1vPrMPeBtHaF+Vo7cZe/hmflcx9kmOPTIvdx9
bfDjqaJI6k5CfgIOs8h+hMkzR9SlemH7y1LuPP3wEZph+XND8EXx1mL1Yfif
xPZGv1GYemSgN2scjqJfDYufhL1ZbMYaf8KDBYzfamfgxAN7Atf/wK1HX7Dy
LBLeb4q2YFmGg2TendJeI+wvLd2msQlvH9bVPUlC/p9Nzpd42W+HBS+YK1tS
wBayeqXxO2CSmomDNTvhQ+21QsV0cGLx1NcxBjiK0/jkCCO8ccIuvJUZrueq
Dlo+AFMlWbLPHIJzf2pacHLCVcN9cWrcsJZ5nqfkEfhkafPyJQE4I/YYu5UQ
7Kjz7ccjEcLz56IF747DxnGt+19JwJeNXvD8PAmvpQ8NfpclOCrrbo8C4X3T
NwOkSrBoAUvXigph/4F3DsJn4L05NJuGWoT4tydLqJ0lnFfca8/1cwTPJ8Zd
M4SF9c33XjgP/3vgKHbPDFbXq1m9dQGen7W0KrGG9zGdcSmyhQtGu66n2RPy
E5x5uPMyId7Sas9GZ3jsNbfjlivMZcdvfMQDHknymmHxhldz6A5r+cIRin9I
1W/B8X5XB8UD4M0YKX3r24T1jmt6GIfAbM9zJMLvwR+any6WPiC87/LT+OlD
OPTPdYveaML+a7o0nXHw4mf381SJcKvNiXTRFEK/eyhE8aTBnRaxXCYZ8PpH
UTOjLPjRL+cI5Rw49vOSzbV8eJfx+xHHF4R85o1sPCmGBTIT9ra8hH/zJHZX
lsO7A7+LzVQS6nfJV3qqCn47VyDbUwvz6wuObtXDe04tCiw1Eu4DCgpm/lb4
oKFl3pEOWO/MeSnmLniCKcVetYeQvyt88gp9sGUKySvvQVjO1ZMv/Quc0Hn8
dOxX+CyF3L/GMfh2Y4Rl/XdC/IL+b4t+wEKXKyuHpwnnF5O36v0Nh/Xsekaz
AA/u9/0h+hd++uPYR65VuCNSxEx/A75W7/NAewv27KS1DN1G8Z9/3TolWEIO
fy5/8ySbCuZvDXw1RAMvXop0H6CFj+XIHW3aDbfUnQj+uxf+aucVPLsP1h/b
xstzAD5JJvhO+xCc/OIxxSkO2EzM/JfbYTj+lI2XMy+stEj5z4Qf1vFb5g4R
hD/FCC/dOAZXBhbbFovBDIw9H/pPwBMicmNNUjAT70Lcigxcl/Vnbk4ebvsn
Oct/GlZbZ5vQV4EVAnWC1NThuNHmOl9N2L71fo63Dpx/fvaenR6sXZO4K8YA
vlwUIRFmDH/36dxWZwp3Tz1v+mEBy4z2iA9ZwduLVZR22sIqu0jXKOzh9Z0m
ufOOMO3E5vpBZ0J9VH8uMrjCoYEcEaru8B/VJx+UvQj9UFS9U9wH3rZ45KfN
TbisZtDZzB9usu2LiQmCNV+4vXx7h+Agw5uFd+Ec4eDv3+7DgXYbf4cj4PZT
DNvaomDPJbeClVg4SYx12+8E+NAZ+uXDyfAe8ozvGo/h22du3ZRJh/XsM186
PSXkh35PrN0zQn9GtjGm5cEWZYcjWwoI82T7vqSqCJ6aKfSaL4WNSSa+/X5F
mJdXr9SGX8PXVXp1dlbBxy2l/22vhbX0prWk6+H+KekEm0Z4ZEfPXYMWQrzb
X7GGtMPcId8MAz/A3i/yw5y7Yb7CWqvET7CBNNtIxABh/dTGzfrPhPm6X/7u
3QhszqZ2u+QbLHaP8/u3CTjYT/n30BQsrlXyaO80bFRdLSf3m5DPyr1hIvPw
74el3heXYLs/ybusVgj3xSJXivY6YT4/LLX7/oPPS9BnuZFS/mcfTw+2HDJ4
l8n16A+U8IGm9wW11HAIrfnl+V3w1RGZzml6uFm/UrB/DxyQfltw+z74pU9c
z/J+WFVggfXoQdjALmEnPzvco/z5LzMXXLTpGKjKA1MrKL6U54NrTS7e9ToK
/9zPbZwmDEfYCHVEicJRwYET9eLwblG2zBpJeFuQiflzafhs/tdXA3Iwi+WL
is5TsOJ0kxm5MvyZNWBNQA2e7wuQZ9WA7S63c2tqw4Z3rUqUdeFMP4Vvt/Rh
G5YqmhwjOFX+9udkE1hCNlb7gzms+X72Ursl3D333bfSBi7/yyfyww7ef+fl
g68OcP9MWNi+KzDVGslteRe49GEVl8g1uGqr4aK1J6y0uk/L/DosE095TP0G
If+7FEvd/eCLtO9HHALhmMmo/NRgWEEjhz0lFDY/ZxFxP4wQr5jF48pwuDM1
y7A0Ej78TerFdAz8q/nyNqYEWEjm+wZVEuH9O3kJ0qnwtGnFkMQTwvz02u7n
ziTUk9d8RTcb7tieckstl3Cect6sW8/htt26TU8LYf+lusi4EkJ+ivw2Gspg
9pXbtLUVMM2+3tq1N7D94Lur3DXwqSPr9fvfwd7aNyu1GmCBLdXzGs2E/tYv
mpNqI/RLgK2AfSf8Ucp6p+VHWLglJzy+F978F0FT00+Y76oq4eIh+LeB5NLY
MLzHe81qZBTOkTNtbh2HU75QfFyeJNxPlOsBMz/hIaqT3ZyzhHl8sY9NfQ7u
HZFlkFqEZ6cKsuyX4aAb9t+s1mDPKafqxE3C+it08fUkVP/5TfQ6Y/l2eJ1C
9MQvCvglWdHm5A54NKujuncnfJlDgms7PezKMyW4xgD3bh8fOMYE5wXf8jfe
D29GWnWos8LPPSPe+rDB/RPk+h6csMcqy4QlN+wy4bPv/hF40pRrzl+AcL5c
JqeXQvCu23rhJSLwB1LBvPTj8JyRnkOXBBwuWdPRfBIOnfPuJZWDF7U/fOI/
BX8+4eJ3UAnmXDZp1lGFx0+Fv9Y4AzOLWGZJasG5KzfEbM/C5We+XTI9B3N5
RMlGGsIkSqO7ys/D51O8g5+ZwfSdJqn9F+DTYcEWH63hHrb1aho7uM+YjvWE
A2zI6sTG7wSLlu+pN78K3xveTm/qBuvnRBmqe8A3NJ3kvLxhdp/wdmdfQn78
1zef3oLj+Cn5OgLgOxdM16tvE+J1WnOeC4FTyL7dnb5H6BcF+8f9Dwj9aCBl
SBZJWG9Rr3Q1Gl69/KpEKB6eunLRRDARVt9buM6aAlNFq8hppsGKydxHlDPg
wZs6JTezCPXeziyVnQM77uWzS8yHtTdvH29/ARe48OU2F8P+oU4sr17Chd5r
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

        "]], LineBox[CompressedData["
1:eJwUV3dcT/8XJkUDrXvv53M/+1NEU7Qo8VBEw8xo0DCiNKVBKRkNEYpKUhQN
yigiKRmJCpnJlyRCoqGS2e/9+6vX7b4/73vO8zznOedIPf2XrJMZNmxY76hh
w/7/d2yw3PiRwyh8aQytHRiSwjIHSt9lKIxTEvsn/5bitLpkrp8shdh3D484
/5RiRnfuYoWRFHJS4+R6B6RQFoc3HxtFwXux7ZWUPilEyT2mtAKFpTmH9d17
pXDdrLy2SJHCwONPn393SdGU1rhWZzSFiqN3Ntz4KsVOnWmmd8dQmI5Cg2Vf
pFg/tnuXqzIFr47Uqf2fpIg1s8t7rkLhsp6yXGW7FC/q7Y4GqFGotN/PXfFe
inV53e5d6hQ+yaZ+476TQu/p+9z1NHlfnS/f3iKFhu/2q38ZCg6uNzfufC3F
cruKE+FcCkP71+2b/0qKq4eznGkeiT9LZbClSYplUx4fKOBTiC69fXrHcykm
UQVHNYQUyj1kuPZPpZjqOX7LNRGFs502j9obpYjqn6M5TULhpjLHrvChFEPN
lxack1KIMetSCG+QolivznaOJoXf0x8qc+ukyLi1i3djHIW05qlNLbVSlNW0
lTtrUfi2rPBjaI0USoJDTV8nUOh+Ns6Cf1uKzMvv763TpkB9m7j4Y7UUq6//
t/evDoXvbcbFO6ukWKUQLt2qR6Ev8H7DvOtS7K0uj2UMKJx/7WX8plyK3jo7
nzOTKNALxrZsvyJFKn+HxvjJFI4vn2E/77IUPi9cCiunUHg7PWTYuxIpIpua
5SyNKVhfMwvNvSBFrW7BmxITCo4zZKYEnZNi9hdBnK0ZBWHWUyOVIil+dRnL
1UyloJBmOPi8UIpW994lHuYUiv1SRvjlSzF83JCw34LCv/nDl6qclsJN73yF
ryWFoOs/1r7KkaIze6TeyJkknrED10NOEDych/vvBMHjR+RL8ywpytfbTfo5
i8LnD2OnKWaS82/Mb+y3Iucv5LUUHCX6OvZgnMIcCiH0/XlBaVL8vjPKOWcu
BfkVfYOKR4jejD94aswjejPM96lPluJbv+rn9PkU+MrrNNIPSmGk+X7mZDsK
xnXaEtMkKS4fdvYusqfgLw57+ztRig3BIevmL6CwdvGDjwcTpFh6qvX164UU
ZOP0jYzipIjg92ivWEyhZjkz6+9uKZ7+PTW3ewmF2SNGHUndKYX3+CFTP0cK
rTY7ipx3SDEtKy/3/TIKOgdlFbSjpDDb3f9u6woKBleSztyNkGLz+Y99/SsJ
3qG5KklbpXhtE/XigDOJj6qu0AqTInryerNxrhRuXGo/e2+LFB7uPd7HVlHw
6zrsdnizFIG/pf7GbhSej3RwmhwoRdWrgbkX3Cl4Xt5HD/hJMX1iYJeDJ4XT
Vs+5ezcRfdSY021rKBx+NsFd11uK9sL8savWUcgbkvHu85JC4fe1poH1hK9R
7eX71pF8DmwO2bKBgkfekgcL10ghG7b1YOdGCr/sascLPaRoqNOK3OlDwf7B
nNvlqwkea0OnD20i9fHJfvwOVykUvX3rj/pR6Hnr0sBxliK8+uJLgwAK919v
vnp1hRRaq4+V5wVSuBtEb9i1TAoZL91N2Ewh8kPlKvFSKfiXVvdcD6awsruH
blskhe+y1u9GIRT+G9JXu7iA8OuhcPdeKOH3a+CyxfZSFJU887UOpxARNNOF
tSX1F2jz4c1WUn/PqPwLNlLcDV5luDqC4PVoc1nQHOIf928OPosk/vHoleJM
Kylu7G046BtFwb3Y7tQrSHHoUMS/z9EUxo+bI3NihhTJco0We2Io5IbOPW06
neR/P3iAt4tC/cNF+19Mk2LOs4pdKbspcG+8n3rCjOjXrrBNP5aCaH+0joWJ
FI2jpjNn4yjM7Tv15u8UKbpoYY1GAgWe29PndYaErwM5c6/uJXzlKTLeBlLU
LHxw1HgfhRVx9zmT9Yj/bDte9XA/wXfuIfdabcL/z+seaw6QfBTWfPWeIMWJ
ih0vXh2kMHbd9emm46UY1tkhDE6mMOy4+EmjBvEX90GznhTiL/5KekckUmyc
dUZj/xEK74RDdToiKfyCixI00yi4NP4+d58vxYXOpTWZ6cTPBTHLk1kpNBuz
HptlEL7nqljrcaR48ivp4uVjFG6Pmtj3lZKiIuShssFxCu0N8z6VqxE9rC61
vJNF4g0M1FypIoVOouXMWScoVBdpSkVjpTg3fpPq65MUtt59va5UifCr2uEe
mEv4/ZD9bZkCiW/26F0dp4iej32dJhlF8G95Erozj+BvOLu+XJbUf/XMmcML
SP2vkki3y0hxbODXztBCCsz+UeX2w6TYlOqSPuYshTfHBtK//JVga6R7TFwR
hXtW/tNLfktQ9lBxuuY5Uk+1XePtfkqgHyy7+fJ54h+Lw5d+G5CgddXJSIOL
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
6awkvmKkLBf1g0FG7q+plU5cTFJTWXaH7Kn+tvNtTF24KJGM01n1jUGQq6XW
A1cuCjts9h0me3JJybMmW+KLH99v3yL+wEAzVN31oxsXqUfvfJn/lkF9YrZr
hAcXx5xEHQlkzy/52Gg44EnOz0vwFb5gcK84/1nSWi5OfZeLWvSY7MnXNBeM
XU/4fZBCP2tgUMh+s9pNfFmmxMQ44B6D9e9XKQo2cvFgSfvbM7cZuPcF5qZ6
c/FWo1Bt2g0G8QG6ykbE19cVRz5ef43BlxnGP2p8iS9ZreGducwgYUnrxZn+
XHjKu37ERQYrHxvNbArgYjBu7ezQIgZrU3WylgWRPjwtWmMon0FBcUBE3WYu
5PqKEjJzSXxTXHU8SF8p2Pgl+r8sBg9/fTnzKoT0AeXpfzZlMDg/SfpvSxjp
wwHH5I4fIe8Lfmn2h5P3MiopkkMMJoRo3t20jYu9mYcLr+5jUFzcYy4bycXA
d52F3+MYbNZbGxO9nYu8rU/Ctu9i4MVEHBVEc1FXsdewMIpBypK2SRd2kL4u
vzygcyuDoSff0nRIXxyxy8gkOoRBenXW41u7uDC5JokrDWQQ2NfXMmsP6Qsa
UndzXwYx4eneV2K5RBdGN55vYFDt3XZnQTzx/aplxeprGcw40dh3L4HoS7BX
etKNQYfVur61pC/PNn6k0ehM8pk6L3BwH8ln2YSzzHIGvUEPqwOSuNDJO1he
tJiBNfvnnTzp68alSis+2DN4KtvwYvchLnb1pIX5zWOQ7GqVqZHChU2HycQ0
KwZ7Ryq8LTvMhVvne7emGSSe/qCByakkHlGewNucgdbimNd1aWRuGh3udcyE
6KXHJM2WzBWndFabSSYzOPV+6qPqDNKXlixLKtcj+Fu1Nq3MJPgbu27pn8CQ
uVX/0tPjpL7mhbzdoUnwGBR7BmQTPJjsl8UiBlIXj0TZk8Svvr1y7mUZKI+w
SYgkc82TAR2PWJqBHufxSuYUmWvK4/srVBjEBgz/nXyaC5/i32OtRzPgC6J5
imQuOncm6nzrKAZvjHIVswtIva9VfysewaDlwKYHvDNcrHEoTzn3j4ayc7Pn
pbPk/p6AFy0/aURu6LxvXEz6aI15lkc/jXH3HM6fPcdFSi7T9bObxq/Djuut
yVymNkOmYUonjbH5Q103LhI/HjXc8PpHGou1FtmuKiVzwz5l6ad3NNlvuqS9
l4g/8Q2Par+hETvauMGnjMTbvCat4iWNgP3C+XJXydzgmDeu+ymN1GVn0naW
k/4w9NdkyyMaA35x636ROVFUsv6hSj2NXX2KIw5e5yJYo2XA/i6NRVWTg0eT
uVLlpndO800adgN/L+Xd4EIsHPlGvpJGVBS7xeImmSt3lGQ7XKXR4/ByVOkt
LvSZ4E9tpTQOxc3wsb9D+t9660reeRqB8vNO3qshfLRPYHPO0GS/z14+k8y1
6wKEf2bl0XjEzXr19B4XBy5p+O44SWPZsVnGC+u4GK5rsUbtOA2FxPhVn+u5
+OCy5qNVOo3fN7Y4b3jAhfL14901KTS05l142vKQ6GdC5w73AzSiLQ6JQ8lc
He0w/8TRvTS4wZwZ3x9zcSXn6hytWBot3Nn6SU8JX5emhS2JofFGuSJdk8zl
6x/VTTkcSYNv3/zy2AvCNz8wSDuc4NuX2WHykuCroYXVwTQmv5N7WNLMha/T
t0Pv/WlQGtcNdf4jc2l6re8OHxLPA3bNjdcknsMXn1eupxFSxdtoQfaC49Xn
bjt40ugXVM98/pYLaUEFIlfRKKq/nLzxHZkn0l9Z31pJI6d60bXWNi4418Y8
cHakUatxoCT8Axf5qQs/HFpIQ/fe5qiBdtJPc3N3COxoXH/1h5/8ifS7TQpn
586lEYdnJhM7uNgwI3p17CwaBzsWa578woUDFI+wljTuDQtutSB7zam/OS72
U2nMcDXfXP6N+MGXRacfGdHoVFgUM7mbi+nvlMN9JpHzmkqetT3kfMqbl6d1
aLyP8aatv3PhGHqjykiLhsEC//SWPi5C6ItGHlIaF3xuHd08QOb8ikuTTglo
BD245t9J9qzClPrz5lwanplO9O6fZP6a8L0qQJ3GgQsZ+2XIXrboi57j4Fga
Pzj6u8P+kHnwSljAEUUa+zrW2I/9x4UTnvKeydHwkJn5MW6Ii9eDs23XDaex
dk/VEs3hLJ5uqh515A+FUwvfHzwpw0JVdaktd5CC2GflAh7ZC3MqB6gL3ynU
9ga+uiDHIn9CoW/HNwrnqiZNNxjF4vuNALstHRRuDx7yvS/PopS2Kcv+QEFt
1xyBmyKL+5snnXn3lsJxx2PHm5RYaMnojgv5j4LTwbSewDEs+u1MdQtfUFii
Po3bTfZUxRrHsklPKOz6OLFivQqL4Pm76+oeUPgwodLwryqLxXF3fOXvk/dF
P8LC1Mn7H9zDR+6Q32c9P6hOk99rRNjeuUHub5OdmMeQ+5f1xCpWkO9venFQ
zCXfLw+3PVFG4vNcWF/GkvheqmY0XSTxH/NpNuaT+LWvB3gUEzys9K82kj1b
1STsaUIBharpM2gvEYtb8+fcuJ9LgbPtu3WrmMW1/eMnu2ZTyBy/YM42KQvt
JNpwfwYFD9qB/aXB4nUVt1Q1lcLqFRnegeNYtP/Uv3HmEIUEuaREeS0Wnl1L
nNv3Uegb1IrZNYHFOHpveFA8hX0r186TaLNwGnislbWLgptiz95SHRZtb/Vc
30VR8B+ukaOvx6LkdzoTuo1C8drBhBp9FgONjNvZEAq6YzbPtZ7EIqrptJ5R
EIXWUZZR5YYsVn2aF/PIl0KN39m4RVNYFJf8Wjd2I4XPvBvr6oxYzDlX9SBz
LQULo3D19SYsFq5PudPgRs5n7pjx05Sc19pmTblQSHIwsAycymIpZ8u8s8sp
xG6MHq1gzsLn1vbm94spVNwPObfbgkV9VkaPnwMFSZqapoYli2yz2iPp8yhc
L/urXjaDxb2mkbebrSikCfY1GYLF1MKVIb4zKZz8Wu17fxYLnln55WxzCh0j
Mp7Ps2Ixu88gYrwpBZ9NtyqqrFlUlV+6d2MyBf6sg5uXz2Vxbrr9qT96FBRc
RvxrtGHx4Vu/XMJEClqtPCff+Sz2u57rK9OkEHF1x+ThdiwSn2z1+SOioPIi
8XW4PYtHW528DvEoPHG3dFZbwCL2tU1PLU3h6aRDhUkLWewKmD9ssSqFsYtN
w+QWs3g+elVq12gKoW+imIwlLDLWRlcYyFMQXvCNox1ZFHReXl81gkJv17C6
c8tY6Bj+Pd79Tx1ywVNbDVaw6MlZ7rr5lzoW21YFn17JYoz05onRA+pkPvzS
ZOnMkvnQcsvcHnXspipUyl1YBN6sa2jsVIev/BR2+SoWV9s3lv79qI79C34c
71jNYjnF00SbOr6+dB9c485iWtBr5ukbdWxr9Nf468Eiae/5NPlmddiM1ZRs
W8NC99mRrP3P1GGfOT6jZy0LwcQkA91GdUSnNbTHrmcRbZpqt6FeHb1N7MgR
G0j8Wy5+HbirjuTdSgOZG1nY+L8Wat0i8eyyXzPZh8QTxHvuU0nirZ2cW7CJ
xHvaW31EuTrqwiouzfJjkXX4/hvzS+pY6PflaKU/C/VLlpNun1eHzKOqRS6B
LH4l3Rjz7Yw6vu1s29kdxMI0eFmwQZ46uJFnEryDWVyJ++t246Q6At9xPWVD
WBStvPSyN1Md8vt0xuwMZfFpZXRTSLo6muL3mvwKYxHmucpN9bA6XvQeNDi4
lcW2CbbB9gfUQZ2Y/nt0BIvbAtuxL/eSfK8lpuVHknwbnExHxqpj/ES9kulR
LA7GbmufH0Pub/Y/cSma3B94nt8SqQ7e4Er3BTEsLnL631Dh6vB2ae+t28ni
5lf7CceC1fFd5ZbM7N0sJjRc/jEtQB1npsxpe7GHxZCX4fIwH3Vkp/ukLolj
ITG6Pk3eSx23N5kJvsYT/7nqdGaqpzq0ducFb9pL9BqgcLJ8lTqqu9bbvk9k
cd2wTrLUSR17a+q6t+1n4Xb2mH6iI+Hj3VPvwSTCx8odVcwiddz33nkp5SCL
k1VbWmbZqcN8zo5I7WQWSwwjYnfOVcentZpsTgqLeY2HS5nZ6rjT7b17+hEW
F/Sr/G0t1fG2evmd8lQW7uW/zz2cqg7jDwdjJqezWLvINszHWB1lwUEqtUdZ
vDqR/yBvkjrC5v8ItDrGIk2TV2iiq44NCdLcN5ksat0z1NdqqeOgMGNpUBYL
hzwDuQKpOn70X3nekc2CL3q2baZQHYnmETo7T7JwXbQ3OoSrDrfbbYuH5RK/
u+ioOKSuDp/sowNbTpF6FxkKjiur4/SnAR+lPBZj5/IrXiuqQxzyo3R3PulX
mWyr30h13PXPfCAuZHHm/ISU7OHqKCr+eO34GRY/v8+r1/yrhvqZO7SYIlJf
iEi8PqgGnuUNj6Jiwue8quYf39VwOionQPs8uX8HXbyzSw0eBnqL7lwgfh68
Tfl8hxqWTZItciphMTzo+2DvBzXEbol+/biU+F/Wdq/YVjV8mnDyjc9lgm8c
u7biP/JevKHkcxl5f+Luh9lNanDbGCnnfpXkdyu2q+WJGtaJp04cKGfReGJF
rPChGgp4qaLAChZy581zz95XgyAm44NSJYuz4foL/7ujhlqLLu2sKtKP7afE
aFSr4aL5x1mcahYdC23NyyvUUHdql865m6TexgZF95apQWN5TbvubRZH/561
iyhRQ35Q0ebaOyzk83/kni5Wg1drW+SquyzqXBz3fCxQw9rDlS4vasl8MPN2
Z/gpNTJnzlAMvM9iUYtV69lsNfzirUnsqmOhdu658+Rjash8/Hzv+gbS/+K2
udanqsF/oMvl7wPSnwSGnaOS1RDlVjQU9ojFztYfww7vV0OlsUow9ZhFjcfD
nJvxajBxvbku/wkLjy9XHozcrYaOWq6u9Bnx+1OXth+LVsODE1T11ecsjvBu
VjzepobuqlIdsyYWhjdao5xD1WBnmKta9JKF2F+9bjBIDc9GT7s3+xWLHS8d
c838SHwGQY7X/yPxBRfI1G5UQ0rFovMr3rCwvj+ma3CtGu4lPWl53sLi1KLd
7tvc1WB26VTiglYWLm/HOlOuang6V6jY/o74v25+q8MKNZwTTnPxfE/mn9OO
35qWqOGq+6+Ifx9YPHutEi+7QA1/+hUFyR9ZjBa1nJk7Xw2Rj6r2j/7MIn7/
jaXN1mrQ5/Aen+pgEV5+IX4s1MDP4X7W7CT9i7lsnWKhhlk71kce/crCMqI+
1tBMDUfqnN4ZdrGYkdm70neKGrRdenhnu1ns/qZ77re+Gr4sNxhn08ti5u/g
ZB1tNbTnlhc2f2exQPXRkP84NYinfpFd2k/qY8WMnpESokez6klfBogenSoC
ZvBJPBEWBhsGSTx7HbbcZdQgo+/yV/YX8eOwb6N6VNWgYnh//tHfpD/6n9CY
PEYNrmGvN1J/WXQe8bp5U14NL/SOOBf/I/4abtndN4LoReu7SH8YD4sStXLC
hlQRE5Tlnjuch6350jdqv1WRo9MTZDGCB060Xp7DgCpkJn5cWSbLw69Y2/6X
Pao4cDBGeelI8nu7sMaRX1Wx3MHX6uMoHv5xrpjYflKF84I/tu4KPPRSSuKW
NlXsu2ao+VORB6cG3yNUiyr++So8DBnNw8jLbYcymlWJ3icPdo7hEb37cKY9
V8WOtn89Mco8RC4boRPaqIq09ICqvyo8TDUqrh7ZoIo312JXpanxsL5+w0fT
WlWsMvwWpkvx8NnP5HDkLVXwOga9cmgeLs6ia+kqVYxUKZhgweHh20PZ+AXl
qjDc9re8jMsje+Woh02XVBG/5IfIkcfDOnlezogLquBHYNhnPg/n9s4Ysj6r
ii8d+pc8hTzMnBny9kWeKjru3DD/I+JhdvH1hUo5qtBq/5G8VcLDfgeu9YHj
qshYud27R8rDpIFdN3SPqmKmWaFqnCYPVs7D67wOq5L9fWviiPE8sr8fcO4/
oIopX7peHNfiwXuGYZhmoioiGkqzp0zkITG1VbghVhWy/ULLM9o89ElOz/sX
o4prcXqFVro8PFy3dbjJdlWc92jpuKHHQ3ezx8zr4QSfxNZ8UwOCj5OLnOsW
VViMizern8TDwuS1ThkBqng+7Fn63Mk8bP8bPUVvkyqy59fUv53Cg0SzKH2V
F+HjhcsTN2PCR3jn7reeqvhchhUvTHiY02T5K3y1Kpxk6874mfHQ33v8T4mT
KkYd+fmkYyoPXyzVd81cpoq25Ib6PeY8rLBOTfdZpIrBtu7Z/Ok8cB31zYrt
VGEXfiUxxZIHccpzp9k2qmjYOj5PfyYP6UlJiqGziV6qTQ+fAdHLNRf8tVTF
HufUYRqzefDrnvYvfZoqit0yp1+x4mHg7QTbF8aqoApt7I3m8HB7uDZ/vaEq
CtxT9R7M5UHuzbSth3VVEbrRNMFjHg8Zt1w9XmmpYmdZ+LWX83kIfXmoIUhD
FZWBntcD7XioKWy6WyhUhVlg16Fv9jy4nJ1sY8yqouU/6bS9C3hYs/Go42pK
FTeO5rhKFvFwYxLdcVyZvM+8t/ToYvJeK0d2spIq9MYc5hsv5SGiCUVrRqqi
rFq27KIjD6/Ke5o/DlfFttpbD7WX85B0uvRAzF8V+FlMvHpjBQ+XHWKfXh9U
QdZ3w5DpTjxojvfNtO1TwRCnZUSTMw8jrnj2hXapIG3/f2M3uZJ6cPR+cq1D
Bf6227++X8VDiWS32eJ2FWwJunMs0o2HE/nntGNbVXC15bz4tzsPz9y/Zo99
rQLTrC/iQE8eVmtYZp9tUsG7+3XdI9fy4Jx1TP/LExXUWyw6vGMdD8fslbHt
oQo+cLcqCrx4WHzp4Nsz91Uw3WLe0owNPNgvmDDSoIacP7eOVfcm57sflNRU
q2DvgYnnC314cFuwp2uoQgWxl5N4E3x58Plv0fmEKyqkjx9bdsuPh47xukOX
SlTA6A+OWRnAQ2UY5/mPYhVcWT6Y3hjIQ9NvZsreQhXEd2YOeG8m9WmuJag6
RfK/+1HrczDJv2DeXusTKnjbF/3ULYQHd2lkzNtjKlixv2rJQCgPvx2rRwnT
VDDa92RuYDgP/13hqp1JVkF3mc7d0dt4MGyKKny5XwVjlsl4ZUfw8HLYz/ui
BBVsMNvezN3OQ63T7oBLu1XQuztLdCGKBx0/aW5ntArK2XWmBjt4eHzxkeuW
CBVcYB+J6mJ4+HoxKed4qApafRJ2ue/iYVWFe9CbIBUsGPH5evNuHpgB6xp/
PxV0jPx6NziW+MeXqfknNqr8r6Prjuf6+8J87D1K+Cwke3xJRdY9shqyyi6p
ZJSMUiky0iCRImVURJEos4hC2SGhbNl77+13+/35vO69557znOc89/35Byg1
evJ6LogIOdzAJXaOG5pHH9BcuE8Eb2S1+dWOGwRnpWQJD4iQK3XLe8WGG6I1
L8j4hhJhr87Xm3csuOHgksma4EMiSBJZObNMuUGBEHTwfTj2txVH8YWj3GBu
esZZ4jH2Z+bW78GHuOEdZ691cQQRthqtpr7qcIMmN6Ow5hMi6P2ceKkL3MBq
f/1MThQRehsjWnrVuIFh1+Mrh58RYSbi0EthZbxfyuhEWTTef5t37MNubngT
k7nNLpYInApjpX/luEHf9uzBuTgiyAz8FheX4gZxx3zjCy+wP1Y3cnzdxQ1K
HTlSdPFEcLzQc2tRiBt8o47/8Usgwl11wk1/EjcsF0YfIydiv6jazfBuB853
r7xhZhLO1/YK3zgPN8TNOZBl3hBBVuxHqi8HNxRSdAtKk4lQ80ahLpOZG4ih
FXLab7H/W769uo8e98cwmvI5lQhtEk6GiVtccM2Hu8s4jQj7+J7/IC5ijU/J
XKpJJwL17LLp3gkueF83/sfxAxHGJS4vhvdxAZFmI28tgwj2Wzypgm1cUHo1
09Uzi4h10uyo+4sLnluxLbDnEMF0sEArq4ILcgJYjO7nYv0slIt9+8oF9Ovm
4jSfiDDMvyi4lcsFgb2H6p7k4fcoQ0f6ZhoXIM6eQ9yfcf2p+TovErlA+g0l
KrWACPQkQ2+aGC44FriZK/UF8zvOXMjwiAtys+SPJXwlwrefQ+wqQVygZ0hf
olJMhBPSg9ff+XIB33++hNwSItwaYJ0pucIF23yebzf5jvnnN7ot6MIFh0ns
SQOlRNA58UnixRkuKNqiMp0qx/fT6v0us+KCs8bNqssVRHhPmX8hb8wFuoNK
B65WEeFMTOUlVX0usKv7Wz5ejf1PqsT8siYXpO5UJAfW4HwVWs0n9nDB7kJx
3c1aIjRF8Z9mleWCkZISzeifRLjveeWe004uaBVMy5X9hefffunLnAAXMH5S
pXndgOcz9+WmCDcXnCl2JWk04Xm46WjziJEL1jn1WT//xnp4Y/YtcYMTyqpK
q8ybcT66Z3WX5jih4s8jxvEWIpgvRbZcG+UEJik6foc2IvxhmbgS28MJV4cE
l7faiaAeYf8fTQsniI41pfl2EkH+JmGO6ScnsGj97VroIkL19dJy9XJOoNI9
7HnQjf1t4vXHrEJO8GDt+8Tci/2xJD3jRzYnzN3ssE3qI4Ih++9ysVROeK8t
FqgygPXiLDyRFs8JyYa83pmDeN4lH1Oan3LCz7Ik7cPDRBA/KXr+QBgn7L3V
/rdiBPdvtq3Y+A4nNIWfXtEYw+9t7EeJBz6ckMAW2tc4TgTVz5mpzJc5Ie3H
iQTDSSIs729UljzPCYNLv/4bmcJ+q7C9J8iOE2ydxx45zWD93/OOfGDBCVxy
xz26Z4nwZobR8oshJ0ydOCPiNY+/Bxoylf/T5QSOhu2v5xfwfGwLFNFR5wTr
bJeV8CUi9P+4LBGzmxO6B7f9EFvB/Y0K0qBIcULSqVPuL1exv3z7flJbmBOe
6hgPqqwT4ao9NSZ1BydUug7892kDfw86vuzO4eDE3zNVi3JbuP8+Osrj9Jzw
o/FYWCkNCTRZWFLt1zjgFe2tFUQgwZ7FOXH/WQ5IiTXb205HAm7rzaKOYQ4Y
uuc16cpAgqh6WWeHvxxwNh95DzGS4H1yADniDwdwWqS1+DGTIG1hYYymlgOW
9n9h2WAhwb6k8DKeUg4QdKPkXWIjwflzRh+MCjjgPLeoMjMHCW4/l8uty+SA
lcWa4FucJJDet7tsOoUDPh0ip5O5SfBR13zm2EsOyO7hSorlIUFdbryEdRQH
DP8wFdi2jQThKlyuoaEcYLBT7WTqdhKo7H5eT3ubAya/VFwR30EClwcmGoLe
HFBUtmL7jZ8Ed0+KlXt4cECVkHeZuSAJDmtRTi05cgBPUfzWTyIJYu6oEYRP
cUBQ9QVWZzIJ6uF6SbAZB2iQ2ocHKSR4fKLzfpQBB0h/jdY5KUQC+pBz9vXa
HKBXu+E+J0yCEwoc1kdUOSBehNHDdScJYF+7lbMiB0j1Zmux7CIBa3bllUoJ
Dhibz3gYJ0YC3wNtCcepGBuYZm6XwHg3b0sgHwcQeaIT0yRJYB/tLD3PxgH3
iLedpaRJ8Mdu6C4THQeIhm+nKZchgfzL21s2K+ywbDG/zUaOBArTukGdU+zA
ds5rrUmeBF8T5EiEIXY42pWQ7apAgt3Ve6odO9mhNs4NTShifOxMoHsTO9xN
f3DQXokEHZPZBm9+sIOrtNHOtT2YP1qx3ZRv7BA5nvvz6j4SBHkWiijns8MI
8dtRXhUS3Le9LPf4AztcjaUcerOfBOo2hoeIb9hB6zRFQEiNBDfyjNx0n7OD
WsS3T5/USfDigXtmZgQ7XGZll9mrSQLDkk8bxffZob8xifQOkSCFWdR6I4Ad
brP0dYAWCYbL0xtueLHDmdtlHgUHSJAzYGsW68YObheONpvpkMDB+7/59XPs
8Pnpde7fuiRI8hB/TnuSHTR3LJQb6JPgwQ0tc6Xj7DBDs8Ow/yAJrFe9Zd4c
ZodehfYUu8M4XlsHa6EWOxBqdZvWj5BgXvEk4zYVdrAp2PJ5dJQEXbG0vE/l
2WF28uQKqxEJjjvUSHwVY4e8sNN6ScYkyEj+aCVOZoeCyyyOO01xfYcqnihu
Y4elVBqG6GNY/5trPc6sOH/D55f/M8P3SRkf7qPB/VHuyk01x/3JrS7cWmKD
vpDSSl1LPE959kdOTrLB/O5Vy1YrEhys2zk61M8G2kJNhSY2JHDVYYrg62CD
kmvHZkZOYH4V2SxvN7DBTb5rKw62JOD12ysRVcUGTkLQQGeH50Pbj3ekiA0e
eFtKRp8mQR5xgsP5IxtMkvlMt53F/TUN2PYgnQ38pK8ZpNuTgJF2797pRDYw
vHmTKOtAAllurtNLMWxgvrPxXKIjCdYVOZ7LPGaDUKW6AFVnEmRVSy/EB7EB
4f5Fj4/nMX/fXS3y/djgtUGWoqkLCXbuafjNe5UNAk7ruQ1eJMHqRyv7aBc2
iC3w9T/lRgLbGKaNb2fZoD/gxJlld9z/+aZMOWs2uBDaxX/1Ep6HD5XuaiZs
IDP24fD4ZRJs+nSjqwfZgJgrbnjrCp6PEn6ZWU020C/VEtu4SgJzhyvCPPvY
IBERap964fm4NavoIcsGKhy8s9I3cL8yIo5t7mQDNuHy0VfemH9k4ydPZAOO
l0I5qjdxPboHKl5ys8HRsxSTT754PtKMBHOY2KAwovjrMX8SPAv2uceyyQr2
O7LfDgfgfK/XMjyYZ4XDXYeczgSSQKdaJyxzjBVsee8urd0mQc2j9t0CvayQ
EeJgfeMuCbrzn/WItLKCmkWU6sw9rJf56/GW9aywEHZh7F4wCQ68ueFdX84K
E2wDbnQhJLiUl2A39oUVti/Qlb14gOdPa/i0fg4reCpcero7DOuj0/RyfSor
8Gbe1nj3kASRrX1h6wms+PePeo72IxKUG0SWOz9jhdGfzzaLH2O/Fb7AfOMh
K8gf1ynfF0mCcUYH6093WSFB54ltzRMSqNr7V+69yQqmN+5X6z0lwfadJWDh
yQq7yWJMPc9I0GQu8jv/PCsY09nz28WQQHg8+XLRaVZIVp9Nao4lwY5I052z
lqwg1ytG5/acBLNZ5IlzRqwwXbOxZ+wFCex2c3zz0WOFXlFv5XvxeB4kKdlN
6qzAUav/ifQK869okmOlxApXC/JYnyRiP4l9VxQgzQqcO37Ky7/G74u32NCo
MCv05waLp73B/BeWCSzxs8JcckTszhTsJ9z3rRW4WEGRUbsn7y0J2tou5qUy
sEL626hVpXc4HwYv4cp1FrDMf9hfl0aC6eSEJPE5FlAntRw58x7398SUStYI
C9h+K73b9gH3z+Nsc3c3C3z4bf74UiYJBjcWHxk3s4CmfKjHVBb2l9EM87N1
LLA+6yTyIIcEAob3lT+VssAcS6ShyEecT+k9SZUCFpBwOGsU+wnzE/tO9EQW
C9yXbxHem0+C0uFJ1ZIUFpBRnynL/oz1HWV5ouolCzDEWQ1LF5Kg12IwdDOK
BTidHNtLvuD6H0a0e4aygNl1wVcaRSQgSDoqhd1mgR+L7vtbi/F7rmydPHyD
BW6U8xte/EaCXVYeMu4eLODYfmbf4Hf8fre/z49xYoHAE8emfMtIMNnEZs94
igU6dw57r5eToEH+oQCfOQu4q9XcuVSJ+xW7r9P4KAvsLjazY67G/ffd+FKr
jfH9QM7AHxh/G02ZUGWB08XmoZRaEny+ufTBUJEF6tTq/sbVYf+Ili4xlWQB
T5YnH7bXY71WBPQGCrHAQW1a47RfJDB2WRZa5GMB6288pZKNJOj3eOLIxsEC
sekVzGVN2B8mTX6cpmMBvrGaaqs/JLh1czcaWGGG2otX7Rqb8Xxe3P+FbYYZ
ck6Ulbu0kqCy8ZTF5SFmaA3PoxlrI8FoTNrazS5mUOZf+3S6A39PeFIycn8z
QylLH1ruJIFTWbq/fA0zPNRyi738lwRvrtrbHP7ODMED8RWcPSSofqFqmpzP
DIXtIh6verE+WvdYKWYwgxy//iSxH+vJ0+y8bTLO5yuPevYAzufek6c1z5nh
3Tv/kwpDuJ8ra3WdkczwbVRz/fUwCTz97u4gP2AG5qhXF9RG8feFt8KN2FvM
EHI39X3uGPajFprhL9eZQaPP4pvRBP7eSJv2EHHH9915+7ZuEt/Xzcgo6cgM
5tcPc+pNYz+W0Eq1sWWG963h2p0zeJ4HYs7XH2cGHT9vA6s5XB89ae/wEWZg
ecQmvjCP64n+TNI6wAxMC6M+wYv4e0LLl7dChRm0X7gmE5bx+3LYadv0fzhe
9tNXsSs4XpWHgrU4M1hwnvMQXCPB4tsEC0cKM+wvCPjycJ0EqXELYQnbmeFw
k3ab2Cb2P0bnXjIbM0TvTq2O38Lfe/UEUCMwA/9GbogaLRmu8hTmxywzQZ0g
T3UdgQyy56K1JaaY4Js3d4cePRk8BZ83mw8ywcCh3K9dDGR4pVN8r6KDCfRO
bnraMJHhRD3LgfZGJvjTMb62xEyG9YZLAgrVTPDyvTRNKCsZ9Ia3NjOLmeBN
GXsLIzsZyLbZU38+MUHHwUj/eA4ytBy+u67+ngmMeYrXqVxkEH7mt03vNRNs
yKgtPuEmA+9ynKpPHBO0ZtkUy/KSYbSu9ebcYyaY8xW2TdlGBkNGjR8c95lA
/dP9Gm0+MjzLKdrj7M8EX7V08pp3kOHBFYf3M1eZwJfn1TVjATKwP1XaTXFl
gotHXzONCJLh0n/CDcH2TBBTZ3DBgUQGe0kln2gbJqB5pW3QQSYDzZ7z+/6Y
MkFkz98NDyoZgj4Wsx8/xAQODsKB40JkiIvWmPAEJnC0YGy9K0KGqLnWkT/7
cL2h4QRGUVzv+7jpdjkmoO44//bmLjIYeAcycYoxQRnriDCfOBnOFAWrBpCY
IFWH3eWRBBno7T9ee8qL8x9tuicnhfP3I/yaZGYCtr5x4W/SZPiafkn18hYj
RAm/DVWTJYOPOsv7mEVGMK5m/dEkh/k7UKRBN8EIB/O5O0z/I4NxSmwzZz8j
XF89d75KgQzSInEB+u2M0JpsV3VqN+aTu1C/5BcjXIvZWmtTIsO+0wSBrkpG
0FnR3rqylwxOkk706kWMcDi12Y9FmQw6hFmailxGCI3nagpQIUOW+iumhTRG
2CJMLAuqkoFx0kPaPpERPqS6zkSpkWFwy9HiagwjhH198llJgwxpQTfjq8IZ
4c0udtoqTczPrk8rh+4xwvpPcZI2kEFAmP/kRV9GCBgaZOjUIsPq46iOX544
H50jpTbaOB8HdYfWC4wAc5tbDTpk8DdgpOE8ywgXOC3Zz+uRwfftVG6gFSM0
uZqND+iTgdlx60qcMSO4qC3HBRwig1esvOmiHiNoWI9W8x0hw+PeAM2bGoxg
8NW/JsyADCr31/Yk72GE+2GFLyQMyVCaEqnPK8MIjElxOq+NyNAhcdxeeCcj
fGarcSSZkCEpX/mRjSAjPP8bb5NpSgbTb6ptzVyM8HVZUFT2OO6fjL3cEiMj
cPqqFJSb4frZ0uMsNhgg7uCauJ4FGSwNyDts5hng7DkO7q+WZHj/8sPLkDEG
sJosrTKzxv1xPqO70cMAoYXCFg02mO9ItQWeVgaYXhTJdT1JBrt9e0ocfzLA
g8BL4XSnyJA3avx8tIwBHMwc0U07rM+tiEDuLwzgFkFbtOMMGRxCFu9cy2aA
jzuA98lZMhRe83sckMoA+8Zre9nOYXxV9kNeAgMMyNHefuWA5318eUjhGQM0
5LQsU5zIsP37mLTBQwaYTDbTzHcmgwv3ZnDKHQY4MCFCe/QC9gv3PSuKPgzQ
dO3x0zIXzL/io0u2lxngiWvK5klXMtxy4mCucWaAyNQz+9vd8DzRZCR32DFA
jYrLjLEH5v/dVQuiJQMoKZFuDF4iQ13NCdFoQwZoueT6x86TDNOGziufdRkg
jepIt3aFDMv6T8Yo6gzwlYue/sY1zHfC0JCoEgOwHJsOmPEiQzWH7by5NAME
Em7VB90gw+T0HPmHMAOoLX2apfchw4s9GUa9/Ayw0zJiIP4mGfZMhbxQ5cT1
sH012+uH6ykM2SiiZ4B4utDo9/5kgNFMh+E1epBzon2vf4sMs2FLYyaz9LDE
Q4wqC8TzE3nW23aEHlY5bq2p3SHDrrQ54rNuepC9+lCx4S7OVzXxD28zPcSJ
aqkdDcL9l74ep1BHD2oaz/iGg3E+4a6+D0vpYdtbzYveIWQIYwlyJxXQg5R1
8LO5B2Rg7atwOZxFD67XrkeGhGH+lSTufE6hh5lWDnvmcDJY96cl176kh8QU
ffrXj8ggz246KBJFD2FV9SKqEVh/eqS9iQ/o4dN/m7w5kWT42MMaVhFID1yE
X01Ho8jwZk6QTu4GPbwWPHi+5ikZdjoY3drrQQ+egZw3taPJcHAsheeCEz1c
srph1xZDhuNDIl96bOnhved9fvM4Moxrl1xaM6MHgXX0cuY5Gdz5/XXMDeih
4LdO0p2XuL6NM+JdB3D98xM+m/G4fh0XXhZVekjzUxd/+grzQ/uEeEUB82f0
X+L2JMyfcL/sbQl6CLjk8fz+a+wHxhZGxVR6UKa1chJOxvkvj4Rq8NGDzO9+
xtgUMmzSJP45yU4Phnw7ru5Nxe+Zv7daEYEePsSM5eW8w3506kbq9xU6OHSJ
+7psOhkOmz6XWpimA96PbSyl78kQWfC31HGIDgTRIVfIIMP5OwfP3+yiA6M9
JxM7MskgXl4v09REB1+9i808srHeBG9uWPyggwvMle2jOdh/ao1afb/RgT7t
ld23P5LBfFnr12AeHdih8hOEPDIUB1o3znygg6yfDvTX88nQJPJ0QCqZDpRq
0ny4CrDe981tS3xOB7McTyvvF2J+064YFEXSQXeB+IDYV3z+GX8COYQOmAoZ
/PKLyPDnaSdDcgAduNAGjyuWYH9bqvJs8qIDmuxM6epv+P2q+711wI0OGt76
quuX4vllYH5y3IEOGtlnqP1lZODMttJLPkEHHN+yfK9XYH+5/JNJ4hgd3CkU
yJqrJENv5IXGQ4fpQFZ018fQatwfWYmCdKADnp+Noew1ZIgRY0nPUaaD/2ob
egNrMb8KXB+G5enAR/kaM+kn9vPsPbUnxeiAcaiI9mk99s8n/gtXyHRQRHj/
Y3cDGe5Oje3/yUsHme5jvBWNZGiz8Q4zY6GDHtFaOfhNhs+SihO+NHQA2scF
W/9gv3dhdBpZJEBnsl+LeQsZGrgJE4sTBMi2Xd1e24r5qxC5pThAgLwA4s6z
7WTIWLBTSm8nwNpIF6GrgwzU2+WTPxoIcPHrwRyvLvz+Bx8pl6kigMAAbR9b
N9Zrwnx6XhEBaE1ODQT2YL0Jlr4c/kgAQakzeaQ+rAeW7HSrdAK46bGcetaP
/dSqsuxiEgHmf5r92TOI50N4Y+VbDAGy3s1UVw3h/q6Yaeo+IkB6jWKE9gj2
C6XfD84HEaDZil+2c5QMi/2Xl+p9CYBkE57ZjGM+FlVc2q4QoNv4xq2GCdxv
4s4Z7osEyOhZVneeIkN3rvTjoLME+PqJ9KN/Gusv00oj0RrXt9In5T+L69uV
Qr9lTACPsDWG7fPYD94SO+7pE0DM6VPugwU8zw+zv2RrEoD5vcA+sSUy1I9d
KBDeSwCp/dT7r5axv7w9/F1BlgCBOy7bCKxiv/Q62n5RlADsdhc30tfw+1Lk
xjUuSIDGSbbLkhtYP455Rzl4CFA1YpT/bRPP0x3hFDcmAmxIqTRq0VCAl/4D
+5VNWjhf6HY+n5YCt5+cDkheoAWGAoMGYzoK9D5X4iWN00LXZi1HLT0Fahhl
0xX7aGHw/bygMyMF4ga17YNbaUEi83ziBhMFdrT6yXDW08Kb5ds011goQJbt
Xd9bQYvnREeem40CzItnR198oQV4nfJfGDsF/IXZe1NzaOHctM17ek4KvDrZ
MtL3jhbyk3M2YrgokMpTymH7ihaOJGUK7+ChgKb4HzXvaFpg5zi+PZOXAnmZ
THdbH9ICY6XuHZ3tFOgwOtltf5cWNCvbqwr5KPDAsFUn4iYtvN7D//c4PwV2
lnqWETxp4fDgYsUvAQroxOwz5rtAC1R6nwBXIgUMhviXnE7TgoyncR4dmQKb
epT3Ixa0cEWq6ttNCgUOMB1y4zCihcnDQ8/5hSjgohlpcEkXx898axAljOP/
YdhzQ50Wnpwv8OLYSYFb/rEyH5RoIefhpStJohSoTDBGYtK0wLNaqyssRoEY
UdmTmiK08Ly+brBAnAKmZImnz/hp4cwKlcFYkgI5Eno9QpyYH8dtS5VSmJ+I
kL2HGWjhqVZ6/mkZCly9Ov06d40GmE6PGf2VpcCffG/h0lkayGjwOmsmT4Fu
Lpl3WyM0EJTxTn/sPwrUd6yY+HTTwIvGW1vnFHG9rFOEuGYa6DuzdY9GiQLv
39PVr9fSgIOycL/fHtzfbM1kmjIaELEN/7K0lwKqP56HKRbSANvMa8eHyhT4
akV+nJhFA0pVpwbY9lOg7mDJy7y3NHCfo0gpRZUCpe/vVHHG0wAx6eKWujoF
7CVc6R5H0cCwX/GLjxoUCKe5qZ8XSgMDFXmcxgjXZ/wuWeg2DQibmZnWAQWA
loZX2psGIvdobdM9QIGgUq8Hpy/RgLJ/Q1K7NgU+bnKLtjnRgAAPM6uFLgXc
o39+XzhFA5KcfWhWjwLc79L9Tc1pwOMkx9ydgxSw/vnhaIcBDSzPtF/fPEQB
heMtu1h0aOD9rNGvqCMUGDcSFrimSgOvVJzWtx2lwJ60ML4gRRr4Wf8zKdiQ
AuIkEdFySRqQ/t1BETKmAD1to4GuEA18p4adjzahgKv+O3/HHTQQ0tR/T+kY
5oc+sb6anQYe/fzrlXUc93tnifQvOhqoJ0sPSZnj+t4wSrMsbiHNP4LiJRYU
EFio2jfbu4VGm9JVNKzwvDC0WYj82kJlaIjUao35JEhlNnzZQq3rbj4XT1Cg
SaxYuit1C8lsxWUMnqTAOktS3n/RWyjtoluu3ykKTLeX+9Ld3UIXRAZDN+zw
uus+K4rnFjorkdZ3+QwFTkhMHnt0Zgvdj+ZnZbXH/Nb2371ntIWmjCXo75zD
875Hsu67xhYK9OyoE3LE8xWcevSW9BYyHu3eke2E86e/MhHDv4WsXwfvljmP
9Y0eJKwwbKGImmbq9wt4/p17Q9tmNxHr/uoudBHHP3YnjLZnE2XwnHHrcKVA
sYxjRWrtJnqofuimhzvWo9Qj4fefN1FaWpPtmAfOf4gpbCllEy0HMfDcuUwB
u8gvSt+fbKJbqW1RdFcoMExbPNEUuIl0qVvRN65ifiJZK+HSJlLerLzI44Xn
ky+yTf7UJnIUVeYLvU4BWYvztGePbqLynMOhkt7YP+762QmqbiLbZ+m3Cn0o
8Ky946+UxCbaU5JzZK8v1ufM3cv+fJtov/npgVo/ChxfcENWhE3ko5BleiQA
6+fzayGv6Q20dMJUo+QWvi9JVHimawMlLDxdNr9NAU+fbsvxHxsouDHg3q87
FIjkG30t93kDxVN4hi7cw/4Xt1tm5s0GWkjTIY4FYf/tryhdjdxAgWEV1Wfu
Y75NXvvaBm4g6Jg6shpCAZr0Encd9w2k5lYYfzWUAupV0tfcbTfQOVf5ct6H
2M8aG3KpRzZQZdGUU3I4BeIJ37dLqGwgZ3Ozv8KPKbB9buveFfENtN/KTvxz
BK7nl7eS3rYNpJ/ApaXyhAJp7jpzJ2g3UJgaZ+v7KApY7jVrrJ1aR/QHsrR0
n2H/GEoaK+5YR3mhqzeLo3E/bLQEVqvXUazu8H2bWAoUFpJv5n5aRx+NxPim
4ijgpQ2EH0nriOsl42XHF7i/IRmx4hHr6Kl1aMLWSzxvxacu0vuvo5M2eYk+
CRRI+mRzTNJ1HZlWBl0VTKSAZFyUR531OvK/l1L+PgnX/0Ywo05/HY2HuIxK
vsH6cB8h8O1bR/fWf3d9S8b5Sy2Hdu5cR3ZZfW+03mJ+E4/JjXOvo0ufYTwv
lQIpB5bGj2+toWx5bYJxGva3n639aHwN7R4eGfuRjtcpLDPubWuom2PfG8cP
+LzVtb27KtZQxZ1fnWsZOP5nuRjFnDU0foBnxDML39+hsO3OqzUELoulHDk4
v4lLpdYP19CvNj/PkFzsH19p71+9uYZiYy0TaD9hfnJa3MYvrKHIyj8vnuZh
f4qeDO23XEM/VFfceD9TwEfTpHin/hpSFCzhSS/A/v9rVrpPaQ3VH2pRgC94
3u535G4Ir6H0ogjRvK8U6KfbZmbLtYbyE+YHjYpxPy8EyWqtryK6qpWbNSVY
PxGHBc6PriKfE0kDTt+xXlOPqPM1ryL5Ay+qN0op0DIQ6U8sXUXUi+qB18qx
/nulW89lrSINen92nkoK7KrdclZ6uYpiuh2dH1bh+fYS4dIPXUUKXC+1GX/g
+T0U0pTjvYoW3npPxtVg/TLvaUhyWkXLwesuAnVYH0FS/W3mq0jqz87C7J9Y
f4sn5SO0V1GE57Mg/V/YH4Lbnr1WWEVqllmSxQ1Yz52J/JvUVcSb4hFt2YT7
L5RW18K2iiQ0fnf+/o3ndydtzMrKCrqyK+jlkWZ83+EXdzyHV9DstW7Fnhbc
P7sbbz1+r6B07s6nNm2YH+XEnpzvK+gpn1/dQjvW2zqr6Y2MFVR0qqzFs5MC
7IFFf+68WEHC69Z241243/KF3mMPVlAGfVReYDeur2LJsvH6CvI1vdK/1YP9
eaf/YVqnFeTNvtod24fzPa/vmXl8BWUK1FkrDOB+NZt/LdBaQWLn9VLeDuJ5
ZMwmsyusoEoJ+/IDw3gedxpmd5FXUIq0eF7xCAWEafbZLrGuoBI/ZQnlMQrM
Exykzq8sIxatSYfacewXc02ypwaX0UP9QzcOTuL5eR2uE9O0jHQ+H7Ltm8Lz
qBMSaVGyjHb7RRddncH1s9TRu71fRrbBofOTs7ifD08G18Qto/wt8dW781gf
dLJ6acHLyLTAvpFuEfOros/fcG0ZEfv0b8Yv4f5aJwjfsF9GpJM3kvauYL2+
0j7sY7KMrMkmLz+s4vV3u4NK0TKq1K89f2gd1/PKbjNMdhl55k2wVG5gv7Ru
D3pJXEZW3ifF0RZ+n5RfKLGyLKOLqZe2/aGhQj8hfsfSwhL6SpVtMiFQQeDh
JId0/xLS3Lp/boIOYxYfjb/1S2hJcb9nAAMVXFJMQie/LKHJtyHmq4xUaGH2
nNFOW0LbwwJZIpipwG3xO5QUvYS8PgmFc7NSwc4hUHP/vSXEp8QWeZeNCvSx
17kyryyhHmKcE5mDCp5f3gu8O7OExvR/cT/lpMJ6vMK+MeMltKvnXbAiNxWM
L82EpGssodgi6T8ZPFQopN9ayJVZQkeml19KbqOCT+FxfwHiEpIOdVEt3k4F
5jMjBzYYl5C+2+0U9R1USKusFpRcWEQRX7SGWvipQKaMSf7uWUQCtoaJFwWp
0B11zLKjbhG1a2/tHiLi+L+Y46S+LKKaJ2YR/mQquK+u86+8XURrssYVmxQq
qPdrpHA+W0Rnd8R4XRGiwom5ckvfu4to9ULwKpsIFQ5Oh2m5X15EPxkpxvd2
UsHgfaJmyulF1MhhfnXnLny/9dLlM4aLiNuxS/CjGBVAJqLqqtoiCmFgeyQv
gev54q30S2oR7eXubCmXpMJtjcTf6TsWEcXu2Ly2NBWSfPkf1NMvIk2CYGi+
DO7PQOOZo3MLKIz79qKhHBUs9//0MOheQGT7CKUqeSpkGPI/eVS3gFpFD2qd
VaBCk8mLacuCBdQkmbCzVxH3a8clO4e3C4jZ/1CAlRIV4rdCp2ufLqDz2k8z
pvdgPpuH8z7dXkCsBsHZLvuoEOQW/mToEo5XLHyPWQXHW7iaGn1qAfXcY2qJ
24/7mfD672uDBSQR+XidT40KspwiUsuqCyiO/fvMe3Wcj1N7ao3EAjKqfvpZ
VhPzc7sXhvgWkFpbAU0iwvyWKS7Z0C8gc/M7/Pu1qLA8VzRgOjOPPvDP0eYc
oEJNX8zww7/zSFmX8YuhDtZjSY6oUc08Wi51WujRxXor3eHnlD+PloLdaK31
8XpQ2WRF8jwSKyB1zRykgo5qdtTbyHn0SNElzPUwFfakT5j+ujWPZLef4WIz
oMI0h6O+t9s8ojmUzBF/lAo0kZIn/E7MI57v4X8FjfD+9n13qg7PI5O3Qrey
jTHmvj34RHke/WwyXVY0xfUwUk+kiM2ju6a/x1KOUSFPhGZ2+/Z55KK+8QGZ
4fjSIsV0tPMo/EKVfoE57v9C2CuVqTnUx6iWYW6J9ZSu9mWqfQ65za89GbXC
9d5XWKapmkP7JU4bnbWhwnGpS/qWn+bQ7vILrWsnqJCSO1unmDSHnFOJytdt
qbCdrvi8yeM51NotwDt1Cvfnym/xH/5zyCuw8Mvt05ifP1KkiotzyOwCvcbW
GTyPy9WiLCfm0OmimQfR9rh/TO/saw/OoXeWgRkCDngem5vzm/fNITkde5Nw
R+wXtQb/qYvNoa7Y0W8SzlR4lknTuZN3DtWq8DEnnaeCvTntSyOaOTSmhc3X
BZ8fhujN8Vl04Dl9ZtNFKgzHV2Yztc2iZo1KfkM3KowLPu81r5xFsYcVjYbc
8fz5ZxySzJ1Fz+M0rc9dwnpP4S5DibOoBWJ72y/jeV3Is8t8hOOZPFe7dAXH
U4jf89p3Fo2+0XaauIr1KtdE/usyi0qcHp4L8qLC/A59jVirWfTLR7qbdAP3
S5zgm6k3i4T+OMtHelPhwSJLI8feWRQXa3hU9ibWZ46x3bjILLJ404ze+uL8
lPppebhnkRaFkU7PH8eL/9j+aX0GnR0M1G4PwP1S+vU7b2QGfZ9/bWEWSIWO
uyr9W80zyNTtovrUbSpIVnZJV5XOIKH/Wucv3sX3Vf+605I1g8S0IqUH7mE9
zrLTHkiYQdZF8wo+wVSoZLqXIxc2g2pvrbAu38d8dh31OeUzg9yyEnMjHmA9
vDrms815Bh3e87xTIgzP44OEOBFznM+aamv8Q5yPsvqvKzoz6J287+v9jzD/
P/k0DRRnkGLyOd1Pj6mQI6Ve5CQ0g6Y94s7IRVKhOCXV7i/HDOpK8TL+/gT3
k89StWV1GrGKrfBoPsXxtU0l+Uem0TkOoaSWZzjfUyGGLb+n0YbqCItlDBV2
qfME//0+jeo+EyZ+xmL/0fzbB1kYvymJd3yOsfz41V0vpxF7yy7J/hfYT//q
Ug1Dp9H1K3L+/vFYz75dGyvXp5HQuTtmfK8wPweKNrYcphFdTMBmWCLms2Kc
x8BsGu1QE/WSfI39QNXKlnhgGjmKOJe9eYP9xY23SF5hGs1YbT6kpOD6KrfB
c+o0St1Ukcl5i/XAfXwllG0aJQzzx/z37p9evoUGz02hCs241uo0nB/FOnqt
ZgqJD7lF2b7H+R2/NSCSPIW+Nw2JN3/A88uhY90UOIUeyjMEuWVifl4FopCT
Uyi6trxwPAvPX/6Jo3X7p1D712bXMzlU8CKVx5btmEIG5LCZpVysV8t065Lp
SbT2dVj/0ie8LiB/4FDtJGqtHXZlz8fns2Vjfr+ZRAsioc4hn3G+v0qJk7cm
0eFK/x5CIfbn/RPtn09Noro2QemYL1ifPhEcD/ZPovDdFno7iqjgf6DRcYRv
EgUs7lfKKsb19YXvPjI1gd6xuzzX+4b5+tmlcbpqAm1zOtBe9J0KKprlHnRv
JlDqf19HLMtw/CCZHal+E8hPvevHn3L8nhyX7uuwmUChsUdljlZiPZ7Pn/6u
MoGqHc7Y9FXh/SfLXT/wTiDda6RTtj+wPn658ElMjaOpuetKKzWYH5FHsomV
4+jXN4k7D+qo4FSoe7vx1Tia+XM9lb4e49YI+nC/cQQWHvFxv7C/NpxaMLYa
R7VkjvOCjfg+gzLOF3vHUbChIf3HJjw/iSnPpjjHkW9DF+nIHyoo6JDPLgyP
oczYbUxlzTieo5T5vbIxtO3XxDfbVlyfQ04+5eUYyj7iYtrZhvFQiy54j6EH
AqqnjnfgfmSF8vJbjqFIk3T1sU4qCFsXG80qjqG2n6UTDn+pEB74INeKcwwZ
fQ5wI/TgeoL+hJQNjaKNxVDXqF78vrdkvBooGUUjXppaXP04v9RdvY9ejCJ6
x8j+5AH8flrseHzAaxSdiAmzERvCfnsv4bzf8VE0IdRiFDuM66P9EuiuOIrS
eSq2K45ibGHO4cA2it4dtE5/N4b79V9w0dDQCGoZe7xDbwLPZ9/+3oslI0i7
ye1Y2STWo+BtOf/nI2iIM45DYxrrN8Y2X+/GCPqce/FZ0wzOf/FjLs/xEfQj
oW/ReA7Ha0ppc1IYQWyrm2IT8xiHCbiXsoyg20nODQGLON8IAb2mvmGkFull
uraE9UnM0nEvHkYi07KJkStYTz5V2dwxw0j30Z0K3jXc79M3jmhcHUavbss5
B69ToT68QJR6bBjJ999oF9r893f2b7jQyQ2j5SAXkdgtnL9kY6cnyzCajqZT
2UcrBP6P3haN9g4hkY2RH1UEIRjW4e7d/mUIhb/2VDpAj9dvcMv9iB5C8p+T
LrQxCEFGSNjwnctDiHX79WsWTELALfSmpsZoCPG1zR6bZxYC5jA1EQGpIWQ1
W5AezCoEKfqnP/LTDaF2I6l2OnYh8AoU9kz8O4geCKq3PucQgu6Yk6+U8geR
t+RcKpkLr+/Zs2L0ZBAlBq+sRHALQZ5AbLjwpUG0av5aUIZXCMJb/J4tHBlE
D50X2JO3CcEz4malueQgOjY8Wn+ATwhUVFadC2kHkXH+f7zNO3D+8XeP/Gkf
QCE/BSSMBYRg+X6amU/eAFowSWYfEcT5mhjXiz8eQHGCbWUOJCGwiw69fNJ1
APkonVjvIGMsa2Nx8Ag+nx9Id5mKz8e8eacsNoBabht1TQgJQXFIiGQ27QA6
XlgcHCQiBMKWk3xK7f2IRS8giyQqBJJuPdqOuf1offvg+4hdOB6za4zE435E
NZ72lhEXAoWbXqfHL/Qj3/oX5BQJjD3JJhoH+xHHl9lQHSkhqNTTzHws0o9+
rz3xaZXG+dpPm8St9aF2v07NY7KYLzp10u6WPsTtXv1rXA7X68tgVpPZhwJf
26hc+A/z5+30aTa0D/0np07uVcB8fbexrj3fh1hFvtV77cb9G6q5mKbTh3Za
j1vOKwlB/YPmt/wifch5qyDz4V6cP6ed+b3VXjSy2HZPVBnjNi/td029KFnp
hWKcihBYSspY2WT2osgOxrQ9qrh+U5u/XCG9qKh622qmmhAIbO4KM3bsRaJs
7mUSGjifed+bujq96OMnj9NfNIVguty8U5Pai+695f+lDDgeqfJc6WoPusd0
lqdBC+Mjn2wNm3pQWaqpmIm2EARtIH/7jB6kHv/oY6UO5nPVslc+tAf10l4V
sNPD+TdM5Ww49KDylM2jHfpC4C4nnGGp3YNaC2SPex3CejxbR8oj9yAxkdRm
9iM4Xj975Y/FbvThxw/5uwaYn6H+uAuN3cix97G5kCG+v1y1lyu9G53U3DR5
biQEByWkjSG4Gz0Yz6veZoL12/B2c5dDNxplFNyeaor5tE6mcEI3uutAURQ7
ju8/q3kukNyNTHZXUIvNcH7hb1RXx/4iM+Pi4GMWeP/0tIx5/F/0NPtk5Q9L
PF/HXF2rrf4i5sD45rPWuJ+uQ4/0Of6iT0/vfe62weuhEYydZV3oicB215sn
8Xl7tRPeXl0obWzqBe8prMefdEq3ZLsQLb174gM7fB/ask4Y6ER3gp54iZ/B
+x0Xz1Y960T6pqdEXp/F8R4Lf2Ux6UQHXL30yeeEIP7Yhegs1k50YXGfZrYD
7s+PTDP7rx2o4Xs0839OeP2gzFn5ax3IaSMhsdoZ5+cTb0Ir3YGUg1cKbC/g
eLr7StS72pGO9UJys4sQwLatgPCn7cj/aZS9u6sQ0Dz7LjpxuB2tCnbMT7hh
vYgU7DhD147SJ90J9h54vlHjffSlDT387133yiU8D3xDf8U82tCH3ODHnp4Y
T8nd3SXdhjaTOfi4ruL++7tzyHa2opC/ey+EXcP58g0OHHnSikyc0zUZr+P6
wQc1GbYivVPVvc9v4H7t5LxxjtCKrseEWBN9hMCYpZGBq6AFtWvNvvp4E59/
E3Gp5GILuqqW4nTED+9v9bTrEGlBhjcIhDJ/fB9P8Euu9mZkJkZwsb2F+aSJ
LjoS1oxi+N687QjE9cy1K8TrNSMBy2j7Y3cwP95I9CRNMypj3D09chfvL3ix
uDPnD8pYdTU6F4T52FIg0V78g6qtTfxo7uPzq1+Fh4X+IApHoGxkCObj/sVk
5abf6D29VTr7v/9rJGTk9zL0N3J1atpMCsP4gqwKt9Zv5MIzL7ozHPe/QP1A
9EoTSmQ/W/70EdZfwsXa+9lNiMXz2n65CFyvZsz+O45NKF1YwT85Esf/u7L4
VLgJ+e8Pe6oVhfNRMXuS3diIHj0Nv1X8FPMX2Xd7KKQRten3jipH4/zuPV4I
1G1Epvatoj9jsB4UNPSlVhoQc7mnwpE4XG8XcXQwswFNRORyDD3H8bXnL6bb
NyC2HF0n75eYX43JSx0CDchR8EbUfDzWizqpSrThF5odPfYk9BWON6tN43nn
FyqgbXBkS8L7014GdWj8Ql/Ov/wU8BrHWyc9Tl+qR5OIt4U/GddPF+lz7109
OmktVfM4Ba9zorzr9vVorXsgXC4Vn68faPLkr0cN+TMNxe+wHk2sBzKe/kRD
zQnDKun4PIvR9xTWn0jmzFJd/Xvc7//UzmZ51KF0xZmgoxm43lOhr8d7a5Ht
xfBto5mY3/U/b1UO1iL9NV+SXzY+X3Y6wyyjBrnW8Swt5+D1KFOrxJ01qJTj
cOLjj5iPP6qlhOAfyPKxuChPHuZXKPjX45VqJOZsKhyUj+M/FuiZc6lGImmi
k9QCXP/ll1kOTVXIZk/0w5hCnM/JB+KselWoVDKHdt9XHO+j+4mid5XIwY06
U1WE79sfFam7vRLprcnmHCjBuEzEbf1uBTKb69Zv/4bjFyexlU2Uo1cK+z9Y
luL6v4ce/mpbjiSLuyPqynA+M59CghrKUGeB3CH7Crw/tDXMXrUM1a9TG7oq
8fru03s80krR7NtcmevV+Lxud+xD3lJkGjdtufwD49Nlr7tufUej3Tfo3Gsx
ThnL3Fz4hjIfpfoy/cT1nGTxVzj5DX2851sbWI/zI4VOP64rQaMjS+NCDXj/
QWZRpj0lyOJFcXBOI+bzZamFQVwxIjyTW5X7jde3BuW/cRajjg2kVvEH5xNL
Gx4x+hXNpywa6bZgfIiWib7mC9J9s95T0Ir3GwTe2pFdiMq4UnRM2zGWnQ8w
uFWAAr8u3ajtwPdTFMv7zn1G7q3jAU5d+Pz4ibAXivkoSk+Rcf0v5peLzWaN
kIdWlwVtPXsw1rnjkj/8EYXyp9xl78PxzCdpYz/mIlvvtlvB/Xj9umhH57Mc
dPJIlpH4IF6/oa+qczYbPbnYGl0whHH9RJyBUhZi+530ae8Ivl/ZTucjfybK
SOF783MU37986+/dyg8ookTayXAcx0vsLDp7Px19kH2YXDaB8Yr629sW79Aq
XfSnE1N4P8uNmPH5FBQorB/bMo3X1Yz4+AveILW3MUaesxhLEJ4FmSQh2dsa
AczzeP/XfFHNuQRkk3T7bsACxlO8l1y8X6J8BY8TxCWMf19MG82IQWYEAuOz
ZYxpV1YmlKOQtHivLOcqxrdCra7/foTkPzruSlr7x9fnR2IS95F7yKMp6gbG
dgVRZ/QC0NVKGmuxf1j96FqfUADyYXAvlfmHBf6eOrfij+75GUar/MN/CFJO
af7oxWU2bdN/2OBwwUVef1Rjcyfqzj/snlU0U3gTScpe1xj/h4UnTagTXkje
eTh59h9u4SGJxHuhPW8seFf+4fC9/aLHvBAS3jfEsIkx+82rUvnXkPn2uXCh
f3iZLXbPnavo9rpLv+k/XC/Vf5jiiXpq7ELy/+Hh6vHJGFekoF/WXPQP+x8L
KKNzRb4lUrvK/2GFDr44l4uI/HG2sOEftpvQPKTpgsxf3p4c+4enuR4l9jij
Go8UE+oWxt3H91pKnkPEcfYXu/7h8M4q+Uf2yNnBY1T6H5Z0sGVYPYsYbVQD
lf9h92v3sn6cQVo6NTnG//BwdCu7mx36uGOaP/D/8b6s3bpggRgeHbcP/oe5
f+5S0DBHx9nyMx7+w9B9tJPTDM1sBRyK+4frCfHKWaZIdmSbd+4/7P8wqGXm
CLpx1qui4P/7s9p2PzmEqjo7tn37h+ObZENV9JFDw+u0un+4WPCXlt8BlGvA
utL0Dwuri8btBERf4arb/g/TfBkdD1FDCQXKXUP/j6evZC64G03vjZOe/P+6
wAe+YmmkmUFzbf7/OHHJ96gICpU+9331/ziLJuECF9oQM6rd+j8WLjEhfNf8
H0Q4Se0=
        "]]},
      Annotation[#, "Charting`Private`Tag$24591#1"]& ], {}}, {}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
    0.24720000000000014`, 0.24, 0.6]], 
    {Thickness[0.008]}, {{}, {
      {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.1]}, 
      {GrayLevel[1], {}, DiskBox[{5, 9}, 0.1]}, 
      {GrayLevel[1], {}, DiskBox[{8, 0}, 0.1]}}, {{{}, 
       DiskBox[{-2, 0.}, 0.1]}, {{}, DiskBox[{1, 9}, 0.1]}, {{}, 
       DiskBox[{5, 9.}, 0.1]}, {{}, DiskBox[{8, 0.}, 0.1]}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{"f", "(", 
            TagBox["x", HoldForm], ")"}]}], HoldForm], 18, StripOnInput -> 
       False], TraditionalForm], {8, 8}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 15.}, {-5., 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{{3.897059033702373*^9, 3.897059047603908*^9}, {
   3.897064840225574*^9, 3.897064867749037*^9}, 3.897080549473742*^9, {
   3.8970809178830147`*^9, 3.897080965278553*^9}, {3.8972940096191683`*^9, 
   3.897294024561276*^9}, 3.897294119749608*^9, {3.897294149934572*^9, 
   3.897294173056881*^9}, {3.8972942292719927`*^9, 3.8972942747539387`*^9}, {
   3.89729431369011*^9, 3.897294386057539*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"cc732194-8a41-420a-ae06-737a8269c41e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans1.svg\"\>", ",", "\<\"trans1.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.897059033702373*^9, 3.897059047603908*^9}, {
   3.897064840225574*^9, 3.897064867749037*^9}, 3.897080549473742*^9, {
   3.8970809178830147`*^9, 3.897080965278553*^9}, {3.8972940096191683`*^9, 
   3.897294024561276*^9}, 3.897294119749608*^9, {3.897294149934572*^9, 
   3.897294173056881*^9}, {3.8972942292719927`*^9, 3.8972942747539387`*^9}, {
   3.89729431369011*^9, 3.897294386686854*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"9c6ac694-ba3e-42ab-8869-7df17c04810c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.897294131359025*^9, 3.897294134798456*^9}},
 CellLabel->
  "In[1978]:=",ExpressionUUID->"cbee08f3-1424-4438-a83e-832c70643a05"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAFbyc
gpcT8L/g5RS8nOIHQKn+opg=
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$329480#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 10}, {0., 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8972941355567408`*^9, 3.8972941560930357`*^9}},
 CellLabel->
  "Out[1978]=",ExpressionUUID->"49962c24-ba62-471d-ab3d-c2241b153eae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.897294187186369*^9, 3.8972941875578327`*^9}},
 CellLabel->
  "In[1983]:=",ExpressionUUID->"81403b31-cccd-4806-8a57-945b966e735e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}], "2"], 
        RowBox[{"x", "\[GreaterEqual]", 
         RowBox[{"-", "1"}]}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.897294187954299*^9},
 CellLabel->
  "Out[1983]=",ExpressionUUID->"ed4ee97d-7a7e-4c56-b640-ac097d8bdbc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", "+", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15"}], "]"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15", ",", "2"}], "]"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.0"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Dashed"}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"y", "==", 
           RowBox[{"f", "[", 
            RowBox[{"x", "+", "2"}], "]"}]}], "]"}], ",", "18"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans2.svg\>\"", ",", "\"\<trans2.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897296641543565*^9, 3.8972966447985897`*^9}, {
  3.897296785143394*^9, 3.897296908747877*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"ebf6ef82-4820-40e6-9a80-5a40f6b44bcf"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.],
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAAKgAsfn/D8AAAAAI/uwCP8gkuc3l
+Q/AAKiR1JZOgj/PH0shjPAPwIBJUA/OLZc/1hrddDLnD8CA3ytaKJqiP+MQ
ARx/1A/A4KqZf1VQsD/qC5NvJcsPwECI2yj20bM/8AYlw8vBD8AAZh3SllO3
P/78SGoYrw/AwCChJNhWvj8a6ZC4sYkPwCBL1GStLsY/IeQiDFiAD8DQOXW5
fe/HPyjftF/+dg/AgCgWDk6wyT821dgGS2QPwOAFWLfuMc0/UsEgVeQ+D8BQ
4O0EmBrSP4qZsPEW9A7AEJtxV9kd2T/5SdAqfF4OwFSIPP4tkuM/bnyunFdU
DsDYKtKn5AvkP+SujA4zSg7AUM1nUZuF5D/OE0ny6TUOwFgSk6QIeeU/ot3B
uVcNDsBonOlK41/nP0pxs0gzvA3AiLCWl5gt6z+amJZm6hkNwGRseJiBZPE/
OudcoljVC8CklNIx7P/4P5ez5x+HdwnAO+VIoGqZA0B4W4Aw/eYGwJjtfm4I
SwtA7GscdmxiBMAeXtVOXWwRQHyrtsEtCQLAxv5tXTvyFEAfjb1Abfr+vyjW
cQ8uxBhAfiEKCiM5+r/iZni4JVUcQAOHXT3Lj/W/vdr5kSfUH0B2Q8MakHv1
v2iN7etT4x9A6P8o+FRn9b8SQOFFgPIfQMx49LLePvW/tFLkfGwIIECUaoso
8u30vwi4yzDFJiBAJk65ExlM9L+ygpqYdmMgQEoVFepmCPO/BBg4aNncIEC8
0XrHK/Tyv1rxMZVv5CBALo7gpPDf8r+vyivCBewgQBMHrF96t/K/WH0fHDL7
IEDc+ELVjWbyv67iBtCKGSFAbtxwwLTE8b9XrdU3PFYhQOCY1p15sPG/rIbP
ZNJdIUBSVTx7PpzxvwFgyZFoZSFAN84HNshz8b+rEr3rlHQhQADAnqvbIvG/
AHikn+2SIUCRo8yWAoHwv6pCcwefzyFAfFFiBCJu8L9yIVs+s9YhQGf/93FB
W/C/OQBDdcfdIUBSrY3fYEjwvwHfKqzb5CFAPVsjTYA18L/KvRLj7+shQCgJ
ubqfIvC/kZz6GQTzIUAVvJyClxPwv3g5BS+n+CFArVSR2A==
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQfa392K8LN97vZwADJQedqQuLv9sg+C0s/g8+LX0H
55s+XrnzZflbOP/ZQZbJDzzfwPke9btcz719Ceevtin4sXviczi/Iu97s1rJ
Izi/w+GvnNLaW3B+lOHVK+FRu+D8/7FOnGe8TtjD+NLpLJsnWT+A8z2q9ntr
bX8J52/uVzxz8d9HOF9qYgyHDNd3ON/bZLbFoX2/4XwrgfiFOTkMDjC+cXiR
gto5Jjh/pmlT1jNlVjify5z5mFIGG5xfbdGiGL+GHc7fUTqlx/ASgv9t4UY7
k28IPgCsuWcu
         "]], LineBox[CompressedData["
1:eJwVkGtMk3cYxTuc7G1BGJf2HWTMvuC4DCelAQRS/D+KAwU6CKIhiNzCPQqG
sYhUoFkBMSGKDISKTG6Cci2KCwzHvYhWR4EVFLqtCh20Ai3jYplc9u7Dkycn
v3POh0PEpAbH6VEoFCDv/0+L+LZfQsUgw2OvU4OOAJa2I2bSCgO5v871roqA
nN2MbT87DKJB2X/1LQG/GXmV97Iw+NtlnHtxhoDzX4tf3vfGQGPVHHf0JQHd
nGuJVlwM0k2FKw7DBNACuHuKz2Cg08/PMu0l4H6yzJ2XhIGeNrJ0VkSAskFZ
y72BgfmAmTivhIAIa/3Mf6Yx8IznHXh+loAW5+fmCXMY9IQlih6GELAF19tm
ljDwDjzNqeAScDuSoRyiUCHA3SnkPCJg6o5tUJktFSJpswIjGwKCcF9bThoV
clv9ZoPVTDhqWDCeR6XB6IZFzUwGEwQfZ2tjhYbA2TxWtmBhBeySi6/9rIzh
MTHVZRxiATGZ7AjNL5/CdFGi0nmUDqonX+aXUkzhm2fXL6AdE3g7b9FUzDKD
jqLY7RtyQyiOKHT9McwcSkYe9xQq9gJ//tKGppIOFNvotL7yLeQjTBXX19Ch
UzrUcyhqCxn4J5Sca6DDFZ69QaXdFrrVeoYtEdFBJ9XUXv75A2r+3jWlfpAO
Wl62jP37v+jVnlVluIoOirEK93vGm4jFTJE9c2FAX9bkzrX8dbQxFlfH92BA
hr2nv467jroF5747fIQBnInKsnj6OvKZDzC558uATvs4lnfdGgpvdeTywxgg
mliN3upfRQUc1ZAbnwFVDibilO0VpAiN7aiVMIDSVMZoWFhEy8uua71S0i9c
sfwoZRFt537iIpcx4ESB//6zq++QZXvjI3MFA4ridu2Md9QohLryMG+NAUxm
gsclMxUa6cpqT7DCAUrdwn2PKNFkYOCKwBoHraAoqnpwDimVTOcqOxwK0tSx
H07MIT3TIdErZxykgT9daDs1izjJNNFJHxyiaPo5eNIb1GZZ1uqYigNrt9F7
1G4G9YgSl33TSS6PCBCwp9ELH89DsZdx6OsyPX3Y6zVaSPuj5Y4AB356Zvzd
4ClkLbFp2VeOQ5Xq5LXUrAnEil5fdKjEgfJ0+6ZNwThC74cP+tSQ/XXtt6eK
x1C4TXJzdjOZ/5UdmhM0im7xRE2aPrK/Yaxyf/1TVGfywzuDYZLHeLRd7Raj
Rw2nHO0lOCg+r+7TSAeRdGKjMUpG9h94M5zzvhf9mTSivjJN+oUiVaD1E7S0
K/xK+Be5jxHfkMntRLSDXo1jKpLrvgjuqxGhzwaM1EvLZF4uVzErHiC7UIUD
bY3kYp5Tv7YauS23J9lukjzCVT1QWIKO5woeHNshtfSFbJ8iHR13NraR7JKa
n8+dHvdG/wGbptKH
         "]]},
       Annotation[#, "Charting`Private`Tag$34432#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.008]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-4, 0}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{3, 9}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{6, 0}, 0.1]}}, {{{}, 
        DiskBox[{-4, 0.}, 0.1]}, {{}, DiskBox[{-1, 9}, 0.1]}, {{}, 
        DiskBox[{3, 9.}, 0.1]}, {{}, DiskBox[{6, 0.}, 0.1]}}}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.],
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAqzxw
+LuR579/0qsFs1IOQIhA/R4irdq/5oMwmon/EkBaMdXUV1q6v7ABBuLDwxZA
/11CCcxKyD/QON4gA0caQBtnBLOSO+A/qqYhA1cWHkBoU2cRgWHgP0e/hmaQ
JB5AtD/Kb2+H4D/k1+vJyTIeQE4YkCxM0+A/Hgm2kDxPHkCAyRumBWvhP5Br
Sh4iiB5A5iszmXia4j93MHM57fkeQLLwYX9e+eQ/QrrEb4PdH0D/3MTdTB/l
P+DSKdO86x9ATMknPDtF5T9864429vkfQOWh7fgXkeU/W46sfjQLIEAYU3ly
0SjmP5S/dkWnJyBAfbWQZURY5z8HIgvTjGAgQEh6v0sqt+k/7uYz7lfSIEDc
iPEwRODpP6lJLckM2iBAcZcjFl4J6j9lrCakweEgQJq0h+CRW+o/3HEZWivx
IEDs7k91+f/qP8z8/sX+DyFAkGPgnshI7D+rEsqdpU0hQCRyEoTicew/Z3XD
eFpVIUC5gERp/JrsPyLYvFMPXSFA4p2oMzDt7D+ana8JeWwhQDTYcMiXke0/
iiiVdUyLIUDXTAHyZtruP2g+YE3zyCFAbFsz14AD7z8koVkoqNAhQABqZbya
LO8/4ANTA13YIUCUeJehtFXvP5xmTN4R4CFAKIfJhs5+7z9YyUW5xuchQLyV
+2vop+8/Eyw/lHvvIUBRpC1RAtHvP8+OOG8w9yFA1ofG+tDY7z94OQUvp/gh
QPHLnag=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwATM6X/U=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/ghQAv3xRBr
CxRAcA3XZt/uIUDmwO8SExAUQKdemGPj5yFAwYoZFbsUFEDer1lg5+AhQJxU
QxdjGRRAFgEbXevZIUBR6JYbsyIUQIajnVbzyyFAvA8+JFM1FEBm6KJJA7Ah
QJJejDWTWhRAJXKtLyN4IUC2DJCooF8UQO/sJwOPcCFA2rqTG65kFEC5Z6LW
+mghQCEXmwHJbhRATl2XfdJZIUCwz6nN/oIUQHhIgcuBOyFAzkDHZWqrFEDL
HlVn4P4gQAkjApZB/BRAcsv8np2FIECA53f2750VQIBJmBwwJh9A4FhktKPL
FkBg9dLiFJ0bQH7cyaizEhhAhmqiBeXHF0COSDCaGkQZQFYmbzGwMxRAVAAV
8YRvGkAE/8AscbEQQFjKcn5LtBtA8EFPCTvGCUDPfNEIaeMcQCYTF8uJqwJA
hEGpyeIrHkDQ7RCMXvH1P8aZQr7sMB5AuMrgFOe09T8I8tuy9jUeQKCnsJ1v
ePU/i6IOnApAHkB8YVCvgP/0P5IDdG4yVB5AKNWP0qIN9D+fxT4TgnweQIy8
DhnnKfI/uknUXCHNHkCQFhlM38TsP/yhbVEr0h5AYNC4XfBL7D89+gZGNdce
QEiKWG8B0+s/wKo5L0nhHkAA/peSI+HqP8cLnwFx9R5AWOUW2Wf96D/UzWmm
wB0fQCC0FGbwNeU/71H/719uH0AwoyAAA07bP9KtjEATcx9AoGif5WNs2j+2
CRqRxncfQOAtHsvEitk/fME0Mi2BH0DAuBuWhsfXPwoxanT6kx9AIM4WLApB
1D/ujPfErZgfQGCTlRFrX9M/0eiEFWGdH0DQWBT3y33SP5ign7bHph9AgOMR
wo260D8mENX4lLkfQMDxGbAiaMo/CmxiSUi+H0BAfBd75KTIP+3H75n7wh9A
IAcVRqbhxj+0fwo7YswfQIAcENwpW8M/mNuXixXRH0AApw2n65fBP3s3JdzI
1R9AwGMW5Fqpvz9C7z99L98fQICODBBinLg/JkvNzeLjH0CAowem5RW1Pwmn
Wh6W6B9AQLkCPGmPsT/sAuhuSe0fQACe+6PZEaw/0F51v/zxH0AAyPHP4ASl
P7S6AhCw9h9AAOTP98/vmz+XFpBgY/sfQAB2eJ+8q4s/r/qvhtr/H0AAwPwD
/Bo8P+VkjdI=
         "]]},
       Annotation[#, "Charting`Private`Tag$34510#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.002], Dashing[{Small, Small}]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{5, 9}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.]}, {{}, DiskBox[{1, 9}, 0.]}, {{}, 
        DiskBox[{5, 9.}, 0.]}, {{}, DiskBox[{8, 0.}, 0.]}}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{"f", "(", 
            RowBox[{"x", "+", "2"}], ")"}]}], HoldForm], 18, StripOnInput -> 
       False], TraditionalForm], {3, 10}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 15.}, {-5., 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{
  3.897296645987218*^9, {3.897296789652033*^9, 3.897296909234558*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"7ea93af1-819f-4c90-9ca9-3c81009d0f09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans2.svg\"\>", ",", "\<\"trans2.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.897296645987218*^9, {3.897296789652033*^9, 3.897296909767783*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"c928781d-8988-4b37-bbd1-6495782d365d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], "+", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15"}], "]"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15", ",", "2"}], "]"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.0"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Dashed"}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"y", "==", 
           RowBox[{
            RowBox[{"f", "[", "x", "]"}], "+", "2"}]}], "]"}], ",", "18"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "12"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans3.svg\>\"", ",", "\"\<trans3.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897298874656389*^9, 3.8972988941826067`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"c7cb1278-dfa1-4303-8b2b-036c5f00bcad"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.],
         LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78mVhU+LgEAQPiCPu3p
7v+/jDsiHKEZAEDQwzM0itr/v0hasrEwOABAqQQpeyrG/78CeUJHwFYAQFqG
Ewlrnf+/ebZict+TAEAyxwhQC4n/vzXV8gdvsgBACwj+lqt0/7/w84Kd/tAA
QLyJ6CTsS/+/ZjGjyB0OAUAfjb1Abfr+v1Ks4x5ciAFAcL/iF2jn/r/Y4Cvc
46QBQMLxB+9i1P6/XRV0mWvBAUBkVlKdWK7+v2p+BBR7+gFAqh/n+UNi/r+B
UCUJmmwCQDayELMayv2/r/Rm89dQA0BO12MlyJn8vws96sdTGQVAfiEKCiM5
+r/DzfBwS6oIQAOHXT3Lj/W/fLXzI0+oD0CRo8yWAoHwv1OF5g4+nxNAqzxw
+LuR579A6dWCWSkXQIhA/R4irdq/5oMwmon/GkBaMdXUV1q6v7ABBuLDwx5A
/11CCcxKyD9oHG+QgSMhQBtnBLOSO+A/VdOQgSsLI0BoU2cRgWHgP6RfQzNI
EiNAtD/Kb2+H4D/y6/XkZBkjQE4YkCxM0+A/jwRbSJ4nI0CAyRumBWvhP8g1
JQ8RRCNA5iszmXia4j88mLmc9nwjQLLwYX9e+eQ/IV3it8HuI0D/3MTdTB/l
P3DplGne9SNATMknPDtF5T++dUcb+/wjQOWh7fgXkeU/W46sfjQLJEAYU3ly
0SjmP5S/dkWnJyRAfbWQZURY5z8HIgvTjGAkQEh6v0sqt+k/7uYz7lfSJEDc
iPEwRODpP6lJLckM2iRAcZcjFl4J6j9lrCakweEkQJq0h+CRW+o/3HEZWivx
JEDs7k91+f/qP8z8/sX+DyVAkGPgnshI7D+rEsqdpU0lQCRyEoTicew/Z3XD
eFpVJUC5gERp/JrsPyLYvFMPXSVA4p2oMzDt7D+ana8JeWwlQDTYcMiXke0/
iiiVdUyLJUDXTAHyZtruP2g+YE3zyCVAbFsz14AD7z8koVkoqNAlQABqZbya
LO8/4ANTA13YJUCUeJehtFXvP5xmTN4R4CVAKIfJhs5+7z9YyUW5xuclQLyV
+2vop+8/Eyw/lHvvJUBRpC1RAtHvP8+OOG8w9yVA1ofG+tDY7z94OQUvp/gl
QM43kCM=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5vDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwAX8CYFk=
         "]], LineBox[CompressedData["
1:eJwVjn1Q03UAxn/bYMIoW/AbLxv+vk740R/E8ZI7zjPlkeJlvhWJBKaIvBlo
YyAJlxOBkAp2aczjpVwjLMA82gSOE+JoFDhxDYVUEr1YLGRXwDILd7ik9cdz
z/PX5/NIs4veyONSFBXrzv/tGdlhnfOgUb7JvZwsfB6PCo/40FA+O5U/s8Ti
gdHh6yek0ZHZnGObZzFcFyT6lqbxiz4ja97K4nzqKwE5QTT8OZIDf9xlkWJv
lPRsoFF7QZv2yMxi8LmtoXtkNPLtbXKegUVDplqm2UeDLemKDCln0ffM2c7W
gzQcCy/wzihZTA9oJN/k0ug/3HZn5W0W0oDPOGMKGrsPNJ2czGBhuHHR8rTa
/Te5yly1mcU4THmFl2iYmb2HrU9D4R3CbdzmolFidn2uPR2KyvmyZYdWBGPo
zrWBmhBY03N7L5j9YXivoLhuXIqK+2OdPb6BqC1s85wzEXycHPWp+NUgpIUV
RRteCkYqJXpYUySGx6rxxeLLgUi/XlKxo1cCZ2tHzTobjRuqCa8CWzA0H9XP
jex9HjXbLo7NhjOwH/dK1DsFuNoSP7QQxWB/nrLu2LQAXn/d616WMbi55+fx
2EEB6tvWnheAwVBU55vGUwI08EoVMakMzv2eVDDBF0A3utWvWsUgMfMD9SPa
GwPyW/ulFgZfJvB/io1eA9cX76SETzII3KgIcPmuwZYVfqJsikHDhjtvGf/m
w/j1pkj5rwwqV7/6LfkKHyYfHaf4HwZp/QnLGXF83LIUtBvXEXhFnA5S7fKE
I2XVcVBBkE97ZBkLeJjsUsPvGAG92KNS7+Khz1v8ydUygsHRnJb0aB5Uwxtj
IqoIAst+mPzTyYUgurB0RUMwcrc6QfohF0vqxyNdzQRHu2OyF49wMWGvER3S
EojrZyv6X+OiuVXXZ2onUL4cfyUlgIsw4W3nuX6CYB0nvLqdA8HRbHnykJtX
djlpdx0HiyZHy5PvCUpeP5QrVnDQe0qwOftHgmucYW23jIPme031ogk3b1o5
UBHEwYlY9v612wRMz/qp7f9SiHfEnYycISjNrRTaRiiE7bBYZm1u35aoCH0n
Be+OfUyjneC6yCo/oaawwLUr5IsE5Utn8pOUFG5mvvud6yHBelPc+36pFHoH
uELDstuvc+hmYik0+Z/NynlCcLxcN3hJQkG/oq+dXiV4QKxTVorCf92/dM0=

         "]]},
       Annotation[#, "Charting`Private`Tag$36644#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.008]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 2}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{5, 11}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{8, 2}, 0.1]}}, {{{}, 
        DiskBox[{-2, 2.}, 0.1]}, {{}, DiskBox[{1, 11}, 0.1]}, {{}, 
        DiskBox[{5, 11.}, 0.1]}, {{}, DiskBox[{8, 2.}, 0.1]}}}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.],
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAqzxw
+LuR579/0qsFs1IOQIhA/R4irdq/5oMwmon/EkBaMdXUV1q6v7ABBuLDwxZA
/11CCcxKyD/QON4gA0caQBtnBLOSO+A/qqYhA1cWHkBoU2cRgWHgP0e/hmaQ
JB5AtD/Kb2+H4D/k1+vJyTIeQE4YkCxM0+A/Hgm2kDxPHkCAyRumBWvhP5Br
Sh4iiB5A5iszmXia4j93MHM57fkeQLLwYX9e+eQ/QrrEb4PdH0D/3MTdTB/l
P+DSKdO86x9ATMknPDtF5T9864429vkfQOWh7fgXkeU/W46sfjQLIEAYU3ly
0SjmP5S/dkWnJyBAfbWQZURY5z8HIgvTjGAgQEh6v0sqt+k/7uYz7lfSIEDc
iPEwRODpP6lJLckM2iBAcZcjFl4J6j9lrCakweEgQJq0h+CRW+o/3HEZWivx
IEDs7k91+f/qP8z8/sX+DyFAkGPgnshI7D+rEsqdpU0hQCRyEoTicew/Z3XD
eFpVIUC5gERp/JrsPyLYvFMPXSFA4p2oMzDt7D+ana8JeWwhQDTYcMiXke0/
iiiVdUyLIUDXTAHyZtruP2g+YE3zyCFAbFsz14AD7z8koVkoqNAhQABqZbya
LO8/4ANTA13YIUCUeJehtFXvP5xmTN4R4CFAKIfJhs5+7z9YyUW5xuchQLyV
+2vop+8/Eyw/lHvvIUBRpC1RAtHvP8+OOG8w9yFA1ofG+tDY7z94OQUvp/gh
QPHLnag=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwATM6X/U=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/ghQAv3xRBr
CxRAcA3XZt/uIUDmwO8SExAUQKdemGPj5yFAwYoZFbsUFEDer1lg5+AhQJxU
QxdjGRRAFgEbXevZIUBR6JYbsyIUQIajnVbzyyFAvA8+JFM1FEBm6KJJA7Ah
QJJejDWTWhRAJXKtLyN4IUC2DJCooF8UQO/sJwOPcCFA2rqTG65kFEC5Z6LW
+mghQCEXmwHJbhRATl2XfdJZIUCwz6nN/oIUQHhIgcuBOyFAzkDHZWqrFEDL
HlVn4P4gQAkjApZB/BRAcsv8np2FIECA53f2750VQIBJmBwwJh9A4FhktKPL
FkBg9dLiFJ0bQH7cyaizEhhAhmqiBeXHF0COSDCaGkQZQFYmbzGwMxRAVAAV
8YRvGkAE/8AscbEQQFjKcn5LtBtA8EFPCTvGCUDPfNEIaeMcQCYTF8uJqwJA
hEGpyeIrHkDQ7RCMXvH1P8aZQr7sMB5AuMrgFOe09T8I8tuy9jUeQKCnsJ1v
ePU/i6IOnApAHkB8YVCvgP/0P5IDdG4yVB5AKNWP0qIN9D+fxT4TgnweQIy8
DhnnKfI/uknUXCHNHkCQFhlM38TsP/yhbVEr0h5AYNC4XfBL7D89+gZGNdce
QEiKWG8B0+s/wKo5L0nhHkAA/peSI+HqP8cLnwFx9R5AWOUW2Wf96D/UzWmm
wB0fQCC0FGbwNeU/71H/719uH0AwoyAAA07bP9KtjEATcx9AoGif5WNs2j+2
CRqRxncfQOAtHsvEitk/fME0Mi2BH0DAuBuWhsfXPwoxanT6kx9AIM4WLApB
1D/ujPfErZgfQGCTlRFrX9M/0eiEFWGdH0DQWBT3y33SP5ign7bHph9AgOMR
wo260D8mENX4lLkfQMDxGbAiaMo/CmxiSUi+H0BAfBd75KTIP+3H75n7wh9A
IAcVRqbhxj+0fwo7YswfQIAcENwpW8M/mNuXixXRH0AApw2n65fBP3s3JdzI
1R9AwGMW5Fqpvz9C7z99L98fQICODBBinLg/JkvNzeLjH0CAowem5RW1Pwmn
Wh6W6B9AQLkCPGmPsT/sAuhuSe0fQACe+6PZEaw/0F51v/zxH0AAyPHP4ASl
P7S6AhCw9h9AAOTP98/vmz+XFpBgY/sfQAB2eJ+8q4s/r/qvhtr/H0AAwPwD
/Bo8P+VkjdI=
         "]]},
       Annotation[#, "Charting`Private`Tag$36722#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.002], Dashing[{Small, Small}]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{5, 9}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.]}, {{}, DiskBox[{1, 9}, 0.]}, {{}, 
        DiskBox[{5, 9.}, 0.]}, {{}, DiskBox[{8, 0.}, 0.]}}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{
            RowBox[{"f", "(", "x", ")"}], "+", "2"}]}], HoldForm], 18, 
       StripOnInput -> False], TraditionalForm], {3, 12}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 15.}, {-5., 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{{3.89729887994261*^9, 3.8972988945897913`*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"11c7b31c-e592-41d6-b45b-0971ee33728e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans3.svg\"\>", ",", "\<\"trans3.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.89729887994261*^9, 3.897298895105267*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"a265e6fb-36b4-4619-b3bb-26147ccf254b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"f", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "20"}], "]"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "20", ",", "2"}], "]"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.0"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Dashed"}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"y", "==", 
           RowBox[{"2", 
            RowBox[{"f", "[", "x", "]"}]}]}], "]"}], ",", "18"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"3", ",", "12"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans4.svg\>\"", ",", "\"\<trans4.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897299424809618*^9, 3.897299446802635*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"8c1c860c-2b7e-4eb6-a4be-f2951090388f"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.],
         LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNSP/iCPu3p
7v+/AIw7IhyhmT/QwzM0itr/vwAkLdlYGKw/qQQpeyrG/7+gQJ7QEbC1P1qG
Ewlrnf+/IM9WTO57wj8yxwhQC4n/v6CmWv7gTcY/Cwj+lqt0/7/wfV6w0x/K
P7yJ6CTsS/+/YBYzitzh0D8fjb1Abfr+vxjFOu7Bhdg/cL/iF2jn/r+ADb7C
PU7aP8LxB+9i1P6/0FVBl7kW3D9kVlKdWK7+v6DmR0Cxp98/qh/n+UNi/r8I
hCpJ0GTjPzayELMayv2/eKU3m7+G6j9O12MlyJn8vyz0qB9PZfQ/fiEKCiM5
+r+Gm+HhllQBQAOHXT3Lj/W/92rnR55QD0CRo8yWAoHwv6YKzR18PhdAqzxw
+LuR579/0qsFs1IeQIhA/R4irdq/5oMwmon/IkBaMdXUV1q6v7ABBuLDwyZA
/11CCcxKyD/QON4gA0cqQBtnBLOSO+A/qqYhA1cWLkBoU2cRgWHgP0e/hmaQ
JC5AtD/Kb2+H4D/k1+vJyTIuQE4YkCxM0+A/Hgm2kDxPLkCAyRumBWvhP5Br
Sh4iiC5A5iszmXia4j93MHM57fkuQLLwYX9e+eQ/QrrEb4PdL0D/3MTdTB/l
P+DSKdO86y9ATMknPDtF5T9864429vkvQOWh7fgXkeU/W46sfjQLMEAYU3ly
0SjmP5S/dkWnJzBAfbWQZURY5z8HIgvTjGAwQEh6v0sqt+k/7uYz7lfSMEDc
iPEwRODpP6lJLckM2jBAcZcjFl4J6j9lrCakweEwQJq0h+CRW+o/3HEZWivx
MEDs7k91+f/qP8z8/sX+DzFAkGPgnshI7D+rEsqdpU0xQCRyEoTicew/Z3XD
eFpVMUC5gERp/JrsPyLYvFMPXTFA4p2oMzDt7D+ana8JeWwxQDTYcMiXke0/
iiiVdUyLMUDXTAHyZtruP2g+YE3zyDFAbFsz14AD7z8koVkoqNAxQABqZbya
LO8/4ANTA13YMUCUeJehtFXvP5xmTN4R4DFAKIfJhs5+7z9YyUW5xucxQLyV
+2vop+8/Eyw/lHvvMUBRpC1RAtHvP8+OOG8w9zFA1ofG+tDY7z94OQUvp/gx
QLbMnuo=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGBg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwAWJpYYU=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/gxQAv3xRBr
CxRAcA3XZt/uMUDmwO8SExAUQKdemGPj5zFAwYoZFbsUFEDer1lg5+AxQJxU
QxdjGRRAFgEbXevZMUBR6JYbsyIUQIajnVbzyzFAvA8+JFM1FEBm6KJJA7Ax
QJJejDWTWhRAJXKtLyN4MUC2DJCooF8UQO/sJwOPcDFA2rqTG65kFEC5Z6LW
+mgxQCEXmwHJbhRATl2XfdJZMUCwz6nN/oIUQHhIgcuBOzFAzkDHZWqrFEDL
HlVn4P4wQAkjApZB/BRAcsv8np2FMECA53f2750VQIBJmBwwJi9A4FhktKPL
FkBg9dLiFJ0rQH7cyaizEhhAhmqiBeXHJ0COSDCaGkQZQFYmbzGwMyRAVAAV
8YRvGkAE/8AscbEgQFjKcn5LtBtA8EFPCTvGGUDPfNEIaeMcQCYTF8uJqxJA
hEGpyeIrHkDQ7RCMXvEFQMaZQr7sMB5AuMrgFOe0BUAI8tuy9jUeQKCnsJ1v
eAVAi6IOnApAHkB8YVCvgP8EQJIDdG4yVB5AKNWP0qINBECfxT4TgnweQIy8
DhnnKQJAuknUXCHNHkCQFhlM38T8P/yhbVEr0h5AYNC4XfBL/D89+gZGNdce
QEiKWG8B0/s/wKo5L0nhHkAA/peSI+H6P8cLnwFx9R5AWOUW2Wf9+D/UzWmm
wB0fQCC0FGbwNfU/71H/719uH0AwoyAAA07rP9KtjEATcx9AoGif5WNs6j+2
CRqRxncfQOAtHsvEiuk/fME0Mi2BH0DAuBuWhsfnPwoxanT6kx9AIM4WLApB
5D/ujPfErZgfQGCTlRFrX+M/0eiEFWGdH0DQWBT3y33iP5ign7bHph9AgOMR
wo264D8mENX4lLkfQMDxGbAiaNo/CmxiSUi+H0BAfBd75KTYP+3H75n7wh9A
IAcVRqbh1j+0fwo7YswfQIAcENwpW9M/mNuXixXRH0AApw2n65fRP3s3JdzI
1R9AwGMW5Fqpzz9C7z99L98fQICODBBinMg/JkvNzeLjH0CAowem5RXFPwmn
Wh6W6B9AQLkCPGmPwT/sAuhuSe0fQACe+6PZEbw/0F51v/zxH0AAyPHP4AS1
P7S6AhCw9h9AAOTP98/vqz+XFpBgY/sfQAB2eJ+8q5s/r/qvhtr/H0AAwPwD
/BpMP0hvi0g=
         "]]},
       Annotation[#, "Charting`Private`Tag$38855#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.008]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{5, 18}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.1]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.1]}, {{}, DiskBox[{1, 18}, 0.1]}, {{}, 
        DiskBox[{5, 18.}, 0.1]}, {{}, DiskBox[{8, 0.}, 0.1]}}}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.],
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAqzxw
+LuR579/0qsFs1IOQIhA/R4irdq/5oMwmon/EkBaMdXUV1q6v7ABBuLDwxZA
/11CCcxKyD/QON4gA0caQBtnBLOSO+A/qqYhA1cWHkBoU2cRgWHgP0e/hmaQ
JB5AtD/Kb2+H4D/k1+vJyTIeQE4YkCxM0+A/Hgm2kDxPHkCAyRumBWvhP5Br
Sh4iiB5A5iszmXia4j93MHM57fkeQLLwYX9e+eQ/QrrEb4PdH0D/3MTdTB/l
P+DSKdO86x9ATMknPDtF5T9864429vkfQOWh7fgXkeU/W46sfjQLIEAYU3ly
0SjmP5S/dkWnJyBAfbWQZURY5z8HIgvTjGAgQEh6v0sqt+k/7uYz7lfSIEDc
iPEwRODpP6lJLckM2iBAcZcjFl4J6j9lrCakweEgQJq0h+CRW+o/3HEZWivx
IEDs7k91+f/qP8z8/sX+DyFAkGPgnshI7D+rEsqdpU0hQCRyEoTicew/Z3XD
eFpVIUC5gERp/JrsPyLYvFMPXSFA4p2oMzDt7D+ana8JeWwhQDTYcMiXke0/
iiiVdUyLIUDXTAHyZtruP2g+YE3zyCFAbFsz14AD7z8koVkoqNAhQABqZbya
LO8/4ANTA13YIUCUeJehtFXvP5xmTN4R4CFAKIfJhs5+7z9YyUW5xuchQLyV
+2vop+8/Eyw/lHvvIUBRpC1RAtHvP8+OOG8w9yFA1ofG+tDY7z94OQUvp/gh
QPHLnag=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwATM6X/U=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/ghQAv3xRBr
CxRAcA3XZt/uIUDmwO8SExAUQKdemGPj5yFAwYoZFbsUFEDer1lg5+AhQJxU
QxdjGRRAFgEbXevZIUBR6JYbsyIUQIajnVbzyyFAvA8+JFM1FEBm6KJJA7Ah
QJJejDWTWhRAJXKtLyN4IUC2DJCooF8UQO/sJwOPcCFA2rqTG65kFEC5Z6LW
+mghQCEXmwHJbhRATl2XfdJZIUCwz6nN/oIUQHhIgcuBOyFAzkDHZWqrFEDL
HlVn4P4gQAkjApZB/BRAcsv8np2FIECA53f2750VQIBJmBwwJh9A4FhktKPL
FkBg9dLiFJ0bQH7cyaizEhhAhmqiBeXHF0COSDCaGkQZQFYmbzGwMxRAVAAV
8YRvGkAE/8AscbEQQFjKcn5LtBtA8EFPCTvGCUDPfNEIaeMcQCYTF8uJqwJA
hEGpyeIrHkDQ7RCMXvH1P8aZQr7sMB5AuMrgFOe09T8I8tuy9jUeQKCnsJ1v
ePU/i6IOnApAHkB8YVCvgP/0P5IDdG4yVB5AKNWP0qIN9D+fxT4TgnweQIy8
DhnnKfI/uknUXCHNHkCQFhlM38TsP/yhbVEr0h5AYNC4XfBL7D89+gZGNdce
QEiKWG8B0+s/wKo5L0nhHkAA/peSI+HqP8cLnwFx9R5AWOUW2Wf96D/UzWmm
wB0fQCC0FGbwNeU/71H/719uH0AwoyAAA07bP9KtjEATcx9AoGif5WNs2j+2
CRqRxncfQOAtHsvEitk/fME0Mi2BH0DAuBuWhsfXPwoxanT6kx9AIM4WLApB
1D/ujPfErZgfQGCTlRFrX9M/0eiEFWGdH0DQWBT3y33SP5ign7bHph9AgOMR
wo260D8mENX4lLkfQMDxGbAiaMo/CmxiSUi+H0BAfBd75KTIP+3H75n7wh9A
IAcVRqbhxj+0fwo7YswfQIAcENwpW8M/mNuXixXRH0AApw2n65fBP3s3JdzI
1R9AwGMW5Fqpvz9C7z99L98fQICODBBinLg/JkvNzeLjH0CAowem5RW1Pwmn
Wh6W6B9AQLkCPGmPsT/sAuhuSe0fQACe+6PZEaw/0F51v/zxH0AAyPHP4ASl
P7S6AhCw9h9AAOTP98/vmz+XFpBgY/sfQAB2eJ+8q4s/r/qvhtr/H0AAwPwD
/Bo8P+VkjdI=
         "]]},
       Annotation[#, "Charting`Private`Tag$38933#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.002], Dashing[{Small, Small}]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{5, 9}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.]}, {{}, DiskBox[{1, 9}, 0.]}, {{}, 
        DiskBox[{5, 9.}, 0.]}, {{}, DiskBox[{8, 0.}, 0.]}}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{"2", " ", 
            RowBox[{"f", "(", "x", ")"}]}]}], HoldForm], 18, StripOnInput -> 
       False], TraditionalForm], {3, 12}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
   20}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 
   9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 15.}, {-5., 20.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{{3.897299432953466*^9, 3.8972994473571777`*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"c9f33378-865a-4b3d-b595-93748e02ede4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans4.svg\"\>", ",", "\<\"trans4.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.897299432953466*^9, 3.897299447945365*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"558a167a-27f5-43c5-ac9d-9e7c444a61d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"2", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15"}], "]"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "20", ",", "2"}], "]"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.0"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Dashed"}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"y", "==", 
           RowBox[{"f", "[", 
            RowBox[{"2", "x"}], "]"}]}], "]"}], ",", "18"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans5.svg\>\"", ",", "\"\<trans5.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897299945445532*^9, 3.897299972451057*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"6b0b0db3-0801-4464-af2c-c0f1804c20c3"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.],
         LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAyhVP8Wb/778AIOorwbI8P/zJyCu9
+e+/AAyipXzIcj/TJfQG/NPvv+DQcWR9gaA/qoEf4jqu779AYC8066muP4Dd
Sr15iO+/AHj2gSxptj8slaFz9zzvv+AD2ijNSMI/hARP4PKl7r/QyUt8nTjQ
P1pgersxgO6/yHtDNqv90T8wvKWWcFruv8AtO/C4wtM/3HP8TO4O7r+wkSpk
1EzXPzXjqbnpd+2/hFkJTAth3j/mwQST4Ensv5x04428ROY/vB0wbh8k7L+Y
Td9qQyfnP5J5W0le/uu/lCbbR8oJ6D8+MbL/27Lrv4zY0gHYzuk/l6BfbNcb
6792PMJ181jtP0h/ukXO7em/KILQLpU28j+rPHD4u5Hnv/9JrxbMSvk/OnbM
TM9o579SnZoZksX5P8ivKKHiP+e/qPCFHFhA+j/kIuFJCe7mv1SXXCLkNfs/
HglSm1ZK5r+m5Aku/CD9P5LVMz7xAuW/pT+yIpZ7AEB4bveDJnTiv0zaDDrG
UQRAiED9HiKt2r+aD8JoJv4LQFox1dRXWrq/YAMMxIeHFUD/XUIJzErIP6Bx
vEEGjhxA+JpNBFrtyD8Ojc7ggKwcQPLXWP/nj8k/fajgf/vKHEDmUW/1A9XK
P1zfBL7wBx1AzEWc4TtfzT8XTU0624EdQM0W+9zVOdE/jCjeMrB1HkCb/lS1
RU7WP73v/xGtLiBAGJ3asoyf1j90/Yhh6j0gQJQ7YLDT8NY/LAsSsSdNIECO
eGurYZPXP5smJFCiayBAgvKBoX3Y2D94XUiOl6ggQGjmro21Yts/NMuQCoIi
IUDlhDSL/LPbP+vYGVq/MSFAYiO6iEMF3D+i5qKp/EAhQFxgxYPRp9w/EQK1
SHdfIUDZ/kqBGPncP8gPPpi0biFAVp3Qfl9K3T+AHcfn8X0hQE/a23nt7N0/
7zjZhmycIUDMeGF3ND7eP6ZGYtapqyFASBfndHuP3j9eVOsl57ohQMW1bHLC
4N4/FWJ0dSTKIUBCVPJvCTLfP8xv/cRh2SFAv/J3bVCD3z+EfYYUn+ghQKwP
jfWhsd8/8HIKXk7xIUB8lp7s
         "]], 
        LineBox[{{0.5047831632653061, 9.}, {0.5072721001081136, 9.}, {
         0.6554405677739139, 9.}, {0.8036090354397141, 9.}, {
         1.1247117971297313`, 9.}, {1.439968140280206, 9.}, {
         1.734071942442159, 9.}, {2.0529415709625285`, 9.}, {
         2.201800114728452, 9.}, {2.350658658494376, 9.}, {2.423626325742452, 
         9.}, {2.495216836734694, 9.}}], LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAACl5OwcsJBEDxcgpeTvEhQExEG0pi
HgRAjhnXkGzSIUDGg0NLuScEQFe6Gg9qxCFAQMNrTBAxBEAgW16NZ7YhQDNC
vE6+QwRAtJzliWKaIUAAPv5Xdo4EQACjAnxOKiFAmTWCauYjBUCarzxgJkog
QKQ9Xk0ILgVAiqPyi/M6IECwRTowKjgFQHiXqLfAKyBAyFXy9W1MBUBUfxQP
Ww0gQPZ1YoH1dAVAHp7Yex+hH0BStkKYBMYFQArdNzfyrR5ACjcDxiJoBkDi
Wvatl8ccQHs4hCFfrAdAj1Zzm+L6GEBBDIjShQkKQD3bZ4hu4xFAgwR+8GSZ
DEDu5AtdomcEQMLOIYh0owxAdCc1z0QrBEAAmcUfhK0MQABqXkHn7gNAfi0N
T6PBDEAM77AlLHYDQHhWnK3h6QxAMPlV7rWEAkBuqLpqXjoNQGwNoH/JoQBA
Wkz35FfbDUDIa2hE4bf5P5kWm3xn5Q1A1PC6KCY/+T/Y4D4Ud+8NQOB1DQ1r
xvg/VXWGQ5YDDkAEgLLV9NT3P1CeFaLUKw5AQJT8Zgjy9T9G8DNfUXwOQLi8
kIkvLPI/MpRw2UodD0BQG3Kd+0DlP7Rl/CitJg9AIHdWKMRf5D82N4h4DzAP
QPDSOrOMfuM/O9qfF9RCD0B4igPJHbzhP0Qgz1VdaA9AQPMp6X9u3D/G8Vql
v3EPQOCq8v4QrNo/ScPm9CF7D0BQYrsUounYP05m/pPmjQ9AYNFMQMRk1T9X
rC3Sb7MPQGBf3y4Rtsw/2n25IdK8D0BAznBaMzHJP1xPRXE0xg9AgD0ChlWs
xT9g8lwQ+dgPQAA4SrozRb0/4sPoX1viD0CAFm0ReDu2P2WVdK+96w9AgOgf
0Xhjrj/oZgD/H/UPQACkZX8BUKA/ajiMToL+D0AACFttUeRxP9KXR6fq/w9A
AIAiTooCMD/9/ClV
         "]]},
       Annotation[#, "Charting`Private`Tag$41171#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.008]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-1, 0}, 0.1]}, 
       {GrayLevel[1], {}, 
        DiskBox[NCache[{Rational[5, 2], 9}, {2.5, 9}], 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{4, 0}, 0.1]}}, {{{}, 
        DiskBox[{-1, 0.}, 0.1]}, {{}, 
        DiskBox[NCache[{Rational[1, 2], 9}, {0.5, 9}], 0.1]}, {{}, 
        DiskBox[NCache[{Rational[5, 2], 9.}, {2.5, 9.}], 0.1]}, {{}, 
        DiskBox[{4, 0.}, 0.1]}}}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.],
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAqzxw
+LuR579/0qsFs1IOQIhA/R4irdq/5oMwmon/EkBaMdXUV1q6v7ABBuLDwxZA
/11CCcxKyD/QON4gA0caQBtnBLOSO+A/qqYhA1cWHkBoU2cRgWHgP0e/hmaQ
JB5AtD/Kb2+H4D/k1+vJyTIeQE4YkCxM0+A/Hgm2kDxPHkCAyRumBWvhP5Br
Sh4iiB5A5iszmXia4j93MHM57fkeQLLwYX9e+eQ/QrrEb4PdH0D/3MTdTB/l
P+DSKdO86x9ATMknPDtF5T9864429vkfQOWh7fgXkeU/W46sfjQLIEAYU3ly
0SjmP5S/dkWnJyBAfbWQZURY5z8HIgvTjGAgQEh6v0sqt+k/7uYz7lfSIEDc
iPEwRODpP6lJLckM2iBAcZcjFl4J6j9lrCakweEgQJq0h+CRW+o/3HEZWivx
IEDs7k91+f/qP8z8/sX+DyFAkGPgnshI7D+rEsqdpU0hQCRyEoTicew/Z3XD
eFpVIUC5gERp/JrsPyLYvFMPXSFA4p2oMzDt7D+ana8JeWwhQDTYcMiXke0/
iiiVdUyLIUDXTAHyZtruP2g+YE3zyCFAbFsz14AD7z8koVkoqNAhQABqZbya
LO8/4ANTA13YIUCUeJehtFXvP5xmTN4R4CFAKIfJhs5+7z9YyUW5xuchQLyV
+2vop+8/Eyw/lHvvIUBRpC1RAtHvP8+OOG8w9yFA1ofG+tDY7z94OQUvp/gh
QPHLnag=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwATM6X/U=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/ghQAv3xRBr
CxRAcA3XZt/uIUDmwO8SExAUQKdemGPj5yFAwYoZFbsUFEDer1lg5+AhQJxU
QxdjGRRAFgEbXevZIUBR6JYbsyIUQIajnVbzyyFAvA8+JFM1FEBm6KJJA7Ah
QJJejDWTWhRAJXKtLyN4IUC2DJCooF8UQO/sJwOPcCFA2rqTG65kFEC5Z6LW
+mghQCEXmwHJbhRATl2XfdJZIUCwz6nN/oIUQHhIgcuBOyFAzkDHZWqrFEDL
HlVn4P4gQAkjApZB/BRAcsv8np2FIECA53f2750VQIBJmBwwJh9A4FhktKPL
FkBg9dLiFJ0bQH7cyaizEhhAhmqiBeXHF0COSDCaGkQZQFYmbzGwMxRAVAAV
8YRvGkAE/8AscbEQQFjKcn5LtBtA8EFPCTvGCUDPfNEIaeMcQCYTF8uJqwJA
hEGpyeIrHkDQ7RCMXvH1P8aZQr7sMB5AuMrgFOe09T8I8tuy9jUeQKCnsJ1v
ePU/i6IOnApAHkB8YVCvgP/0P5IDdG4yVB5AKNWP0qIN9D+fxT4TgnweQIy8
DhnnKfI/uknUXCHNHkCQFhlM38TsP/yhbVEr0h5AYNC4XfBL7D89+gZGNdce
QEiKWG8B0+s/wKo5L0nhHkAA/peSI+HqP8cLnwFx9R5AWOUW2Wf96D/UzWmm
wB0fQCC0FGbwNeU/71H/719uH0AwoyAAA07bP9KtjEATcx9AoGif5WNs2j+2
CRqRxncfQOAtHsvEitk/fME0Mi2BH0DAuBuWhsfXPwoxanT6kx9AIM4WLApB
1D/ujPfErZgfQGCTlRFrX9M/0eiEFWGdH0DQWBT3y33SP5ign7bHph9AgOMR
wo260D8mENX4lLkfQMDxGbAiaMo/CmxiSUi+H0BAfBd75KTIP+3H75n7wh9A
IAcVRqbhxj+0fwo7YswfQIAcENwpW8M/mNuXixXRH0AApw2n65fBP3s3JdzI
1R9AwGMW5Fqpvz9C7z99L98fQICODBBinLg/JkvNzeLjH0CAowem5RW1Pwmn
Wh6W6B9AQLkCPGmPsT/sAuhuSe0fQACe+6PZEaw/0F51v/zxH0AAyPHP4ASl
P7S6AhCw9h9AAOTP98/vmz+XFpBgY/sfQAB2eJ+8q4s/r/qvhtr/H0AAwPwD
/Bo8P+VkjdI=
         "]]},
       Annotation[#, "Charting`Private`Tag$41249#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.002], Dashing[{Small, Small}]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{5, 9}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.]}, {{}, DiskBox[{1, 9}, 0.]}, {{}, 
        DiskBox[{5, 9.}, 0.]}, {{}, DiskBox[{8, 0.}, 0.]}}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{"f", "(", 
            RowBox[{"2", " ", "x"}], ")"}]}], HoldForm], 18, StripOnInput -> 
       False], TraditionalForm], {3, 10}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 15.}, {-5., 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{{3.897299962039034*^9, 3.897299972942378*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"f4801e14-dad7-47d2-b766-25055a7e171e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans5.svg\"\>", ",", "\<\"trans5.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.897299962039034*^9, 3.897299973438446*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"aee818be-b017-46bd-9c27-b7eab70735eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"-", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15"}], "]"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "20", ",", "2"}], "]"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.0"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Dashed"}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"y", "==", 
           RowBox[{"f", "[", 
            RowBox[{"-", "x"}], "]"}]}], "]"}], ",", "18"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans6.svg\>\"", ",", "\"\<trans6.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897300845083322*^9, 3.897300861691127*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"3dd451e0-c07b-4b80-ac19-db4cdf58f26d"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.],
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAzPsCx/b/H8AAAJwM96obP+5o7ZGc
/h/AANgU3yipcD+RioGI2fcfwABNYHtmc5g/NKwVfxbxH8AAsn1fQV6mP3vv
PWyQ4x/AwGOM0a5TtT+cYTfoQN0fwADLdtZRD7o/vNMwZPHWH8AAM2Hb9Mq+
P/63I1xSyh/AwACbch0hxD+CgAlMFLEfwEDPb3xjmM0/ihHVK5h+H8AgtgzI
d0PYP5ozbOufGR/AkCnb7QGZ5T+4d5pqr08ewGBjwgDHQ/Q/TpJVIP6ZHMAs
kv49C2QEQEedvU5I7BrAVlCOJ052DkCmx3nWc1sZwA6pknyk7RNAXoSUFc+o
F8DmckK/kgUZQH5gA64LExbAht719dzGHUCwz0eO1AwWwPCQKFWC2R1A4j6M
bp0GFsBaQ1u0J+wdQEYdFS8v+hXALqjAcnIRHkAO2iawUuEVwNZxi+8HXB5A
nlNKspmvFcAmBSHpMvEeQL9GkbYnTBXA4hUmbsQNIEDytdWW8EUVwBVvvx0X
FyBAJCUad7k/FcBKyFjNaSAgQIgDozdLMxXAtHqLLA8zIEBQwLS4bhoVwIjf
8OpZWCBA4DnYurXoFMAwqbtn76IgQAAtH79DhRTAgDxRYRo4IUB8FkFehX4U
wEZenvI3QiFA9/9i/cZ3FMAOgOuDVUwhQO7SpjtKahTAm8OFppBgIUDbeC64
UE8UwLhKuusGiSFAVmJQV5JIFMB/bAd9JJMhQNJLcvbTQRTARY5UDkKdIUDI
HrY0VzQUwNTR7jB9sSFAtsQ9sV0ZFMDvWCN289khQDKuX1CfEhTAtXpwBxHk
IUCtl4Hv4AsUwHycvZgu7iFAsj401ocGFMD1obE+NPYhQKuDIog=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7XfwtGbFT+EDDGCg5DBJwHdV1mMEv2HbFbXCEwh+
bkzM4vK1CL7Kl6qpEx0R/FvdM9tXXxWC83+fapAI4EHwZbgyVn5xEoTzs021
WG/L8MP5yeb3Vhw+zA3na1VY/c9bwgHnL7wbfKTSkRXOf94oauMuwQTn75qq
4foi7O9+GN/g5c0v+nO/wfm7LkbVi1V9hvNddt3m/Bv2Ac5ft2qp5XFrBF9i
dn7mRAUE//ivCxHyUgg+ANLvW8Q=
         "]], LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAcwpeTsHL77/2obE+NPYhQKrYmvHf
ne+/oAhN/ZntIUB+uS5RdGfvv8jCOM9l4yFAJXtWEJ367r8XNxBz/c4hQPhb
6m8xxO6/PvH7RMnEIUDMPH7PxY3uv2ar5xaVuiFAdP6lju4g7r+2H7+6LKYh
QMKB9QxAR+2/VAhuAlx9IUCWYols1BDtv3zCWdQncyFAaUMdzGja7L+kfEWm
82ghQBAFRYuRbey/8/AcSotUIUBfiJQJ45Prv5LZy5G6KyFA/I4zBobg6b/P
qikhGdogQHCpr/gRE+O/it9BvSYnH0BWZiOh0nzJv5hRG7+zYxpAx8zZijNT
yD/NlPsqM7gVQDotwbJQl+M/Co/3vEGnEEACdhXcZBnwP/3O37Xo2QdABwxQ
gWLu9j/r2w982DT7P1gnWsA2Cfc/+Inxvlvk+j+qQmT/CiT3PwI40wHfk/o/
Tnl4fbNZ9z8WlJaH5fL5P5bmoHkExfc/Pkwdk/Kw+D8mwfFxppv4P468KqoM
LfY/RXaTYupI+j8xnUXYQCXxP5aRnaG+Y/o/PksnG8TU8D/orKfgkn76P0j5
CF5HhPA/jOO7Xju0+j+4qpjHm8bvP9RQ5FqMH/s/CBum3rVC7T9kKzVTLvb7
P6j7wAzqOug/g+DWQ3Kj/T/cee3RpFbcP965S214vP0/mElz4Foq2z86k8CW
ftX9P0gZ+e4Q/tk/8EWq6YoH/j/AuAQMfaXXP16rfY+ja/4/mPcbRlX00j+6
hPK4qYT+P0jHoVQLyNE/FV5n4q+d/j8ElydjwZvQP8wQUTW8z/4/4GxmAFuG
zD86diTb1DP/P5DqlHQLJMM/lk+ZBNtM/z/wiaCRd8vAP/EoDi7hZf8/0FJY
XcflvD+o2/eA7Zf/P4DQhtF3g7M/BLVsqvOw/z+AHjwXoKStP1+O4dP5yf8/
YJxqi1BCpD+6Z1b9/+L/P4A0Mv8BwJU/FkHLJgb8/z8AfHk8F9tnP+yUaRPH
//8/AIAnaLhYJT/IDori
         "]]},
       Annotation[#, "Charting`Private`Tag$43479#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.008]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-8, 0}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{-5, 9}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{2, 0}, 0.1]}}, {{{}, 
        DiskBox[{-8, 0.}, 0.1]}, {{}, DiskBox[{-5, 9.}, 0.1]}, {{}, 
        DiskBox[{-1, 9}, 0.1]}, {{}, DiskBox[{2, 0.}, 0.1]}}}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.],
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAqzxw
+LuR579/0qsFs1IOQIhA/R4irdq/5oMwmon/EkBaMdXUV1q6v7ABBuLDwxZA
/11CCcxKyD/QON4gA0caQBtnBLOSO+A/qqYhA1cWHkBoU2cRgWHgP0e/hmaQ
JB5AtD/Kb2+H4D/k1+vJyTIeQE4YkCxM0+A/Hgm2kDxPHkCAyRumBWvhP5Br
Sh4iiB5A5iszmXia4j93MHM57fkeQLLwYX9e+eQ/QrrEb4PdH0D/3MTdTB/l
P+DSKdO86x9ATMknPDtF5T9864429vkfQOWh7fgXkeU/W46sfjQLIEAYU3ly
0SjmP5S/dkWnJyBAfbWQZURY5z8HIgvTjGAgQEh6v0sqt+k/7uYz7lfSIEDc
iPEwRODpP6lJLckM2iBAcZcjFl4J6j9lrCakweEgQJq0h+CRW+o/3HEZWivx
IEDs7k91+f/qP8z8/sX+DyFAkGPgnshI7D+rEsqdpU0hQCRyEoTicew/Z3XD
eFpVIUC5gERp/JrsPyLYvFMPXSFA4p2oMzDt7D+ana8JeWwhQDTYcMiXke0/
iiiVdUyLIUDXTAHyZtruP2g+YE3zyCFAbFsz14AD7z8koVkoqNAhQABqZbya
LO8/4ANTA13YIUCUeJehtFXvP5xmTN4R4CFAKIfJhs5+7z9YyUW5xuchQLyV
+2vop+8/Eyw/lHvvIUBRpC1RAtHvP8+OOG8w9yFA1ofG+tDY7z94OQUvp/gh
QPHLnag=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwATM6X/U=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/ghQAv3xRBr
CxRAcA3XZt/uIUDmwO8SExAUQKdemGPj5yFAwYoZFbsUFEDer1lg5+AhQJxU
QxdjGRRAFgEbXevZIUBR6JYbsyIUQIajnVbzyyFAvA8+JFM1FEBm6KJJA7Ah
QJJejDWTWhRAJXKtLyN4IUC2DJCooF8UQO/sJwOPcCFA2rqTG65kFEC5Z6LW
+mghQCEXmwHJbhRATl2XfdJZIUCwz6nN/oIUQHhIgcuBOyFAzkDHZWqrFEDL
HlVn4P4gQAkjApZB/BRAcsv8np2FIECA53f2750VQIBJmBwwJh9A4FhktKPL
FkBg9dLiFJ0bQH7cyaizEhhAhmqiBeXHF0COSDCaGkQZQFYmbzGwMxRAVAAV
8YRvGkAE/8AscbEQQFjKcn5LtBtA8EFPCTvGCUDPfNEIaeMcQCYTF8uJqwJA
hEGpyeIrHkDQ7RCMXvH1P8aZQr7sMB5AuMrgFOe09T8I8tuy9jUeQKCnsJ1v
ePU/i6IOnApAHkB8YVCvgP/0P5IDdG4yVB5AKNWP0qIN9D+fxT4TgnweQIy8
DhnnKfI/uknUXCHNHkCQFhlM38TsP/yhbVEr0h5AYNC4XfBL7D89+gZGNdce
QEiKWG8B0+s/wKo5L0nhHkAA/peSI+HqP8cLnwFx9R5AWOUW2Wf96D/UzWmm
wB0fQCC0FGbwNeU/71H/719uH0AwoyAAA07bP9KtjEATcx9AoGif5WNs2j+2
CRqRxncfQOAtHsvEitk/fME0Mi2BH0DAuBuWhsfXPwoxanT6kx9AIM4WLApB
1D/ujPfErZgfQGCTlRFrX9M/0eiEFWGdH0DQWBT3y33SP5ign7bHph9AgOMR
wo260D8mENX4lLkfQMDxGbAiaMo/CmxiSUi+H0BAfBd75KTIP+3H75n7wh9A
IAcVRqbhxj+0fwo7YswfQIAcENwpW8M/mNuXixXRH0AApw2n65fBP3s3JdzI
1R9AwGMW5Fqpvz9C7z99L98fQICODBBinLg/JkvNzeLjH0CAowem5RW1Pwmn
Wh6W6B9AQLkCPGmPsT/sAuhuSe0fQACe+6PZEaw/0F51v/zxH0AAyPHP4ASl
P7S6AhCw9h9AAOTP98/vmz+XFpBgY/sfQAB2eJ+8q4s/r/qvhtr/H0AAwPwD
/Bo8P+VkjdI=
         "]]},
       Annotation[#, "Charting`Private`Tag$43557#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.002], Dashing[{Small, Small}]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{5, 9}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.]}, {{}, DiskBox[{1, 9}, 0.]}, {{}, 
        DiskBox[{5, 9.}, 0.]}, {{}, DiskBox[{8, 0.}, 0.]}}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{"f", "(", 
            RowBox[{"-", "x"}], ")"}]}], HoldForm], 18, StripOnInput -> 
       False], TraditionalForm], {3, 10}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10., 15.}, {-5., 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{{3.897300852005665*^9, 3.897300862149193*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"6f074721-6048-4d01-b45c-a0f03dd55ecf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans6.svg\"\>", ",", "\<\"trans6.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.897300852005665*^9, 3.897300862672309*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"bd24cb7a-e967-4a67-b906-19ba920773ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.008", "]"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "15"}], "]"}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "20", ",", "2"}], "]"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"\"\<Label\>\"", ",", " ", "12"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPiecewise", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
     RowBox[{"\"\<DotSize\>\"", "\[Rule]", "0.0"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Dashed"}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Text", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"y", "==", 
           RowBox[{"-", 
            RowBox[{"f", "[", "x", "]"}]}]}], "]"}], ",", "18"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"-", "6"}]}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<trans7.svg\>\"", ",", "\"\<trans7.pdf\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8973011052929287`*^9, 3.897301138865205*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"77ed967b-676d-4116-9b86-e0c09932ebb4"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.008], Opacity[1.],
         LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAASIeQANH//78AAEXNyZ8hvwJ/SZiG
6P+/gL7gyA2bkb9KdX3/H83/v0AE9DAAFKO/kWuxZrmx/7+gqXd9eVqtvyBY
GTXsev+/AHo/C7bzuL8/MenRUQ3/vxhiI1JUwMa/hicdOevx/r9wS0Sl8lHJ
v84dUaCE1v6/sDRl+JDjy79eCrlut5/+v5iDU89mg9C/fOOICx0y/r8wVpV1
o6bVv7qVKEXoVv2/SPsYwhzt378IW+djATz9v9Ddk6j3l+C/ViCmghoh/b/8
PRvwYDnhv/KqI8BM6/y/VP4pfzN84r8pwB47sX/8vwp/R53YAeW/mOoUMXqo
+79wgILZIg3qv3U/AR0M+vm/oUH8qNsR8r8w6dn0L532v3BEciFwKPy/RLrb
Cf1W8L+aaDZxhH0HwHCpr/gRE+O/diC+QtnYEMBWZiOh0nzJv2iu5EBMnBXA
x8zZijNTyD8yawTVzEcawDotwbJQl+M/9XAIQ75YH8A11NaWvsnjP5SPkHin
ax/AMHvseiz84z8yrhiukH4fwCbJF0MIYeQ/b+soGWOkH8ATZW7TvyrlP+hl
Se8H8B/A7Jwb9C6+5j9sLcXNqEMgwJ8MdjUN5ek/XiIGevLaIMCas4sZexfq
P6wxyhRn5CDAllqh/ehJ6j/8QI6v2+0gwIyozMXEruo/ml8W5cQAIcB4RCNW
fHjrP9acJlCXJiHAUnzQdusL7T9PF0cmPHIhwE0j5lpZPu0/niYLwbB7IcBI
yvs+x3DtP+41z1slhSHAPhgnB6PV7T+MVFeRDpghwCu0fZdan+4/yJFn/OC9
IcAmW5N7yNHuPxihK5dVxyHAIgKpXzYE7z9msO8xytAhwB2pvkOkNu8/tb+z
zD7aIcAYUNQnEmnvPwTPd2ez4yHAE/fpC4Cb7z9U3jsCKO0hwHMKXk7By+8/
9qGxPjT2IcD+22/O
         "]], 
        LineBox[{{1.0063775510204083`, -9.}, {1.2196995567465487`, -9.}, {
         1.4331994105602932`, -9.}, {1.8524038934683922`, -9.}, {
         2.243404988391795, -9.}, {2.6674271851264204`, -9.}, {
         3.0632459938763494`, -9.}, {3.451269577906889, -9.}, {
         3.8723142637486507`, -9.}, {4.265155561605716, -9.}, {
         4.47808676143986, -9.}, {4.691017961274004, -9.}, {
         4.7904327141949015`, -9.}, {4.8898474671158, -9.}, {
         4.939554843576249, -9.}, {4.989262220036698, -9.}, {
         4.9936224489795915`, -9.}}], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAsj401ocGFED1obE+NPYhwKiSQzbR
FBRABKSaLsbgIcDotPUFLhsUQKRwD/c61yHAaflZpecnFEDiCfmHJMQhwKob
DHVELhRAgdZtUJm6IcDqPb5EoTQUQCGj4hgOsSHAaoIi5FpBFEBhPMyp950h
wGwL6yLOWhRA3m6fy8p3IcDreboEC2EUQCBJ6HhvbiHAauiJ5kdnFEBhIzEm
FGUhwGfFKKrBcxRA5tfCgF1SIcBif2YxtYwUQO1A5jXwLCHAWfPhP5y+FED6
Ei2gFeIgwEbb2FxqIhVAF7e6dGBMIMAfq8aWBuoVQKP+qzvsQR7Ae7hDUw+b
F0CP1jQG0i4ZwHCmbLY2LxlAsAy63FtyFMAMAjdiLuUaQLjztbLpoA7ARW1U
lSqTHEBicAWAAI0EwBi5HW9FJB5A4FKbyr5M9r/+Y6cbESseQBhQJ7Qy+/W/
5A4xyNwxHkBQTbOdpqn1v7BkRCF0Px5AwEfLcI4G9b9HEGvToloeQKw8+xZe
wPO/dme4NwCRHkB4Jltj/TPxv9UVUwC7/R5ACPQ1+Hc26L+6wNyshgQfQJDu
Tctfk+e/oGtmWVILH0AA6WWeR/Dmv2zBebLpGB9A4N2VRBeq5b8EbaBkGDQf
QKDH9ZC2HeO/NMTtyHVqH0BANmtT6gncvxpvd3VBcR9AICub+bnD2r8AGgEi
DXgfQAAgy5+Jfdm/zG8Ue6SFH0DACSvsKPHWv2MbOy3ToB9AcN3qhGfY0b9I
xsTZnqcfQIDSGis3ktC/LnFOhmquH0DAjpWiDZjOv/rGYd8BvB9AQGJVO0x/
yb+ScoiRMNcfQIASqtmSm76/+sysuIjdH0CARGZ+ddm5v2In0d/g4x9AgHYi
I1gXtb/KgfUGOeofQICo3sc6VbC/M9wZLpHwH0CAszXZOianv5w2PlXp9h9A
ACxcRQBEm78EkWJ8Qf0fQADombAVd4C/zE6kJcv/H0AAgHNi4tFDv8OFVvs=

         "]]},
       Annotation[#, "Charting`Private`Tag$47344#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.008]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{5, -9}, 0.1]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.1]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.1]}, {{}, DiskBox[{1, -9}, 0.1]}, {{}, 
        DiskBox[{5, -9.}, 0.1]}, {{}, DiskBox[{8, 0.}, 0.1]}}}}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.002], Opacity[1.],
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAA5xtHgTb//78AWGJV4eNCP/iCPu3p
7v+/AIw7IhyhiT/QwzM0itr/vwAkLdlYGJw/qQQpeyrG/7+gQJ7QEbClP1qG
Ewlrnf+/IM9WTO57sj8yxwhQC4n/v6CmWv7gTbY/Cwj+lqt0/7/wfV6w0x+6
P7yJ6CTsS/+/YBYzitzhwD8fjb1Abfr+vxjFOu7Bhcg/cL/iF2jn/r+ADb7C
PU7KP8LxB+9i1P6/0FVBl7kWzD9kVlKdWK7+v6DmR0Cxp88/qh/n+UNi/r8I
hCpJ0GTTPzayELMayv2/eKU3m7+G2j9O12MlyJn8vyz0qB9PZeQ/fiEKCiM5
+r+Gm+HhllTxPwOHXT3Lj/W/92rnR55Q/z+Ro8yWAoHwv6YKzR18PgdAqzxw
+LuR579/0qsFs1IOQIhA/R4irdq/5oMwmon/EkBaMdXUV1q6v7ABBuLDwxZA
/11CCcxKyD/QON4gA0caQBtnBLOSO+A/qqYhA1cWHkBoU2cRgWHgP0e/hmaQ
JB5AtD/Kb2+H4D/k1+vJyTIeQE4YkCxM0+A/Hgm2kDxPHkCAyRumBWvhP5Br
Sh4iiB5A5iszmXia4j93MHM57fkeQLLwYX9e+eQ/QrrEb4PdH0D/3MTdTB/l
P+DSKdO86x9ATMknPDtF5T9864429vkfQOWh7fgXkeU/W46sfjQLIEAYU3ly
0SjmP5S/dkWnJyBAfbWQZURY5z8HIgvTjGAgQEh6v0sqt+k/7uYz7lfSIEDc
iPEwRODpP6lJLckM2iBAcZcjFl4J6j9lrCakweEgQJq0h+CRW+o/3HEZWivx
IEDs7k91+f/qP8z8/sX+DyFAkGPgnshI7D+rEsqdpU0hQCRyEoTicew/Z3XD
eFpVIUC5gERp/JrsPyLYvFMPXSFA4p2oMzDt7D+ana8JeWwhQDTYcMiXke0/
iiiVdUyLIUDXTAHyZtruP2g+YE3zyCFAbFsz14AD7z8koVkoqNAhQABqZbya
LO8/4ANTA13YIUCUeJehtFXvP5xmTN4R4CFAKIfJhs5+7z9YyUW5xuchQLyV
+2vop+8/Eyw/lHvvIUBRpC1RAtHvP8+OOG8w9yFA1ofG+tDY7z94OQUvp/gh
QPHLnag=
         "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQLbpnTtN04Q/2DGCg5PDsr86Nc8kIPr/0xEVM2xD8
xNBI86yoj3D+5n7FMxf/IfhpAvavylq+wPlSE2M4ZLi+w/neJrMtDu37Dedb
CcQvzMlhcIDxjcOLFNTOMcH5M02bsp4ps8L51RYtivFr2OF8R56OS62cXHB+
M0vdh5SZPHC+0ZSCm16y/HB+UpVR3PtdAnD+yz2qbVMZhOD8tEvzJabMQPAf
PZdcPclAGM7va912VqgawbdSDv4w6SiCv9Tr1w+jGwi+QNFCxsuvEPxjrF9Z
lb8g+L8vRMhL/UbwATM6X/U=
         "]], LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAABS+n4OUEFEB4OQUvp/ghQAv3xRBr
CxRAcA3XZt/uIUDmwO8SExAUQKdemGPj5yFAwYoZFbsUFEDer1lg5+AhQJxU
QxdjGRRAFgEbXevZIUBR6JYbsyIUQIajnVbzyyFAvA8+JFM1FEBm6KJJA7Ah
QJJejDWTWhRAJXKtLyN4IUC2DJCooF8UQO/sJwOPcCFA2rqTG65kFEC5Z6LW
+mghQCEXmwHJbhRATl2XfdJZIUCwz6nN/oIUQHhIgcuBOyFAzkDHZWqrFEDL
HlVn4P4gQAkjApZB/BRAcsv8np2FIECA53f2750VQIBJmBwwJh9A4FhktKPL
FkBg9dLiFJ0bQH7cyaizEhhAhmqiBeXHF0COSDCaGkQZQFYmbzGwMxRAVAAV
8YRvGkAE/8AscbEQQFjKcn5LtBtA8EFPCTvGCUDPfNEIaeMcQCYTF8uJqwJA
hEGpyeIrHkDQ7RCMXvH1P8aZQr7sMB5AuMrgFOe09T8I8tuy9jUeQKCnsJ1v
ePU/i6IOnApAHkB8YVCvgP/0P5IDdG4yVB5AKNWP0qIN9D+fxT4TgnweQIy8
DhnnKfI/uknUXCHNHkCQFhlM38TsP/yhbVEr0h5AYNC4XfBL7D89+gZGNdce
QEiKWG8B0+s/wKo5L0nhHkAA/peSI+HqP8cLnwFx9R5AWOUW2Wf96D/UzWmm
wB0fQCC0FGbwNeU/71H/719uH0AwoyAAA07bP9KtjEATcx9AoGif5WNs2j+2
CRqRxncfQOAtHsvEitk/fME0Mi2BH0DAuBuWhsfXPwoxanT6kx9AIM4WLApB
1D/ujPfErZgfQGCTlRFrX9M/0eiEFWGdH0DQWBT3y33SP5ign7bHph9AgOMR
wo260D8mENX4lLkfQMDxGbAiaMo/CmxiSUi+H0BAfBd75KTIP+3H75n7wh9A
IAcVRqbhxj+0fwo7YswfQIAcENwpW8M/mNuXixXRH0AApw2n65fBP3s3JdzI
1R9AwGMW5Fqpvz9C7z99L98fQICODBBinLg/JkvNzeLjH0CAowem5RW1Pwmn
Wh6W6B9AQLkCPGmPsT/sAuhuSe0fQACe+6PZEaw/0F51v/zxH0AAyPHP4ASl
P7S6AhCw9h9AAOTP98/vmz+XFpBgY/sfQAB2eJ+8q4s/r/qvhtr/H0AAwPwD
/Bo8P+VkjdI=
         "]]},
       Annotation[#, "Charting`Private`Tag$47422#1"]& ], {}}, {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], EdgeForm[RGBColor[
     0.24720000000000014`, 0.24, 0.6]], 
     {Thickness[0.002], Dashing[{Small, Small}]}, {{}, {
       {GrayLevel[1], {}, DiskBox[{-2, 0}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{5, 9}, 0.]}, 
       {GrayLevel[1], {}, DiskBox[{8, 0}, 0.]}}, {{{}, 
        DiskBox[{-2, 0.}, 0.]}, {{}, DiskBox[{1, 9}, 0.]}, {{}, 
        DiskBox[{5, 9.}, 0.]}, {{}, DiskBox[{8, 0.}, 0.]}}}}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["x", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
       TagBox[
        RowBox[{"y", "\[LongEqual]", 
          RowBox[{"-", 
            RowBox[{"f", "(", "x", ")"}]}]}], HoldForm], 18, StripOnInput -> 
       False], TraditionalForm], {10, -6}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 
   7, 8, 9, 10, 11, 12, 13, 14, 15}, {-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10., 15.}, {-10., 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}, {{-10, 
      FormBox[
       RowBox[{"-", "10"}], TraditionalForm]}, {-8, 
      FormBox[
       RowBox[{"-", "8"}], TraditionalForm]}, {-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}, {18, 
      FormBox["18", TraditionalForm]}, {20, 
      FormBox["20", TraditionalForm]}}},
  TicksStyle->Directive["Label", 12]]], "Output",
 CellChangeTimes->{{3.897301112760187*^9, 3.897301139325244*^9}},
 CellLabel->
  "Out[161]=",ExpressionUUID->"0fed7a83-12fe-4b8e-af95-7d8d645651bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trans7.svg\"\>", ",", "\<\"trans7.pdf\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.897301112760187*^9, 3.897301139831135*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"480726e9-7007-40bb-b1e4-dbd6fbc85fa4"]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5d75a269-e6d9-4584-bd6e-65bad6a9a2f1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 204, 4, 37, "Input",ExpressionUUID->"a491692a-93ed-4358-8868-89885c7b18d8"],
Cell[CellGroupData[{
Cell[787, 28, 51579, 1341, 5042, "Input",ExpressionUUID->"a99f547d-f3d9-4dbe-b4c5-78a5ab7b299f"],
Cell[52369, 1371, 282, 4, 42, "Output",ExpressionUUID->"078312e7-717c-404d-86e5-ec4880019082"]
}, Open  ]],
Cell[52666, 1378, 154, 3, 37, "Input",ExpressionUUID->"0d7fb5a5-e047-4c93-9da8-e964130e3092"],
Cell[CellGroupData[{
Cell[52845, 1385, 3681, 96, 402, "Input",ExpressionUUID->"9c89d5d8-e722-4f9c-b5f1-2c7a506ae065"],
Cell[56529, 1483, 113763, 1905, 483, "Output",ExpressionUUID->"cc732194-8a41-420a-ae06-737a8269c41e"],
Cell[170295, 3390, 605, 11, 42, "Output",ExpressionUUID->"9c6ac694-ba3e-42ab-8869-7df17c04810c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170937, 3406, 340, 9, 37, "Input",ExpressionUUID->"cbee08f3-1424-4438-a83e-832c70643a05"],
Cell[171280, 3417, 4508, 94, 304, "Output",ExpressionUUID->"49962c24-ba62-471d-ab3d-c2241b153eae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175825, 3516, 206, 4, 37, "Input",ExpressionUUID->"81403b31-cccd-4806-8a57-945b966e735e"],
Cell[176034, 3522, 1461, 44, 67, "Output",ExpressionUUID->"ed4ee97d-7a7e-4c56-b640-ac097d8bdbc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177532, 3571, 2883, 79, 298, "Input",ExpressionUUID->"ebf6ef82-4820-40e6-9a80-5a40f6b44bcf"],
Cell[180418, 3652, 10579, 219, 483, "Output",ExpressionUUID->"7ea93af1-819f-4c90-9ca9-3c81009d0f09"],
Cell[191000, 3873, 283, 7, 42, "Output",ExpressionUUID->"c928781d-8988-4b37-bbd1-6495782d365d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191320, 3885, 2835, 78, 298, "Input",ExpressionUUID->"c7cb1278-dfa1-4303-8b2b-036c5f00bcad"],
Cell[194158, 3965, 10391, 216, 483, "Output",ExpressionUUID->"11c7b31c-e592-41d6-b45b-0971ee33728e"],
Cell[204552, 4183, 257, 6, 42, "Output",ExpressionUUID->"a265e6fb-36b4-4619-b3bb-26147ccf254b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204846, 4194, 2822, 78, 298, "Input",ExpressionUUID->"8c1c860c-2b7e-4eb6-a4be-f2951090388f"],
Cell[207671, 4274, 10718, 223, 561, "Output",ExpressionUUID->"c9f33378-865a-4b3d-b595-93748e02ede4"],
Cell[218392, 4499, 258, 6, 42, "Output",ExpressionUUID->"558a167a-27f5-43c5-ac9d-9e7c444a61d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218687, 4510, 2814, 77, 298, "Input",ExpressionUUID->"6b0b0db3-0801-4464-af2c-c0f1804c20c3"],
Cell[221504, 4589, 10512, 219, 483, "Output",ExpressionUUID->"f4801e14-dad7-47d2-b766-25055a7e171e"],
Cell[232019, 4810, 258, 6, 42, "Output",ExpressionUUID->"aee818be-b017-46bd-9c27-b7eab70735eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232314, 4821, 2816, 77, 298, "Input",ExpressionUUID->"3dd451e0-c07b-4b80-ac19-db4cdf58f26d"],
Cell[235133, 4900, 10175, 213, 387, "Output",ExpressionUUID->"6f074721-6048-4d01-b45c-a0f03dd55ecf"],
Cell[245311, 5115, 258, 6, 42, "Output",ExpressionUUID->"bd24cb7a-e967-4a67-b906-19ba920773ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245606, 5126, 2852, 79, 298, "Input",ExpressionUUID->"77ed967b-676d-4116-9b86-e0c09932ebb4"],
Cell[248461, 5207, 10486, 218, 478, "Output",ExpressionUUID->"0fed7a83-12fe-4b8e-af95-7d8d645651bd"],
Cell[258950, 5427, 258, 6, 42, "Output",ExpressionUUID->"480726e9-7007-40bb-b1e4-dbd6fbc85fa4"]
}, Open  ]]
}
]
*)

