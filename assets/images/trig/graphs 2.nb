(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    409091,       8402]
NotebookOptionsPosition[    400265,       8253]
NotebookOutlinePosition[    400625,       8269]
CellTagsIndexPosition[    400582,       8266]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"4", ",", 
        RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.15", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.5"}], ",", "4.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<point.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.681547336078837*^9, 
  3.6815475575851393`*^9}},ExpressionUUID->"ad9afe29-c988-4a62-9d43-\
bccf1b72efca"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{4., -1.}, {4., -1.}}]}, {}}, {}}, 
   ArrowBox[{{0, 0}, {4.6, -1.15}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.5, 4.5}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6815473715512543`*^9, 3.6815474954436693`*^9}, 
   3.681547558056674*^9, 3.681586347674407*^9, 3.6815876325651827`*^9, 
   3.712068178953661*^9},ExpressionUUID->"cbedbc6a-c845-40a8-8423-\
80d962fa118b"],

Cell[BoxData["\<\"point.png\"\>"], "Output",
 CellChangeTimes->{{3.6815473715512543`*^9, 3.6815474954436693`*^9}, 
   3.681547558056674*^9, 3.681586347674407*^9, 3.6815876325651827`*^9, 
   3.7120681791113462`*^9},ExpressionUUID->"fcb3af61-1aa2-4dce-a96e-\
86c4d5ae62f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"121", "*", "Degree"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "0.6"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", "0.6"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Theta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", "Italic"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<circle.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68154762664086*^9, 3.68154788092201*^9}, {
  3.681547920678978*^9, 
  3.68154811676081*^9}},ExpressionUUID->"b28297af-5897-48fd-9c59-\
1dce047bd601"],

Cell[BoxData[
 RowBox[{"121", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.681547677407929*^9, 3.681547733814436*^9}, {
  3.681547778611038*^9, 3.681547833025559*^9}, {3.6815478678438873`*^9, 
  3.681547881352007*^9}, {3.681547925102397*^9, 3.681548043271468*^9}, {
  3.681548090540347*^9, 
  3.681548116962864*^9}},ExpressionUUID->"e93df091-34af-4768-95a3-\
65c74fdc847a"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{-2.0601522996402166`, 
       3.4286692028084493`}, {-2.0601522996402166`, 
       3.4286692028084493`}}]}, {}}, {}}, {{}, {{}, 
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{4., 0.}, {4., 0.}}]}, {}}, {}}, InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-3.175190374550271, 3.685836503510562}], 
   ArrowBox[NCache[{{0, 0}, {(-5) Sin[31 Degree], 5 Cos[31 Degree]}}, {{0, 
      0}, {-2.575190374550271, 4.285836503510562}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 121 Degree}, {0, 2.111848394913139}]], 
   InsetBox[
    StyleBox[
     RowBox[{"121", " ", "\[Degree]"}],
     StripOnInput->False,
     FontSize->Large], {0.9924235601034672, 1.0703556959398997}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->{Medium, Italic},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681547677407929*^9, 3.681547733814436*^9}, {
  3.681547778611038*^9, 3.681547833025559*^9}, {3.6815478678438873`*^9, 
  3.681547881352007*^9}, {3.681547925102397*^9, 3.681548043271468*^9}, {
  3.681548090540347*^9, 
  3.681548117010808*^9}},ExpressionUUID->"debd94ab-5404-4b7b-9bdf-\
41ba1ea1ae64"],

Cell[BoxData["\<\"circle.png\"\>"], "Output",
 CellChangeTimes->{{3.681547677407929*^9, 3.681547733814436*^9}, {
  3.681547778611038*^9, 3.681547833025559*^9}, {3.6815478678438873`*^9, 
  3.681547881352007*^9}, {3.681547925102397*^9, 3.681548043271468*^9}, {
  3.681548090540347*^9, 
  3.681548117130707*^9}},ExpressionUUID->"0d185b85-9131-470a-92b7-\
e2556b6f5f60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}], ",", 
           RowBox[{"10", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.5"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Alpha]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "0.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"10", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"4", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Beta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "0.3"}], ",", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "1.5"}]}], 
        "}"}]}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<triangle1.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.681586351403664*^9, 3.681586385226166*^9}, {
  3.681586417420066*^9, 3.681586554954699*^9}, {3.681586643550521*^9, 
  3.681586768415415*^9}, {3.6815874667976017`*^9, 
  3.6815876419539223`*^9}},ExpressionUUID->"693a7936-6024-4b22-9961-\
66976462aeae"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    TagBox[
     PolygonBox[
      NCache[{{0, 0}, {4, 0}, {4, 2 21^Rational[1, 2]}}, {{0, 0}, {4, 0}, {
        4, 9.16515138991168}}]],
     "Triangle"]}, 
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    RectangleBox[{3.5, 0}, {4, 0.5}]}, InsetBox[
    StyleBox["\[Alpha]",
     StripOnInput->False,
     FontSize->Large], {0.8, 0.5}], InsetBox[
    StyleBox["10",
     StripOnInput->False,
     FontSize->Large], {1.5, 5}], InsetBox[
    StyleBox["4",
     StripOnInput->False,
     FontSize->Large], {2, -0.5}], InsetBox[
    StyleBox["\[Beta]",
     StripOnInput->False,
     FontSize->Large], {3.7, 7.66515138991168}]}]], "Output",
 CellChangeTimes->{{3.681586491655265*^9, 3.681586530513294*^9}, 
   3.681586605262847*^9, {3.6815866570435038`*^9, 3.681586768598741*^9}, {
   3.6815875245729523`*^9, 
   3.681587643879759*^9}},ExpressionUUID->"9c6a7e4f-012b-4851-b34a-\
7bdd89df7007"],

Cell[BoxData["\<\"triangle1.png\"\>"], "Output",
 CellChangeTimes->{{3.681586491655265*^9, 3.681586530513294*^9}, 
   3.681586605262847*^9, {3.6815866570435038`*^9, 3.681586768598741*^9}, {
   3.6815875245729523`*^9, 
   3.68158764396809*^9}},ExpressionUUID->"d89273b0-5066-48f4-b23d-\
883ef708794b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"7", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcSin", "[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}], ",", 
           RowBox[{"10", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.5"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Alpha]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "0.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"10", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"4", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Beta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "0.3"}], ",", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "1.5"}]}], 
        "}"}]}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<triangle2.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6815877406357727`*^9, 3.681587740706087*^9}, {
  3.681587954265313*^9, 
  3.681588002593586*^9}},ExpressionUUID->"085b212d-6c0e-4fb8-9886-\
0d8010455d56"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    TagBox[
     PolygonBox[
      NCache[{{0, 0}, {0, 0}, {4, 2 21^Rational[1, 2]}}, {{0, 0}, {0, 0}, {
        4, 9.16515138991168}}]],
     "Triangle"]}, 
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    RectangleBox[{3.5, 0}, {4, 0.5}]}, InsetBox[
    StyleBox["\[Alpha]",
     StripOnInput->False,
     FontSize->Large], {0.8, 0.5}], InsetBox[
    StyleBox["10",
     StripOnInput->False,
     FontSize->Large], {1.5, 5}], InsetBox[
    StyleBox["4",
     StripOnInput->False,
     FontSize->Large], {2, -0.5}], InsetBox[
    StyleBox["\[Beta]",
     StripOnInput->False,
     FontSize->Large], {3.7, 7.66515138991168}]}]], "Output",
 CellChangeTimes->{
  3.681588003641938*^9},ExpressionUUID->"b5e91e2b-a71e-4cd2-b266-\
90f2b97838e1"],

Cell[BoxData["\<\"triangle2.png\"\>"], "Output",
 CellChangeTimes->{
  3.681588003732849*^9},ExpressionUUID->"041649c6-865d-42e9-a9ef-\
592b59475773"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682166663813621*^9, 3.6821666936348457`*^9}, {
   3.68216674389616*^9, 3.682166773654944*^9}, {3.6821668514054413`*^9, 
   3.682166860218754*^9}, {3.682166903897148*^9, 3.682166957918343*^9}, {
   3.6821670782573566`*^9, 3.682167096951165*^9}, 
   3.682167162543933*^9},ExpressionUUID->"b179fdae-78ea-46f4-ae95-\
ad7e2d04d32b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
rbTYIX5mCn1SNx0jQkex2OPO77VqUyhLrU9y9RtFvTNa8RTdKXyu8SbAy3EU
bSzt776+MYVqFbbvrFRG8dLOd14fn0+hea5EgSttBI2OfzlZ830K78c6TmdJ
jGBJ+NdX2/SouFPkR1eN8AgOcBjVsV0jvVHy5vXOjSN4nvEpdfwGWVfXkmwm
/wzjq6GwG8HOVPRx3p3dWjWMc1wG2l/CqajNT88YNBrGdWJBqh+HqOi75smn
Xp8h7N1pbpBqQcO3N7O4LR8MoZZR49MaaxoK/fR2nbUewg+hDht7HWioILfg
+lt7COnXkkzoXjTkCV2w7RIkfz+57C7G0fD0nPq+fONBNI+pz947RsOkJ+Ma
h+L78f2FyLnxq3SM282/Q+plP3afOHEj2YyO8uwCeQfv9+PUzJbRu5Z0dP9p
ZrX+JNmnquMLg450FNxw6Upgex/yvTC1dg2go0KGrKQtWx9Ouywr+pN9P7Vh
v3nzlR4sinYSkzzAwNU+OU6bTvWg2JLsNRlJBu4Vk12jv7cH7z1UtZWRYaCA
igPWEN0IixbSu08zcMMmS05Lz270U3myMkufgXmvNNg+J3XhppjfVV+fMbB/
h5Km3u8OnBfkc2IZYGDTJQu3JwMdZN5X2LhvlIHvXlVuiCvvQFEhtc9KFAbu
yJt2GfHrQMHcpcL7swxUzGrq3berA+VrFo09OZioPJCQ03O+Hd8eMSvwPMhE
FdtH3PzBraiUF/1v1pGJ5nuOyGS7tqKOzZcmvQdMLD8neU/HuBU1lCgP0p8w
Md6R65DH/lYcTXI1MvBhYpSztFtafgvKf005YhTGxNuZPtKGA82oSHyzP57P
RPVbLp2cu5vwOt8/H51f5PO2cKX0rmxChyJDzpOLTOTOWHFPr6ERc/nTDgr/
Y+KlvU//ueo2Iu/CqxvNHGQOmG42tDb7jg9985y6+ck962gavviwHvP3X9b2
liJzj7iiicSperR2OF21KEOgwIdFmyts9eizTqrlljyBlMrs1IjndWjwYDJF
/BSBu8y6ZLuDarEw9qLFVXVyL/7axL87uQa9vh3eonuD3Lv+89dm7tXgrtL6
VC3SOyPT9frypGpIP4eWc3fIXL+U9kU+txpFkgdytt8nUGtwTnq+rArnIytn
7z0isGDgccK9zgpcYmx+kxxI4Dd9u8XJsAoULC4Mlia9U+/2tNVVwwq0ifq+
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
8H8AtM9G1A==
      "]]}}, {}, {{{
      LineBox[{Scaled[{0, 0}, {1.4142135479610376`, 0.}], 
        Scaled[{0.006, 0.}, {1.4142135479610376`, 0.}]}], 
      LineBox[{Scaled[{0, 0}, {1.224744858910381, 0.7071067739805188}], 
        Scaled[{0.005196152422706632, 0.003}, {1.224744858910381, 
         0.7071067739805188}]}], 
      LineBox[{Scaled[{0, 0}, {0.7071067739805188, 1.224744858910381}], 
        Scaled[{0.003, 0.005196152422706632}, {0.7071067739805188, 
         1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {0., 1.4142135479610376`}], 
        Scaled[{0., 0.006}, {0., 1.4142135479610376`}]}], 
      LineBox[{Scaled[{0, 0}, {-0.7071067739805188, 1.224744858910381}], 
        Scaled[{-0.003, 0.005196152422706632}, {-0.7071067739805188, 
         1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {-1.224744858910381, 0.7071067739805188}], 
        Scaled[{-0.005196152422706632, 0.003}, {-1.224744858910381, 
         0.7071067739805188}]}], 
      LineBox[{Scaled[{0, 0}, {-1.4142135479610376`, 0.}], 
        Scaled[{-0.006, 0.}, {-1.4142135479610376`, 0.}]}], 
      LineBox[{Scaled[{0, 0}, {-1.224744858910381, -0.7071067739805188}], 
        Scaled[{-0.005196152422706632, -0.003}, {-1.224744858910381, \
-0.7071067739805188}]}], 
      LineBox[{Scaled[{0, 0}, {-0.7071067739805188, -1.224744858910381}], 
        Scaled[{-0.003, -0.005196152422706632}, {-0.7071067739805188, \
-1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {0., -1.4142135479610376`}], 
        Scaled[{0., -0.006}, {0., -1.4142135479610376`}]}], 
      LineBox[{
       Scaled[{0, 0}, {0.7071067739805188, -1.224744858910381}], 
        Scaled[{0.003, -0.005196152422706632}, {
         0.7071067739805188, -1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {1.224744858910381, -0.7071067739805188}], 
        Scaled[{0.005196152422706632, -0.003}, {
         1.224744858910381, -0.7071067739805188}]}]}, 
     LineBox[{}], {
      InsetBox["0", Offset[{8, 0}, {1.4142135479610376, 0.}], {-1, 0},
       Background->Automatic], InsetBox[
       FractionBox["\[Pi]", "6"], NCache[
       Offset[{4 3^Rational[1, 2], 4}, {1.224744858910381, 
         0.7071067739805188}], 
        Offset[{6.928203230275509, 4}, {1.224744858910381, 
         0.7071067739805188}]], 
       NCache[{Rational[-1, 2] 3^Rational[1, 2], 
         Rational[-1, 2]}, {-0.8660254037844386, -0.5}],
       Background->Automatic], InsetBox[
       FractionBox["\[Pi]", "3"], NCache[
       Offset[{4, 4 3^Rational[1, 2]}, {0.7071067739805188, 
         1.224744858910381}], 
        Offset[{4, 6.928203230275509}, {0.7071067739805188, 
         1.224744858910381}]], 
       NCache[{Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.4142135479610376}], {0, -1},
       
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
       Offset[{-4, 4 3^Rational[1, 2]}, {-0.7071067739805188, 
         1.224744858910381}], 
        Offset[{-4, 6.928203230275509}, {-0.7071067739805188, 
         1.224744858910381}]], 
       NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        0.5, -0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], NCache[
       Offset[{(-4) 3^Rational[1, 2], 4}, {-1.224744858910381, 
         0.7071067739805188}], 
        Offset[{-6.928203230275509, 4}, {-1.224744858910381, 
         0.7071067739805188}]], 
       NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
        0.8660254037844386, -0.5}],
       Background->Automatic], 
      InsetBox["\[Pi]", Offset[{-8, 0}, {-1.4142135479610376, 0.}], {1, 0},
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "6"], NCache[
       Offset[{(-4) 
          3^Rational[1, 2], -4}, {-1.224744858910381, -0.7071067739805188}], 
        Offset[{-6.928203230275509, -4}, {-1.224744858910381, \
-0.7071067739805188}]], 
       NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
        0.8660254037844386, 0.5}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
       Offset[{-4, (-4) 
          3^Rational[1, 2]}, {-0.7071067739805188, -1.224744858910381}], 
        Offset[{-4, -6.928203230275509}, {-0.7071067739805188, \
-1.224744858910381}]], 
       NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
        0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], 
       Offset[{0, -8}, {0., -1.4142135479610376}], {0, 1},
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
       Offset[{4, (-4) 3^Rational[1, 2]}, {
         0.7071067739805188, -1.224744858910381}], 
        Offset[{4, -6.928203230275509}, {
         0.7071067739805188, -1.224744858910381}]], 
       NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "6"], NCache[
       Offset[{4 3^Rational[1, 2], -4}, {
         1.224744858910381, -0.7071067739805188}], 
        Offset[{6.928203230275509, -4}, {
         1.224744858910381, -0.7071067739805188}]], 
       NCache[{Rational[-1, 2] 3^Rational[1, 2], Rational[
         1, 2]}, {-0.8660254037844386, 0.5}],
       Background->Automatic]}, 
     CircleBox[{0, 0}, 1.4142135479610376, 
      NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821666822307796`*^9, 3.6821666942373877`*^9}, {
   3.682166744621258*^9, 3.682166774225024*^9}, 3.682166861058859*^9, {
   3.682166904807866*^9, 3.682166958487546*^9}, 
   3.682167101609441*^9},ExpressionUUID->"176ce48a-fde7-4011-a09e-\
6e8e801e14f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"11", 
    RowBox[{"Pi", "/", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", "/", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"1.5", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"1.5", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<ang1.png\>\"", ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "8"}], 
    RowBox[{"Pi", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"1.5", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"1.5", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ang2.png\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.682166723856468*^9, 3.6821667238573303`*^9}, {
  3.6821671239741507`*^9, 3.6821671849154167`*^9}, {3.6821672470504208`*^9, 
  3.682167509283811*^9}, {3.682167558524247*^9, 
  3.6821675908861237`*^9}},ExpressionUUID->"4abaa242-34ba-406e-84be-\
a7b382be6df4"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.3864881611594029`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.2007339696104156`, 0.6932440805797014}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.6932440805797014, 1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., 1.3864881611594029`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.6932440805797014, 1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.2007339696104156`, 0.6932440805797014}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.3864881611594029`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.2007339696104156`, -0.6932440805797014}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.6932440805797014, -1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., -1.3864881611594029`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.6932440805797014, -1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         1.2007339696104156`, -0.6932440805797014}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
ok7GP03HHxrtm8H1qZWVvp/dGNdhm2GkNINC7CwxWtrdKGRWGfPeaQbLxG8q
7f/ViRN9i2sFP2ew26JlZmS0k/hO+bOjf2ZwhVehNKipE/sXd51kYphFP0Xq
ylBMJ/6uc96vtH0Wz9y8Ss+u1YlHtCzLXh+bxem7akmVnzrwsod2tcT9WVQK
OPe44kw7MmkqxEu1z6LjVqqJmVg7eorqTjdRZjFcqPU36/Z2LLSK8bkzNIsK
+lVc4tQ2bJ2Unnw5N4tb2h3v7fJuQwNW5SRHpjksjW/tKkwm+k653unQk3PI
fNvlQizRF8/z9v6SiZxDc80Fkx+BTajQUWJaEDOHPfTa3yVuN+G3tzmsMsnE
OkXig91aI/K8WxkWzJ1D04dnjhw43ogHv/Q6JLbM4VKF5ApfYD1eoVWSP22a
x4H/UiKTtWqQ8lCgmeP2PF6UFL9awluDR+WHuTvvzyOt9cNE2Vg1uh7ZJPne
fB75q7oyg19UIz9518yv5/PoKXj/1JO4Kiy2PfLzpe88umx9pEn3XwX2fXuy
zahwHjXma6nFuxEjGY4K6bMv4Bn7aJk9+aUY7T+hscq5gPyOdyXuXyrF5B8a
dSE7FvCBSrh9jGsJcj62q6jYs4Da2iTn7oli3M4X9pAsvoARYelsZ5IKMNkt
L3r28gLK8WzKDt+ZjT3OQsIFHxbwbNqH7oK0LPwikMEeF76AnWpOsng2C0U9
jNk8oxZwpmUHk6tlJl5RFz6jlLCAb1w99aq80tHV1EDhUc4C3t18JUSxLxHd
+BtHItsXsF02YX9QZiBqlF5Qf85MwxcHdhhO9bzH7d54e3wLDRf8o/Yk0/nh
csulM5rbaOiVRnb//skdGzLuyP7joaGhaIPLEFihvU7BJLcwDTVT5+fv/3CD
R9mD8kMKNER/pjnlDC9iTje2JJ+hoQo33+shc184zSWiXKtEQ2uzk1MpNoHg
E2xXEKhGw/OLf+MDfoTD7erFjDZd4vc3dAYMXeOBPWKqa9KUhgc9XyaffJYA
FYXHqA8e0ZB1WmvmLDGX95kkWY6a03B98nJv//lk2C2VPV/yhIZ/jF+N7tqZ
BrelV3UFHWgYwkwtv8yaDn37ov/dfklD++mPMoV/0yFhNoH3kzMNl0sKqPTU
DDgz9caZ7g0NpedO3VLtywKXF3Q0Cx8ajoFTvZd+NsA/+txnvjSUCVrxHmvJ
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
omQ5hv8HWM8irg==
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {1.3864881611594029`, 0.}], 
         Scaled[{0.006, 0.}, {1.3864881611594029`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {1.2007339696104156`, 0.6932440805797014}], 
         Scaled[{0.005196152422706632, 0.003}, {1.2007339696104156`, 
          0.6932440805797014}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.6932440805797014, 1.2007339696104156`}], 
         Scaled[{0.003, 0.005196152422706632}, {0.6932440805797014, 
          1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., 1.3864881611594029`}], 
         Scaled[{0., 0.006}, {0., 1.3864881611594029`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.6932440805797014, 1.2007339696104156`}], 
         Scaled[{-0.003, 0.005196152422706632}, {-0.6932440805797014, 
          1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.2007339696104156`, 0.6932440805797014}], 
         Scaled[{-0.005196152422706632, 0.003}, {-1.2007339696104156`, 
          0.6932440805797014}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.3864881611594029`, 0.}], 
         Scaled[{-0.006, 0.}, {-1.3864881611594029`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.2007339696104156`, -0.6932440805797014}], 
         Scaled[{-0.005196152422706632, -0.003}, {-1.2007339696104156`, \
-0.6932440805797014}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.6932440805797014, -1.2007339696104156`}], 
         Scaled[{-0.003, -0.005196152422706632}, {-0.6932440805797014, \
-1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., -1.3864881611594029`}], 
         Scaled[{0., -0.006}, {0., -1.3864881611594029`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.6932440805797014, -1.2007339696104156`}], 
         Scaled[{0.003, -0.005196152422706632}, {
          0.6932440805797014, -1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {1.2007339696104156`, -0.6932440805797014}], 
         Scaled[{0.005196152422706632, -0.003}, {
          1.2007339696104156`, -0.6932440805797014}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {1.3864881611594029, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "6"], NCache[
        Offset[{4 3^Rational[1, 2], 4}, {1.2007339696104156`, 
          0.6932440805797014}], 
         Offset[{6.928203230275509, 4}, {1.2007339696104156`, 
          0.6932440805797014}]], 
        NCache[{Rational[-1, 2] 3^Rational[1, 2], 
          Rational[-1, 2]}, {-0.8660254037844386, -0.5}],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "3"], NCache[
        Offset[{4, 4 3^Rational[1, 2]}, {0.6932440805797014, 
          1.2007339696104156`}], 
         Offset[{4, 6.928203230275509}, {0.6932440805797014, 
          1.2007339696104156`}]], 
        NCache[{Rational[-1, 2], Rational[-1, 2] 
          3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.3864881611594029}], {0, -1},
        
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, 4 3^Rational[1, 2]}, {-0.6932440805797014, 
          1.2007339696104156`}], 
         Offset[{-4, 6.928203230275509}, {-0.6932440805797014, 
          1.2007339696104156`}]], 
        NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
         0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "6"], NCache[
        Offset[{(-4) 3^Rational[1, 2], 4}, {-1.2007339696104156`, 
          0.6932440805797014}], 
         Offset[{-6.928203230275509, 4}, {-1.2007339696104156`, 
          0.6932440805797014}]], 
        NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
         0.8660254037844386, -0.5}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-1.3864881611594029, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "6"], NCache[
        Offset[{(-4) 
           3^Rational[
             1, 2], -4}, {-1.2007339696104156`, -0.6932440805797014}], 
         Offset[{-6.928203230275509, -4}, {-1.2007339696104156`, \
-0.6932440805797014}]], 
        NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
         0.8660254037844386, 0.5}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, (-4) 
           3^Rational[1, 2]}, {-0.6932440805797014, -1.2007339696104156`}], 
         Offset[{-4, -6.928203230275509}, {-0.6932440805797014, \
-1.2007339696104156`}]], 
        NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], 
        Offset[{0, -8}, {0., -1.3864881611594029}], {0, 1},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
        Offset[{4, (-4) 3^Rational[1, 2]}, {
          0.6932440805797014, -1.2007339696104156`}], 
         Offset[{4, -6.928203230275509}, {
          0.6932440805797014, -1.2007339696104156`}]], 
        NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"11", " ", "\[Pi]"}], "6"], NCache[
        Offset[{4 3^Rational[1, 2], -4}, {
          1.2007339696104156`, -0.6932440805797014}], 
         Offset[{6.928203230275509, -4}, {
          1.2007339696104156`, -0.6932440805797014}]], 
        NCache[{Rational[-1, 2] 3^Rational[1, 2], Rational[
          1, 2]}, {-0.8660254037844386, 0.5}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 1.3864881611594029, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[{{0, 0}, {1.299038105676658, -0.75}}], 
   ArrowBox[{{0, 0}, {1.5, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821671475768223`*^9, 3.682167185218712*^9}, {
   3.682167255334141*^9, 3.682167442418434*^9}, 3.6821674747325153`*^9, 
   3.682167510242432*^9, {3.6821675589512444`*^9, 
   3.682167591093087*^9}},ExpressionUUID->"f45c8035-6d1c-45a8-94a7-\
c647f7022938"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.4508046190278983`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.7254023095139491, 1.2564336560059641`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7254023095139491, 1.2564336560059641`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.4508046190278983`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7254023095139491, -1.2564336560059641`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         0.7254023095139491, -1.2564336560059641`}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
aoh77uEoWkJFI1PpdMv91eBBl2uqaKCiZPt7m6TnVUBK3v+2pImKd7ZUq5TL
VoGoXvZMQisV9aTXKQ1uq4LtirYnVbqpuH+XkeSB5Ergin1QFUOn4qLygfqR
XxXAJSsizDlKRZFS8Y37yiogzW5G9/k4FccynlzS962Ad6vR6bRpKuqOGN5Z
OFMBWfIJ+5gXiPNbK6Vpvy2HP7d/3OpepOL5d5sVS2+UwxPOFM/Iv1RsZwrP
PCZSDu4mF++u/qMiPb62RKi0DIz+bBv1WKPiNX8mr5BvZTA08DiEg7kXf+tf
Ie17WgbfbqR5UNf3YpbQ2H8XWcsgQeZs+8GNvTjZ+H5vb3cpLN40vae3qRfD
27N/vE0shexh3OXK0oufNX3X739XCm1vvwiHbe7FahLnvRa1UlBsuG0ataUX
LZ4LFLqIloJCpje3H2sv6u/wUrv0uwTmjFJ1L2/rxVAPrietfiXQ4VvKs5Gt
F8UsfgjFGpTAxeXsY6kE8yikGzvIlgB5TjH3Cnsv9rEOmjxmK4GibsGMFoIL
Yqvhel8xTPBwHLy6vRd/+i3NQ2oxnF6Z4Usj+AVjOvHsh2LY3ufzedOOXozU
FnKQ1SiGt6s0NxWC+/9NuysdKAYZx4ZddgQ3PMsbvbtUBBVvrskHEqzj2Zhs
WlMEtm3/rfwkeGOB6cq3YGKvvbnrQQzBv8yaR4teFgGfo6u+N8FmpgJf/ygW
gUhDq4AxwSe/62+R5i4Ce02xj6cJxiF8ZTtMhpEtiXEzRHzlNyQGq7LJ8DK3
lC+YYHZedVvpL2S46ObpKkvwA2/7XTGPyHCg9vjGGuK8l4tTW0TOkmFZoOHz
//NhHt1CjmInw5PHPuIFRL447CLoOpUIlq1Z1D0E/53YvPbRDEFlwCLZjMj3
YVWHhUIhhOjTnFHZW3vx+1LoIkt1IfgVtZOnifo4re+T0LMohC3BfFt3Euy7
Lja3TrgQmhKt5c8Q9a3/yeXRaVUAL9d0jp4g6h8fJyxuu7cAjjTderKH0Ifh
IfdiyYZ8SIk8m1pD6Im31/h75f58CEg/0ui2rhcv9fw8lNaUB8MPjqnKE/or
Ka9+mPQ2D7iuJz8wX6XigMBDjb62XEjZ8nj93xUqxtyYeMb9IRe2nQ/ge7VM
RYVu72JtqVy49udi7AlC/z0P7McOOOfAt1zJI+/+UNEv9SRLvHQOSHywksn/
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
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {1.4508046190278983`, 0.}], 
         Scaled[{0.006, 0.}, {1.4508046190278983`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7254023095139491, 1.2564336560059641`}], 
         Scaled[{0.003, 0.005196152422706632}, {0.7254023095139491, 
          1.2564336560059641`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7254023095139491, 1.2564336560059641`}], 
         Scaled[{-0.003, 0.005196152422706632}, {-0.7254023095139491, 
          1.2564336560059641`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.4508046190278983`, 0.}], 
         Scaled[{-0.006, 0.}, {-1.4508046190278983`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7254023095139491, -1.2564336560059641`}], 
         Scaled[{-0.003, -0.005196152422706632}, {-0.7254023095139491, \
-1.2564336560059641`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7254023095139491, -1.2564336560059641`}], 
         Scaled[{0.003, -0.005196152422706632}, {
          0.7254023095139491, -1.2564336560059641`}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {1.4508046190278983, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "3"], NCache[
        Offset[{4, 4 3^Rational[1, 2]}, {0.7254023095139491, 
          1.2564336560059641`}], 
         Offset[{4, 6.928203230275509}, {0.7254023095139491, 
          1.2564336560059641`}]], 
        NCache[{Rational[-1, 2], Rational[-1, 2] 
          3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, 4 3^Rational[1, 2]}, {-0.7254023095139491, 
          1.2564336560059641`}], 
         Offset[{-4, 6.928203230275509}, {-0.7254023095139491, 
          1.2564336560059641`}]], 
        NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
         0.5, -0.8660254037844386}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-1.4508046190278983, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, (-4) 
           3^Rational[1, 2]}, {-0.7254023095139491, -1.2564336560059641`}], 
         Offset[{-4, -6.928203230275509}, {-0.7254023095139491, \
-1.2564336560059641`}]], 
        NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
        Offset[{4, (-4) 3^Rational[1, 2]}, {
          0.7254023095139491, -1.2564336560059641`}], 
         Offset[{4, -6.928203230275509}, {
          0.7254023095139491, -1.2564336560059641`}]], 
        NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
         0.8660254037844386}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 1.4508046190278983, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[{{0, 0}, {-0.75, -1.299038105676658}}], 
   ArrowBox[{{0, 0}, {1.5, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821671475768223`*^9, 3.682167185218712*^9}, {
   3.682167255334141*^9, 3.682167442418434*^9}, 3.6821674747325153`*^9, 
   3.682167510242432*^9, {3.6821675589512444`*^9, 
   3.6821675912627707`*^9}},ExpressionUUID->"8c325722-3945-4140-aade-\
895b5e0fa4c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}], ",", 
       RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682166733050971*^9, 
  3.682166733327372*^9}},ExpressionUUID->"8dd2dc66-a82d-4dd2-a2c9-\
5dd50c607427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["\[Pi]", "6"], ",", 
   FractionBox["\[Pi]", "3"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "\[Pi]", ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "6"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "2"], ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "6"]}], "}"}]], "Output",
 CellChangeTimes->{{3.68216672997269*^9, 
  3.682166733530568*^9}},ExpressionUUID->"51c97134-6f99-4a72-8ab9-\
f92073bb243a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}], ",", 
           RowBox[{"10", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.5"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Alpha]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "0.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"10", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"4", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Beta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "0.3"}], ",", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "1.5"}]}], 
        "}"}]}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<cell.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682173707685611*^9, 
  3.682173725497672*^9}},ExpressionUUID->"4abb5b76-baba-45ed-8f1b-\
31878a0a1600"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    TagBox[
     PolygonBox[
      NCache[{{0, 0}, {4, 0}, {4, 2 21^Rational[1, 2]}}, {{0, 0}, {4, 0}, {
        4, 9.16515138991168}}]],
     "Triangle"]}, 
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    RectangleBox[{3.5, 0}, {4, 0.5}]}, InsetBox[
    StyleBox["\[Alpha]",
     StripOnInput->False,
     FontSize->Large], {0.8, 0.5}], InsetBox[
    StyleBox["10",
     StripOnInput->False,
     FontSize->Large], {1.5, 5}], InsetBox[
    StyleBox["4",
     StripOnInput->False,
     FontSize->Large], {2, -0.5}], InsetBox[
    StyleBox["\[Beta]",
     StripOnInput->False,
     FontSize->Large], {3.7, 7.66515138991168}]}]], "Output",
 CellChangeTimes->{
  3.682173711172031*^9},ExpressionUUID->"bd965a08-bf41-495a-b79a-\
6c244c05365c"],

Cell[BoxData["\<\"cell.png\"\>"], "Output",
 CellChangeTimes->{
  3.682173711240569*^9},ExpressionUUID->"42dc2b81-7910-4907-8d67-\
51c1fe3aec2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tan", "[", 
   RowBox[{"40", "*", "Degree"}], "]"}], "*", "100."}]], "Input",
 CellChangeTimes->{{3.682173865089052*^9, 3.6821738766662283`*^9}, {
  3.682173944746064*^9, 
  3.682173959109873*^9}},ExpressionUUID->"ba3acea6-f495-4fc1-9776-\
dbac68199ff8"],

Cell[BoxData["83.909963117728`"], "Output",
 CellChangeTimes->{{3.6821738689137278`*^9, 3.682173876914158*^9}, {
  3.682173945237722*^9, 
  3.682173959306226*^9}},ExpressionUUID->"3ae301d8-574f-4dc3-80b9-\
9e87a5d64f77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"119", "-", "84"}]], "Input",
 CellChangeTimes->{{3.682173990854669*^9, 
  3.6821739919809847`*^9}},ExpressionUUID->"7017ef47-a6e1-4d9b-8a00-\
34e61f7bd6cb"],

Cell[BoxData["35"], "Output",
 CellChangeTimes->{
  3.682173992306108*^9},ExpressionUUID->"8c48d4ea-3c61-40c3-a702-\
65f883cbb941"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4", 
   RowBox[{"Cos", "[", 
    RowBox[{"121", "*", "Degree"}], "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.682174764355734*^9, 3.682174782073903*^9}, {
  3.682175623595368*^9, 
  3.682175636835169*^9}},ExpressionUUID->"ef6bd26d-aadc-471a-a274-\
c76ec49f4a6f"],

Cell[BoxData[
 RowBox[{"-", "2.0601522996402166`"}]], "Output",
 CellChangeTimes->{{3.682174769174901*^9, 3.6821747826442633`*^9}, {
  3.682175624503366*^9, 
  3.682175636956468*^9}},ExpressionUUID->"2237f222-00c4-4838-91bd-\
668d9de2b2f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g1.png\>\"", ",", "%"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682181064893227*^9, 3.6821811692019367`*^9}, {
  3.6821812806056643`*^9, 
  3.682181312514488*^9}},ExpressionUUID->"ff763460-4f1f-4695-8890-\
926e01de0a39"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
kw6jpkvwSsN0S+4CFfj//xf+B8tadBY=
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw12Xk8VN//B3BZZwbZzahIm/oILZJKnDdpsWQv2oskpKJoUyLSIiEJlaSy
FSJLIccyIiRKyVZCsszcQ7Zs+d3vH7/5Zx7Pxzl3Hue+z+uce89jFjiesHEW
FBAQCJ4lIPC/byHMqu3U8TfInfnfhyBVRVU1lTsH0G491twp2iNtYRZNESeQ
xAePYwO0Pb4xymXSz6CHIZrDrbTbDd935Eb4IQldi6wS2ilfjAXSC66gq8e/
JsbRdmQtuS2QHoyO5NfWn6I9D4mo2MbfRCuCDbUNaX859evFs4jb6JaaXrUo
7a0NHcq+peHI+uP7GO4/gp5SNs7PCu4gj4fTcedpCzDLXtRm30WD4T3Ny2jv
W6Q9PJZ2D4ncidv+cZqgfP0neguSYlC3u86YB21FB7krpvH3UXsNt1GYdl3I
kMzDiEfI85COwdwpgqI+Z2p0lsejnOOW3NhJgrjtrnVnSh+jPXmf/WVpL5hs
Yj8ueIKuBz5+0jdOkBUjokDn9VOkxtJmmNG+pGB6oCr7GdL/UPT0yV+Cmlfk
Jw6lJSHS4XpVf4wghr6X6bXUZDS4t7360ihBuqbq1LykFDTfacbk9QhBkYdj
dbbEP0dTOhMDcsMEbY85z42OyED//UwgHgMEGdgqZUdtfYm2uEgLeBK6XrtG
RH6Wv0Qlg22mxyiChFzSUrxLM9H80ugwMx5BB/2VB+MKXqEj48OdL34TNBY8
btS7Phs5Sb6t9ewmKDT0S6T262wUmaowqvWLoML7t9ZVZuegV8+zJ8M7CFLK
nfYbTMtDPwpe90+0EvSysKleT+M1WvNJlOvfQtC2spxFV1Nfo8U/Q1sEmgny
qfOomJP0Bl26WP7+91eCPvW1zTaOL0AqBwPSHOoICplf9DAqAqPABDb1roSg
LdX3VxVLFiP5S9buSZigd1cd5HVsitFHs5rPl94SVDFd36TSUoysw2eOyr4h
qLKfe/gPrwTZUSa5NRkEVVWkno+R5qL/RnadDr1PkOkVl32zd3CRbNaRkbZo
ut1gMVyJ4aKiSzXHFkcRVJ3zUMRjYTnS55UZRoURVPMkLAzWvEPSxo2xkkEE
ffDzSfxtX4l2Vb8sNztGkIWe9vW9DyqRTc05KXFXgmpHiXt9eyW6+9JkX4kz
bQ/XVQWu75FGdhlD7gDtPXsLQy9UoQlXdr6pNZ0vXaNPOo9qUFbQviMSawjq
GxOdMTxVh/TcEo61/6HQzKLtXN07dcjvhO79GopC8lZ3rmu+qkNd+1lymX0U
Qsnz5ZWG6Pa6wA7HDgpFOqz7b8CrHn10G1J2q6eQwRtX2zivT0jE1GBULJ1C
4edrkiY8G1DyxfmS1w9RKDFR1mMgvAG1zX4YeHkvhQo/OazuzmxAWSsbXE/a
U6hb/Vdh/WADavp9MWD9dgptaJmuT/b8gvhiYdKe6yjUpbdiaqfnV8QqduT6
SFJo3XS41auT31BJW6FsdyYfbfB1u8cI+4bOK0Z0ib/gI71Jo+/7Mr6hi5qv
Y9QT+chgfMidQX1DFd/vv7KJ5aNNIzuC97k3ob3jCR+2B/CRBV+pSOxIM7K9
ZPljwIqPnNseL9+7pxWtVa8ZHe7hofffHa4ILmpHitl3D1gI89DOmnUKs9a0
ozGtebvlp/pR1xtO0oxxOyo2kD35aagfCdz9VjV1pB1Va8aPre3sR+vMHGTH
UttRgopI3uOSfpSYZ/+4f/VP9DXUWELgYj8KDNuJG4w60Iv7J7UG+X0IjOwm
Ex270LZz+xx03vSi3SdNBnJ29SDv9+9jfTV+o6IF6gHFz3jo0LCIcqlgF7KL
Vn/SdnwAXTh0VWfiVjuaK/J2U9iRP6hapidJanEzCtYuzyq+Noxewam43Ys/
oc1bTQ8mXh1FDb8n3WTKuKj8+rBa4Pm/aDSWuujCf4r6bskX/oieQInNgmd/
O+fhQ2cybw9ETCEz6rLCaetqfHEhd5Vf3j90/kbovYyOL1jr38VRQVcBsN+5
OghHtuGKfQ5DqodnwWhhUvUptQ68Ks6j8eJpQRiIVtjG9P2Fja1Ldud4CcFU
xLStk2EPjrzpvkbojBDUH3ufFGvegzvLFWZbXxCCrwaTf6rse3DABrcS3hUh
uHUmzlHxeA8uWSS3bPFdIdiwN8fcIbYHG4weHonIE4J1rNP+QYM9eN19RtjJ
KSGg0JvAE7G9ePkvy/LlV4XBlQQ+afrSh7+5atx2viEMb/viZcR/9OGrFGPX
o1BhEBs6LKDT04fbx0p4sveEwU8ubYfXRB+OZK2Rn0gShj1H1aMjVPrx1AqO
U+V7YQjZ/J+Zi3M/rj3fLuAsKQI/zmqYWfH78YWZwqo4GRFArbJCt0b68bLA
mMhvCiKwYiOPXzLdjwNu2SwzVxGBGCdrW/nZPKwbz7XUXiECFtHWynu0eDi+
PDlulrUI9I3kvz7uwcNe0p4b4yJFwNvizJe4XzzcF1p18na0CIRFJ506xONh
R8nFzy4/EIHc9GZx5SEetmY1Sjo9FYHntcWL/AT4eKWw/o+l2SIw7+wqLjWH
j6kxRkDmZxFYdfeo43kLPnb7EV/BlRWFaedi43Uv+bhj38RkjqIoZC1LUWLn
8vHuVtuVSXNEITUlJo8q4GOTJtGY6wtFIW2we9u1Cj5e9vmYm8VqUdi0vCfm
8Hc+7n63TvKbtSj0bxwrLmZR2Cm9zqY/TBQ2l8S0TO+j8H5ORcCqu6KQrbG1
ZJ8ThXcHvM06EyMKKHn/RPZRClvtTJUVThCFfN2cgyanKLzx35VP816JwllX
/mfmNQrLW+jaWHwRhc/vFCV6Migs9VozILJJFEwedPoUZlOYtXBxVnObKCw/
16587Q2FBUalZV26RaFbbmiOSBmFeQ/76v3GRKEsrvz53S8U5vIfWmcqiUFv
fqqg9DiFsX2k/5iyGJyxyAy3n6ZwfsmNTP2FYqBoobUtahbBL++ekalSFwNN
ixy1cSbBD/St6zv0xEBHLOWa3RyCvW8JW8vvF4PseqHvB9cTrKbpbnUmQQwi
7LBR5UmCeWHf+04nisH6c29U3p4iOGvYOsgrVQwcmzWXpvoQrF+4Lt8jSwwU
3j7MP+ZLsJ2Z6OLDpWLgLpvVeCeYYH/Xx2NWHWIQsqXB2vUBwVs+yEdYdItB
01mHhPY4giVWXdMw7xODOyRW3uoxwdF/jx/a+kcMEtkDe9iJBKcHb6zWF2SA
u/AB560ZBLc+a4xTX8iAmtGWXxrFBCcwzdYvU2NAIXyVVCsl+KhH0ecl6gyw
Eqy0YHMJHlrzjLFgNQPUR58qdVQQzOJ6ebGNGHBTet07zkeC65Z2SyhsYYAP
93PypzqCo27uSpI1ZYCXZnF84CeCF9hCq6QNAyLU2mrrvhC8rkNyi7AjAx6Z
NHBYrQT/2+zfPusIA6pPRsYGthHMTRk+P+PKgGUPfbXGvhNs6dmSMeFJj0dt
503uT4KPCKQoDfrT7S6RUgK/CdY4PC+bCmJA7A4+R6+H4MGK2xa86wzY/b1s
1fFegn1v+1z5Hc6AvVL5YYX9BN9RMea3PWYA/tA/OU4Izq3pPVPxjAGi58Ie
DAwQ3Hz+tmBmCgPWhCTH/BgkWLWxmR2YyQC1+VbJiUMEbwq6nOCRQ9eryuvN
pWF6PNpqmvZvGDCqs0LNcoTgF7c9jdRLGGD3NkOmaZTgj/rsD3LlDLB9qhAW
MUbwn/5C++lKBpS1O7ga/yV4/TaGR10dA0QkPi4PHyd472ja2JsGBiw+kiWv
MUHw5ae2AU++McCJ99ke034n8OieTzsDfnhu4dVOEtybbrzwYBcDJC/t1Deb
ovOwr++FSQ8DzOsW9mDaK8XDdLV5DPjqf5unMU2w7Rud0nkDDDC8HGAaQdvH
pcVcdJgBAbc6Zw3QjlXwbyRjDPiLHshu+Ufw2zI1x6ZJBrgJRvtG0m73rOGV
zjBARp6LWmgLqXqdeSHEhIfXpPbOmaHzX8sWjBJjgvY293pr2qa+b0P8xJlw
XqrqkT9tD3UntqsUE+6eUK1IoR32jZFgI8eE5bWHt1bRzr6arrGRzQR359uq
nbQb19jlLZnLBBHjWJth2hMd44ZS85mwbrt/2zRt5fBHNX8XMuHdOqMS+vyA
AW2271BjgsCd1ulx2of5fT+r1ZlQVGh9h0c7+H7YsRwtJjj1P/VvpJ1qsnYs
bjUTmpe1VObTrh1r8b+2lgn3bCePRtEefOYv4bWBCREqsx3daMvbLb23x4AJ
pjIq2Wtp6wp+WLDZiAkFwboHJul67H7p9UJrCxOcs446vaZ9cT9Hl2PKBIOo
kmIP2vESRSWzLJiQK2F3Zi7tsnwn835rJmSWaQeX0PXvPspsbNjBhEv6PgMH
aGuW2/GS9jGhJTngYxA9n1anJnzCDzFBqPzyZknapxfEz7rgzIRF4yYKt+g8
5F/sV7TwYMIclfxSbzovbcvDH+t6MoHZ+iT+O50vgea1Ggu8mSBl/v0bor1l
bYDhsC8Tmia+O/TT+XTtWlrTdpkJOsmj8Tq0QyI+7KwIZEJJ1yzjs3SeP1Oc
Y7EhTNgqknq/m87/waSMKHhAz59icpQLvV5EDf/M84tnAvfGwXcH6PWU1rzm
ydunTDh3rOyvBb3eJiTzMzakMQEtKDoiyyc48jS3ck0RE+bHhZzUpNfvhtli
lqdKmRAlG1LU1k3wzySTL5nvmKDK6pQJ+kWwVkvtT62PdL4UVapedxBcadg0
saydCcFLhUOy6f3keMtcf5cuJshd65VSbiFYwXu/WGIPE7KQ9wPfJoIdkzvl
Fg0yYYmifb3qV4KnZlMayoIsYNvk5E3X0uulVfCAzGIW2C5M6WNigr96b/5l
uYwFj/NcdToL6fmUuuYeqsGCPSE24a/yCa4ykjwrrkP7uoLf+lw6bynscJEt
LEh9tN64+QW9H/tolI27sGDXg2nxk9EEG0ifMFl3jAUHw6Ne598l+FdK5kef
kyx4uHWf/1QEwavb1rYOnWXB5tm33JxvEVyzyXCEf50FN5MzM2v86fmT2bm0
4zkL9FarfBg8SrDnUwXOtwwWPHK0fNntTHCH7hdG7SsWLEq0+vnZkd5P99v1
vSlggUZu5Yp7ewm+/sImLbyaBSq5ypEllgTLbrPUNuxngfixfxqJawhe7LcN
xauLQ9e5bfey/1L4rixjZZSWONxUjajNHqawaGKFashqcRDJcDuRNkDhnpot
gmc3iMPWyLeDwT0UTpuzudzSVBx0ZokqdDRSeG2uodmMK339ebm3y3MobMLf
YL8/RRw0Dhctn+dGYYNj9zalpInDvy43y5LDFF7dP7RiOFMc3vg0Zu07QOE5
vS8YN/LFYan2MuRrRz/Pu1Tyc6rFwaL0dYyVAYXDWgWVJSlxiA10wPbSFP5a
XdVRsFoCbHO/3u1P4+Mq06UfRXUlIKI+pfNCEh/j91cKrPUkILOqIEnoMR8n
V2yM/L1JAtYYycaO3+Hj82Xpm+V2SED2EvO9fuf4WLkgItntjARQx2VFho34
+HDq7uNKhRLwef2Tb7c/8nDuqV5Tq2L69/evqtGp5GGG/tmlwVwJGCsWK/tc
zMMvPt5tH66RAN+TJaVjmTw8PFxnU9cmAVm51sbtd3j4CtqqGzwjAU417mo6
O3k4oUFbYMRIEg7Mz7013dCPf/6TiKh7Lwm3zf9bf72gD/8r4TQVfZCEg4Z5
kT+z+vCcoMWqafWSMM98xSXt1D5sJ74x/XqTJPiIGQpxo/vwO7Z7lVGvJEQX
jUtHe/fh1JXvBXMYs8GleytntlYfPu0YdCpm62ygpmTlDOn3Z9F303aO5bPh
4wm3cMODPXjG47+Z1V+lwD3SzFP66C9sxTVZfMJNGmRnWs2vmHZga+VtH41+
S8OxXRr897w2XNjdyc85LgOuWkU3irW/4gu9KnsV+TJQIcfcXmzyAT/ZO6av
6CMLN+yEp+58fI1VmSdOCI3KQt4dEfd/QQ+QxayVScdPyUECq7e+YHkZ+uUa
anNuUg6Wcf8FMzrqUZ14yHbP8/IQ8yvd5JxDE1qisrSQIawAGcJ9izMvtSN1
X/FVKjcV4GzqUu89I50oUO72iCpTEX4K64XmtXejrXNfapaFK8IW4jkvJbEX
mc/76F5yRxEm7f2ctF72IitlKgXfVYTQc+UmafR5zGG+hlphjCJ8Rbf77tX0
IrdFySo5jxVBfs05PdU/vShkebxUUqYibMj5JTup14c+6YUN3qhXhB+Cd9Pf
V/Wh/XtP5tjIsCEj1PC5VUM/Cg9I7t8ix4aDMeGFwq39iJvcvkBPgQ1bJJnL
sujzo/qIVegiJTaM1s8VHf/Tj8ZurXIZVmXDsH7v87UyPBSG/3CiVrKhe3qh
xElzHipd6O3bZMmGDWY7Omvf8tDItrSsD9ZskNnWU53K5aFlJ371lNiy4cxv
lUa/ah4KLdixI9WeDTs3DVkoNPHQHru1WhcOsCGlejyKP8RDw0FjP+adYEP2
DbLIZhkfqfWe23QwlA1mHf1O7Tf5aG7Q5bFLYWyQVCkNOBDBR9ILgp8/jGBD
whMd26/RfDTuECnXEsWG1YmvZj1/xkc1lemdOx6xYYdKpeNAER95JXdeMXtJ
9+/4ndpL+KjIZTt37Se6/zbLCzfMKPRKyO7sjgY2CHUX+0xZUSj50W6N01/Z
cOTeZsp5J4XCG10iM5vZ4D3lbTb/EIUObw04rNHJhhvO5yKX+1CItTRPeOEw
Gyaez1dKiaOQfbfqZklFDqzMVdLQ6qXQ6hnndDEOB55whvcY8SkkwXnOFpzD
AdazM5MWgxQqNtHpG1XmwNhYUJD1OIWWpZncbl/CAckD51InGQT9PeXV9EqH
A58GHjl1qhH0KSTPKF2XA5oJm+ZeUifoxbOp58nrOXDzaZS2jBZBBxuvXnqo
z4FO9CFAVYeg9xvuLwrezIG/785c6TQiKHYW12P3Dg7c2lpgO7GXoNNzmI12
9hxoV/PPnHOQIAttC7DcxYH1mU2O2k4ECTp/kzXex4EdGvpvt7sS5F7Jy9N0
5sCqDKmNat4EbbytIDjLmwPlDJVS55sEKSbvdp/04cCFGlNB8VCCBoofNYyc
5YD49IcbyWEEPf3zX1KfLwfkr5t61dwlSGKngXlDIAfMLVOv5z0iqG2eS1RS
JAdiXifbzckiaOeSjb9aozgQeGws40o2QXWaMmtkYzjwNuPhoc5cgkoNCup9
H3Jgs5BUeVABQckHpSRtEjlwsWDq7E4uQQtcu/YEJ3Pgjbr7Ka939P17vkkt
TOXAZVZ+UWAlQbcCnLYtzeDAy3vem0NqCPJ6mndlKo8Df5JPCi5tIKj/Rcin
VfkcgJxmr5EvBB3OObTApZAD/BG3FfmNBNm/E8f1xRzQUmm6odZC16PnwETi
e7ref0MLb/wkKHdgjUlrNQe6ul77iXcStGKcGS1Ty4EqMYmbAV0ELWRl6/h+
4sDIK5eztr8JEtNgeFq3cOBzs1bCZR5Bl9e04attHOj7WxH7ik/QxMas2YU/
OKDeZvqtlSKIt33vC7UuDjTcSVSVHSToyM5Vk3u6OXBO5bO6yh+CfuwXNQ3v
4cDgj7CzqkN0fk68/D3Jo8cz51qb2AhBZmeD1q4idD2YmsM82tzLu4OODHLg
gNKG7ZWjBOWFCy+qH+GArlZg+aG/BK2MbfIU/csBiaPGXfPHCUpNSC/Wm+DA
LM1Txg20H7xy2J/4jwOexzZVzp8kSKFQM61FQAk62vz6c2mHcgWnpIWUwK/y
oKXxFEGMD42mW0SUgCdfMFRB2//Li5gLYkrg8PTIN8Np+n7b/HteMpUgwspg
OpP26e6dut3iSiDBm+/I+UcQn1p+de5sJegz5Il60z4yJvDFSloJWIrB/RW0
22e+LLoqS/df0iglM0PQLsZzrwJ5Jdiz+N0pK9qfpC+XDCgqgU4psK/SNlfa
Ia2mpATpz9ZOZNIuX6B+YM9cJcg+HjuvgbaB+kxamLISzMk9dIl+v0evVzdM
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], HoldForm], 
    TraditionalForm],
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.9999999999999836`, 1.9999997662703648`}}, {{
     0, 6.283185307179586}, {-1.9999999999999836`, 1.9999997662703648`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.6821811062729597`*^9, 3.682181116174803*^9}, {
  3.6821811581635723`*^9, 3.682181169863097*^9}, {3.682181294921492*^9, 
  3.682181333468788*^9}},ExpressionUUID->"be1fa98d-c4d9-42a9-b81a-\
e12423a119f4"],

Cell[BoxData["\<\"g1.png\"\>"], "Output",
 CellChangeTimes->{{3.6821811062729597`*^9, 3.682181116174803*^9}, {
  3.6821811581635723`*^9, 3.682181169863097*^9}, {3.682181294921492*^9, 
  3.682181333573431*^9}},ExpressionUUID->"f7319402-3e7e-4eb9-8b41-\
2bb4a59a2e40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "-", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", "2"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g2.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682181320724432*^9, 
  3.682181398111957*^9}},ExpressionUUID->"c4dee161-ed45-4737-80fb-\
04838e603704"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
UQ==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{
         RowBox[{"cos", "(", "\[Theta]", ")"}], "-", "2"}]}], HoldForm], 
    TraditionalForm],
  PlotRange->NCache[{{0, 2 Pi}, {-3, 3}}, {{0, 6.283185307179586}, {-3, 3}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.682181330859268*^9, 
  3.682181398489401*^9}},ExpressionUUID->"45227955-6372-455e-9c92-\
f2c7252b0f71"],

Cell[BoxData["\<\"g2.png\"\>"], "Output",
 CellChangeTimes->{{3.682181330859268*^9, 
  3.6821813986144943`*^9}},ExpressionUUID->"66821941-14fc-402f-90c6-\
201dcd8ffd1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "4"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g3.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682181409914563*^9, 
  3.6821814467773314`*^9}},ExpressionUUID->"d9d7d093-c7b7-4868-bdd4-\
ee4491ec36ad"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
//9/0P8DPr5fMA==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"cos", "(", 
         RowBox[{"2", " ", "\[Theta]"}], ")"}]}], HoldForm], TraditionalForm],
  
  PlotRange->NCache[{{0, 2 Pi}, {-1, 1}}, {{0, 6.283185307179586}, {-1, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[Rational[7, 4] Pi, 5.497787143782138], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.68218142423442*^9, 3.68218144719985*^9}, 
   3.682182635228715*^9},ExpressionUUID->"a75279ba-8439-4e1f-bac7-\
c04043e2cfc9"],

Cell[BoxData["\<\"g3.png\"\>"], "Output",
 CellChangeTimes->{{3.68218142423442*^9, 3.68218144719985*^9}, 
   3.682182635347581*^9},ExpressionUUID->"32f87841-e625-4fe7-bfcd-\
caac932cb3d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"t", "/", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"4", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g4.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821815851278877`*^9, 
  3.682181605194158*^9}},ExpressionUUID->"b675defa-7a52-4f65-a2d4-\
a18f1c7e6037"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
OFWuQo9PNERlkvZKgxSLSTUN+P//F/4Ps0Rwng==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
7iZ4ZNmS5Q9FmBBjtMmkpYPgVOP+kGAJJgTID+4vbKL82rzffJ8cE5rlG/hF
qPqQsFo7Zq/AhMRd4Sq25VR92Kjcs6Qz4SOkFgS8IzjbsWNipQoTfs83+nu9
our5qNMzsSVMcFznmj6ZRPCiE6tsF2gx4U9K4krLJwT/dJf794vFBL2a8X2B
VD3n+Xx16tNjQuQfRmokVf/G17aLvV7JBFbv7webLxJMC1n6KmsVE3qqkvJS
/an1HyZx5JkJE9QCd8ZwqP2kKPpTSYQZE4ydWqsVj1H1/Gyz19GNTPjZXBIn
ZkOwSormYhcLJkgr/bx/fjPB/9IFamy3MMEweV90LRCMc98vMbdmgnXUgxCl
FVT+36M2GQcmyDqamFjLE8ysVL0u4sgE/aCRvM+SVP1/+ms478SEuMumrgZC
BFc0vAkb28OE91jN9dE0F2/pM4bSQ0y49zy4Vb6Fi20WLE8+7c2EGgWjpIBI
Lp4I6KoP92HCabedlY7XufjOZOhclh8TriUfd5c+z8Wtw4O25BwTMt/98VU+
xsUHvjyYO3OVCfTUfV9iTan9/4GQneddJmxL3H5Zv5uD5eXyz0fdY4JmLK1w
uJ6DX4cfTM6JY0JC6XPzSxUc/O/y27nv8Uz4mr7WxzqDg4OPeyd7JTFBskRW
zd6fg+8bfZvzLqTGA464a4pysFl2mFb0ayakTly8U/OHjb+x1tjlvaF4kfGc
LYeNNZTvJk9iJozKyLbM1rJxJq+VnU8VE/z+Xr324Q4bv6stSPZtY4Kv0X9N
DnJsPOgWbvffHyYckAjU/cwzjk+5Bhj6/GXCLd7pxEIyhicdjy7ynKf8bT9y
N7h7DPNvXNtwnE8DLvQPr219M4YZqlzbXWIa8Mrp+Nm1PmPYtWGbrbGSBkTs
03ir3z+K29dI7JhaowHj31KiFTJGcJ1Y2DbPAA0o7PlHjv4axHR/i/R75zWg
R6G/eWfXID44wCNSclEDhnq1A3TLB/FUsU+56BUN2OBsfeJm1CBWPL3f9NlN
DTgha6SprjuIj9QZarc81IAzP+JlS3YP4NnoNn5zrAHRdze/uvO8Dy9R1SoW
5l8C0Y9mpY/87cI658UMVG8ugZAoayXbEzX4qkzElJqIJsjfst378GMM2qz0
Qv99lCb8ONAxuhw1oH0uHvl2C7UgfL1NfNSxHhQVlDJuIaMF9zyyLh4I6kHl
KT3qpnJa0LhFMkE9vgfpTO0IZ9K1wO580XKvhh40fcvg2KSaFtD8Y7ttzXpR
JP5Bi1muBXxn/u2cEu9DZQyf823btaDWo/Xz4sf9aGpL5svPtlqwnbtdu/J1
P2KdGRwptdeCdOvOF3sa+lH4m50705y0YMrOfciKbwDtcVi19Nx+Lbi9Zm6f
xeEBNHlt+pvyGS3Qzo/fF8EYRJqj/21wDdcCYa2t6xojhpDStUvTFyO14DLL
2qopeQhJqwenx9/Wgo79gr3FeAjN7IqW6YjRAkVhu42IDKGaqqz+nY+04L7s
ngWS24aRV0r/FasXWtDDyXIv5htBJce2la9q0IKakT1T6S6jKJfPwX9noxYU
BF9PtfYcRSmPnPXONmvBYGltZd21URTVciw6p53y41HaUFDWKDq8OeiwXj/1
e67Y8rB/o0hUq5CfMakFtvQ+j8VxY8hpSG2ThDwLVOTTfHMLx5Hh/JEsIRoL
TuVVK/hVjiNxWroCryILvHi7by5uGUfvLI3GfqmwgJOck636axyxMi0jepaw
4OSmQtRoyEa/vb3aco1YoH+/PEkqmY0awgrXZxmzgL7k3hV6PhtlPJ9LT1nN
Arnuvq1C79nIteX6xXhzFhT9CjwY3s1GH9c8YAZvYsHHQSlkKctB9xeUuzvv
ZIEV/Zrd0QAOOqso0uLgxAJxCfsXKdc5yGaFDWzfzQLTrnu6X25zEO+R1kUb
97Kg86qiVVkaB52sYhfqH6H0hFqMbGvjILMIOd4FPix471RVPbKci+RTnE/+
8WXBciW7DCdTLpp496hxyp8FRCFyNmUTFz37oZ08dp4FfIODeT+oflrcca11
41UWDLtfuKV+mYu6lI/FJEezAKplbw985CLHJWaDnTEsCOtc2Ov1lYvq9Beu
XBTHgpDltQ86OrmobO2b+vPxlD/1zZpmhItSXKUk7JJY8Kx7zV6TRQSpuw3s
CU5hwUCU4tdYRYLue75OK05jQeyxf3u/Mgi6FXRoi1Y2la+nPaHNhgR5PSu8
MlfIAkmH6BWytgSNZ4Q1GBRR/n5pXr9xF0GH8w+oHytmQehBomSznyCnD2K4
/h0LqjUCRcgpgsxG9s8mfWSBnrED5/B1ggomVlp2fqLy22p25GAYQctmRGIX
fmGB5S2vY6tvE8QQzTM638CCQJ4Arnc8QUJ6wp62HSy4vHi5leJLgi6t7MLX
u1hQc8RjV38BQbNmLyWLv7EgS0a/+NobgtjbXDI0B1iQl5jj4VhO0FFHgz97
hlhwzq2o4GoVQd/2CW6NGmGBTkCpeVgNQQ1nXgz/YbMAZdn/0WwkyMr/2ioD
woKGuDhWUQtB5Zecrx39zoK54/ZXNTsIKoziZ9ZPUfpTEwtCewlafr/NU/A3
C+76uF0LGiAo7UnWO9NZFmwbkva2HyboYe6ufUn/WHA69Uz8JTZBcsX6mR08
2lAe1PK1k0tQeDnvnDSfNrTJBSov+k6Q8OeWrRYC2uC1If+s2k+CLjdlxJ0T
0oa7h3+3CU1Rersuj7wQ0YaYbb8sq34RdHbI0XhITBsmdoSVHfhNEIere11J
Uhs61lWua5yh9E/zNO2Q1oZM3/6KxX8I6plvYl5fpA18n6y3bZwjaLdwutcb
WW3IeJzQvO4v5Yf0pdIJeW3YM/TUlfaPIGv6TmlNujZoSDmNVVJcoa6zf4+S
NuSq9HntmCdorc58ZqSKNuxOTJjJofiVYeNcxWJtaHgpd5FNsYFpqtUfdW34
//+D/h99D+fj
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"cos", "(", 
         FractionBox["\[Theta]", "2"], ")"}]}], HoldForm], TraditionalForm],
  PlotRange->NCache[{{0, 4 Pi}, {-1, 1}}, {{0, 12.566370614359172`}, {-1, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[5, 2] Pi, 7.853981633974483], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[3 Pi, 9.42477796076938], 
      FormBox[
       RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[7, 2] Pi, 10.995574287564276`], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[4 Pi, 12.566370614359172`], 
      FormBox[
       RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.6821815882520237`*^9, 3.682181605476967*^9}, 
   3.682181753240793*^9},ExpressionUUID->"2229c64d-704f-4883-a3a2-\
fa0033bd84f6"],

Cell[BoxData["\<\"g4.png\"\>"], "Output",
 CellChangeTimes->{{3.6821815882520237`*^9, 3.682181605476967*^9}, 
   3.682181753350501*^9},ExpressionUUID->"b33ac562-0b4f-4af1-8d08-\
118c3dffc947"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"2", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "4"}], ",", 
       RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"ExclusionsStyle", "\[Rule]", 
      RowBox[{"{", "Dashed", "}"}]}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "==", 
         RowBox[{
          RowBox[{"-", "Pi"}], "/", "4"}]}], ",", 
        RowBox[{"t", "==", 
         RowBox[{"Pi", "/", "4"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "4"}], ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "8"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Tan", "[", 
       RowBox[{"2", "x"}], "]"}]}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g5.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821816667380877`*^9, 3.6821818417479143`*^9}, {
  3.68218191239745*^9, 3.682181984321219*^9}, {3.682182034850848*^9, 
  3.682182035798121*^9}, {3.682182102008802*^9, 3.68218210206243*^9}, {
  3.682182614064349*^9, 
  3.682182615814941*^9}},ExpressionUUID->"8f7d86c6-394e-4cab-8859-\
5b72fb12184b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
1LWZF1UR4h54RyknQZ/ZubFUTA39D5Sk0Gg=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"tan", "(", 
         RowBox[{"2", " ", "x"}], ")"}]}], HoldForm], TraditionalForm],
  PlotRange->
   NCache[{{Rational[-1, 4] Pi, Rational[1, 4] Pi}, {-4, 
     4}}, {{-0.7853981633974483, 0.7853981633974483}, {-4, 4}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[-Pi, -3.141592653589793], 
      FormBox[
       RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[-7, 8] Pi, -2.748893571891069], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "8"]}], TraditionalForm]}, {
      NCache[Rational[-3, 4] Pi, -2.356194490192345], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
      NCache[Rational[-5, 8] Pi, -1.9634954084936207`], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "8"]}], TraditionalForm]}, {
      NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
      NCache[Rational[-3, 8] Pi, -1.1780972450961724`], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "8"]}], TraditionalForm]}, {
      NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {
      NCache[Rational[-1, 8] Pi, -0.39269908169872414`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "8"]}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 8] Pi, 0.39269908169872414`], 
      FormBox[
       FractionBox["\[Pi]", "8"], TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[3, 8] Pi, 1.1780972450961724`], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[5, 8] Pi, 1.9634954084936207`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[7, 8] Pi, 2.748893571891069], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.6821817288087883`*^9, 3.682181842088202*^9}, {
   3.682181929273203*^9, 3.682181984658616*^9}, 3.682182036136997*^9, 
   3.6821821024909697`*^9, 
   3.6821826161506977`*^9},ExpressionUUID->"615c9c17-2157-486e-9706-\
3b60a47bb3ab"],

Cell[BoxData["\<\"g5.png\"\>"], "Output",
 CellChangeTimes->{{3.6821817288087883`*^9, 3.682181842088202*^9}, {
   3.682181929273203*^9, 3.682181984658616*^9}, 3.682182036136997*^9, 
   3.6821821024909697`*^9, 
   3.682182616250573*^9},ExpressionUUID->"6f98fc78-ff33-4bef-b6dd-\
2c82571dc055"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "t"}], "-", 
    RowBox[{"Pi", "/", "4"}]}], "\[Equal]", 
   RowBox[{"2", "Pi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821820795543833`*^9, 3.682182081804598*^9}, {
  3.682182166454405*^9, 
  3.6821821670303593`*^9}},ExpressionUUID->"0d8c25fa-48d1-45cf-a0fc-\
d03033578b8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6821820824459743`*^9, 
  3.682182167531975*^9},ExpressionUUID->"f0cefaef-ae3d-43f0-8473-\
b1b7a4569f63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"3", "t"}], "-", 
        RowBox[{"Pi", "/", "4"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Pi", "/", "12"}], ",", 
       RowBox[{"3", 
        RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", " ", 
          RowBox[{"Pi", "/", "6"}]}], "+", 
         RowBox[{"Pi", "/", "12"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3", "t"}], "-", 
         RowBox[{"Pi", "/", "4"}]}], "]"}]}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g6.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821820516960287`*^9, 3.682182068367445*^9}, {
  3.682182203339458*^9, 
  3.682182310260704*^9}},ExpressionUUID->"4acf411b-3c2b-48c2-b684-\
b0cd8246d645"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"2", " ", 
         RowBox[{"sin", "(", 
           RowBox[{
             RowBox[{"3", " ", "t"}], "-", 
             FractionBox["\[Pi]", "4"]}], ")"}]}]}], HoldForm], 
    TraditionalForm],
  PlotRange->NCache[{{0, Pi}, {-2, 2}}, {{0, 3.141592653589793}, {-2, 2}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[Rational[1, 12] Pi, 0.2617993877991494], 
      FormBox[
       FractionBox["\[Pi]", "12"], TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[5, 12] Pi, 1.3089969389957472`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[7, 12] Pi, 1.8325957145940461`], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[11, 12] Pi, 2.8797932657906435`], 
      FormBox[
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[13, 12] Pi, 3.4033920413889422`], 
      FormBox[
       FractionBox[
        RowBox[{"13", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[17, 12] Pi, 4.4505895925855405`], 
      FormBox[
       FractionBox[
        RowBox[{"17", " ", "\[Pi]"}], "12"], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.682182070412704*^9, {3.682182209369728*^9, 
   3.682182310987122*^9}},ExpressionUUID->"fe2a0da8-b22e-4026-a14d-\
78d0a133a007"],

Cell[BoxData["\<\"g6.png\"\>"], "Output",
 CellChangeTimes->{
  3.682182070412704*^9, {3.682182209369728*^9, 
   3.682182311084714*^9}},ExpressionUUID->"7c07b5a7-eddc-4c01-98de-\
958e21bd8652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", 
   RowBox[{"Pi", "/", "4"}]}], "-", 
  RowBox[{"Pi", "/", "12"}]}]], "Input",
 CellChangeTimes->{{3.6821823753318768`*^9, 
  3.6821823784228373`*^9}},ExpressionUUID->"b0b90cb1-bc4b-4307-8be1-\
8379f21197e9"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Pi]"}], "3"]], "Output",
 CellChangeTimes->{
  3.6821823786582212`*^9},ExpressionUUID->"1daae7d0-e240-47a9-a5ad-\
131a972657f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Csc", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "\[Equal]", "Pi"}], ",", 
        RowBox[{"t", "==", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ",", 
     RowBox[{"ExclusionsStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "4"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g7.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682182545067535*^9, 3.682182630246189*^9}, {
  3.682182672768136*^9, 
  3.682182676382839*^9}},ExpressionUUID->"f2d0c230-c70d-4f5e-8df6-\
e189df988d43"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
HaWiqjgh4cITfrrg/9/n/B9zXiO/
        "]]}, 
      {Dashing[{Small, Small}], 
       LineBox[{{3.1415618467342448`, 7.674322294257595}, {
        3.141623450097968, -7.671744651126855}}]}}, {{}, {}, {}}}, {}}, {{{}, \
{}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
57aK
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"csc", "(", "\[Theta]", ")"}]}], HoldForm], TraditionalForm],
  PlotRange->NCache[{{0, 2 Pi}, {-4, 4}}, {{0, 6.283185307179586}, {-4, 4}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[Rational[7, 4] Pi, 5.497787143782138], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.682182545802368*^9, 3.682182630487279*^9}, 
   3.682182676792245*^9},ExpressionUUID->"65c4c93b-8a0f-44cd-b879-\
1725c40d5465"],

Cell[BoxData["\<\"g7.png\"\>"], "Output",
 CellChangeTimes->{{3.682182545802368*^9, 3.682182630487279*^9}, 
   3.6821826768858833`*^9},ExpressionUUID->"e3718c78-9e7a-40eb-9153-\
6e87f788f647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"150", "*", 
    RowBox[{"Pi", "/", "180"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", "/", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"360", "*", "Degree"}], "-", 
             RowBox[{"30", "*", "Degree"}]}], ",", 
            RowBox[{"30", "*", "Degree"}]}], "}"}]}], "]"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"360", "*", "Degree"}], "-", 
             RowBox[{"30", "*", "Degree"}]}], ",", 
            RowBox[{"30", "*", "Degree"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"r", "  ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", " ", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ang1ex.png\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7120678517030354`*^9, 3.7120679082041597`*^9}, {
  3.712067941082324*^9, 3.712068001687686*^9}, {3.712068045728153*^9, 
  3.7120680519227962`*^9}, {3.712068191541603*^9, 
  3.7120682173036747`*^9}},ExpressionUUID->"36be2f75-ac8d-4894-9f0c-\
aee91dbe408f"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.41531271571175127`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.35967136232108116`, 0.20765635785587563`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.20765635785587563`, 0.35967136232108116`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., 0.41531271571175127`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.20765635785587563`, 0.35967136232108116`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.35967136232108116`, 0.20765635785587563`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.41531271571175127`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.35967136232108116`, -0.20765635785587563`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.20765635785587563`, -0.35967136232108116`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., -0.41531271571175127`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.20765635785587563`, -0.35967136232108116`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         0.35967136232108116`, -0.20765635785587563`}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
+e/z0PZLjIrva6A1dtP3f+Pn6EsW/83XQIPngAIH9mf3vrLFlRowXFc7uRN7
R/uu33QGKhyum5TewO/H/4p+soqFCl8CzafnsA8nKNx/yE6Fl7qKbqPYxSST
/uv8VFCw4uqkYRt81Ge2FKeCuHz64hNsK5Kysro8FfqijOaisO+FKF86qE6F
o2dGKJexpZMu32I+QQXf8s6zWv/2n3si4asRFQhsTbXc2Dt5mtJHrKjAzWu2
+A2f3+EwgWTkQIWtFcKrzdhlHALhJW5UcGGYunYB2/qys0JoGBXsi5jGhLGV
uT5+d42hwlzmIPsXfF/GFr3zrZOpENo19NUFW6aa55lyCRV0GjXjRLEF8921
JUhU4LzVtTKO76N/o0ohdyMVCt3TJU5g90jlSzIMUuGiMt/SMr7PPnF++stj
VJDfJBeR++9+K0qbfJ6mwrjlzc1fcXzcOVS0b2SNCrs8fjjY4/ghpBJN6w7U
wosfWu6rON40/nikV0vWwiDbPojG/i4zjqqO1MJZ9Q75fByvd38fLivXqwUe
tmkLAo53u3GfqXLPWphUfxMjhf10ny975c1a2BdpE54fgPeP76sAMaIWxARu
10fjfLH4pRjVpdXCngLWE7I4v+QqTm8bodUC79iU9zjOV4d1xFYV9tTB6w9b
5/Zh67P5afLx1sG5tKb4Ux5ksNx5xZ9ZrA4+/uA+98SNDEoTcZXj6nWQcmat
RwbnyywbLe60K3XQSh7/exfnY93eV6+P0uqg3q1r7rYdGWZVHcIP9dbBxX1H
/vjjPH/BZGKr6EgdiOmP3rG6iPeTdSOTa64OeEIsD8/9y++p36dZOOvBbNoj
wgLXi/+oh9+we9aDy0KQ339GZCgS66vmCqwH/kbDyF4DMrjHRlgK3KmH8bnM
VdnTZFjyiV2WzsTP5wQJ9eD60+nx1sm4qx5mYyQ0tHE9U25YEmo60AC4K0W6
B3A9zNxZxz/UAN5FXQ8f85PhNLv/t6A3DVDzd3z1Fy8Z4hZWia8/NMCuLPkb
BVxkOLTdcDLjVwMETQhqPduL4yl2gyog0ghHtF06/bbg+ZWuR2n5N4Kk2dH4
ozMkQFFP62f4m8C023y/8HsS8Hkw9JtKNMH7y6GirO9IQGlgMGpRaILKlrHJ
sTe43/DkSs/Va4K7IscpesMkGLVikLf3boKIl5YlwS247s4zpK+1N8Hif/e/
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
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {0.41531271571175127`, 0.}], 
         Scaled[{0.006, 0.}, {0.41531271571175127`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.35967136232108116`, 0.20765635785587563`}], 
         Scaled[{0.005196152422706632, 0.003}, {0.35967136232108116`, 
          0.20765635785587563`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.20765635785587563`, 0.35967136232108116`}], 
         Scaled[{0.003, 0.005196152422706632}, {0.20765635785587563`, 
          0.35967136232108116`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., 0.41531271571175127`}], 
         Scaled[{0., 0.006}, {0., 0.41531271571175127`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.20765635785587563`, 0.35967136232108116`}], 
         Scaled[{-0.003, 0.005196152422706632}, {-0.20765635785587563`, 
          0.35967136232108116`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.35967136232108116`, 0.20765635785587563`}], 
         Scaled[{-0.005196152422706632, 0.003}, {-0.35967136232108116`, 
          0.20765635785587563`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.41531271571175127`, 0.}], 
         Scaled[{-0.006, 0.}, {-0.41531271571175127`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.35967136232108116`, -0.20765635785587563`}], 
         Scaled[{-0.005196152422706632, -0.003}, {-0.35967136232108116`, \
-0.20765635785587563`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.20765635785587563`, -0.35967136232108116`}], 
         Scaled[{-0.003, -0.005196152422706632}, {-0.20765635785587563`, \
-0.35967136232108116`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., -0.41531271571175127`}], 
         Scaled[{0., -0.006}, {0., -0.41531271571175127`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.20765635785587563`, -0.35967136232108116`}], 
         Scaled[{0.003, -0.005196152422706632}, {
          0.20765635785587563`, -0.35967136232108116`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.35967136232108116`, -0.20765635785587563`}], 
         Scaled[{0.005196152422706632, -0.003}, {
          0.35967136232108116`, -0.20765635785587563`}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {0.41531271571175127, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        RowBox[{"30", " ", "\[Degree]"}], NCache[
        Offset[{4 3^Rational[1, 2], 4}, {0.35967136232108116`, 
          0.20765635785587563`}], 
         Offset[{6.928203230275509, 4}, {0.35967136232108116`, 
          0.20765635785587563`}]], 
        NCache[{Rational[-1, 2] 3^Rational[1, 2], 
          Rational[-1, 2]}, {-0.8660254037844386, -0.5}],
        Background->Automatic], InsetBox[
        RowBox[{"60", " ", "\[Degree]"}], NCache[
        Offset[{4, 4 3^Rational[1, 2]}, {0.20765635785587563`, 
          0.35967136232108116`}], 
         Offset[{4, 6.928203230275509}, {0.20765635785587563`, 
          0.35967136232108116`}]], 
        NCache[{Rational[-1, 2], Rational[-1, 2] 
          3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        RowBox[{"90", " ", "\[Degree]"}], 
        Offset[{0, 8}, {0., 0.41531271571175127}], {0, -1},
        Background->Automatic], InsetBox[
        RowBox[{"120", " ", "\[Degree]"}], NCache[
        Offset[{-4, 4 3^Rational[1, 2]}, {-0.20765635785587563`, 
          0.35967136232108116`}], 
         Offset[{-4, 6.928203230275509}, {-0.20765635785587563`, 
          0.35967136232108116`}]], 
        NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
         0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        RowBox[{"150", " ", "\[Degree]"}], NCache[
        Offset[{(-4) 3^Rational[1, 2], 4}, {-0.35967136232108116`, 
          0.20765635785587563`}], 
         Offset[{-6.928203230275509, 4}, {-0.35967136232108116`, 
          0.20765635785587563`}]], 
        NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
         0.8660254037844386, -0.5}],
        Background->Automatic], InsetBox[
        RowBox[{"180", " ", "\[Degree]"}], 
        Offset[{-8, 0}, {-0.41531271571175127, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        RowBox[{"210", " ", "\[Degree]"}], NCache[
        Offset[{(-4) 
           3^Rational[
             1, 2], -4}, {-0.35967136232108116`, -0.20765635785587563`}], 
         Offset[{-6.928203230275509, -4}, {-0.35967136232108116`, \
-0.20765635785587563`}]], 
        NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
         0.8660254037844386, 0.5}],
        Background->Automatic], InsetBox[
        RowBox[{"240", " ", "\[Degree]"}], NCache[
        Offset[{-4, (-4) 
           3^Rational[1, 2]}, {-0.20765635785587563`, -0.35967136232108116`}],
          Offset[{-4, -6.928203230275509}, {-0.20765635785587563`, \
-0.35967136232108116`}]], 
        NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        RowBox[{"270", " ", "\[Degree]"}], 
        Offset[{0, -8}, {0., -0.41531271571175127}], {0, 1},
        Background->Automatic], InsetBox[
        RowBox[{"300", " ", "\[Degree]"}], NCache[
        Offset[{4, (-4) 3^Rational[1, 2]}, {
          0.20765635785587563`, -0.35967136232108116`}], 
         Offset[{4, -6.928203230275509}, {
          0.20765635785587563`, -0.35967136232108116`}]], 
        NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        RowBox[{"330", " ", "\[Degree]"}], NCache[
        Offset[{4 3^Rational[1, 2], -4}, {
          0.35967136232108116`, -0.20765635785587563`}], 
         Offset[{6.928203230275509, -4}, {
          0.35967136232108116`, -0.20765635785587563`}]], 
        NCache[{Rational[-1, 2] 3^Rational[1, 2], Rational[
          1, 2]}, {-0.8660254037844386, 0.5}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 0.41531271571175127, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[{{0, 0}, {-0.34641016151377546`, 0.2}}], 
   ArrowBox[{{0, 0}, {0.4, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7120678704752502`*^9, 3.712067885566657*^9}, {
   3.712067969243924*^9, 3.7120679826146917`*^9}, {3.712068047678895*^9, 
   3.7120680522853003`*^9}, {3.7120681816131487`*^9, 3.712068225549974*^9}, 
   3.7120683809702387`*^9},ExpressionUUID->"68f7cc78-7d21-4c78-ad9c-\
03ec87358440"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    RowBox[{"Pi", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "0.28"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ang2ex.png\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712068359696369*^9, 
  3.712068447733276*^9}},ExpressionUUID->"69509ce0-70b5-49c9-91a1-\
6ff03e3d612b"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.26243902800833985`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.13121951400416992`, 0.2272788651997181}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.13121951400416992`, 0.2272788651997181}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.26243902800833985`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.13121951400416992`, -0.2272788651997181}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         0.13121951400416992`, -0.2272788651997181}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
y//7/B/oJyaB
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {0.26243902800833985`, 0.}], 
         Scaled[{0.006, 0.}, {0.26243902800833985`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.13121951400416992`, 0.2272788651997181}], 
         Scaled[{0.003, 0.005196152422706632}, {0.13121951400416992`, 
          0.2272788651997181}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.13121951400416992`, 0.2272788651997181}], 
         Scaled[{-0.003, 0.005196152422706632}, {-0.13121951400416992`, 
          0.2272788651997181}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.26243902800833985`, 0.}], 
         Scaled[{-0.006, 0.}, {-0.26243902800833985`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.13121951400416992`, -0.2272788651997181}], 
         Scaled[{-0.003, -0.005196152422706632}, {-0.13121951400416992`, \
-0.2272788651997181}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.13121951400416992`, -0.2272788651997181}], 
         Scaled[{0.003, -0.005196152422706632}, {
          0.13121951400416992`, -0.2272788651997181}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {0.26243902800833985, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "3"], NCache[
        Offset[{4, 4 3^Rational[1, 2]}, {0.13121951400416992`, 
          0.2272788651997181}], 
         Offset[{4, 6.928203230275509}, {0.13121951400416992`, 
          0.2272788651997181}]], 
        NCache[{Rational[-1, 2], Rational[-1, 2] 
          3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, 4 3^Rational[1, 2]}, {-0.13121951400416992`, 
          0.2272788651997181}], 
         Offset[{-4, 6.928203230275509}, {-0.13121951400416992`, 
          0.2272788651997181}]], 
        NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
         0.5, -0.8660254037844386}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-0.26243902800833985, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, (-4) 
           3^Rational[1, 2]}, {-0.13121951400416992`, -0.2272788651997181}], 
         Offset[{-4, -6.928203230275509}, {-0.13121951400416992`, \
-0.2272788651997181}]], 
        NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
        Offset[{4, (-4) 3^Rational[1, 2]}, {
          0.13121951400416992`, -0.2272788651997181}], 
         Offset[{4, -6.928203230275509}, {
          0.13121951400416992`, -0.2272788651997181}]], 
        NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
         0.8660254037844386}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 0.26243902800833985, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[{{0, 0}, {-0.14, -0.24248711305964282`}}], 
   ArrowBox[{{0, 0}, {0.28, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.712068364641161*^9, 
  3.712068448213396*^9}},ExpressionUUID->"591dc185-a248-4ccd-a281-\
a98dd5933c47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"7", "*", 
    RowBox[{"Pi", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", "/", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ang3ex.png\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71206884749851*^9, 
  3.712068910230672*^9}},ExpressionUUID->"846568e6-ee54-4e7b-b987-\
76b308250647"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.0313415136249005`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.7292685780033651, 0.7292685780033651}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., 1.0313415136249005`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7292685780033651, 0.7292685780033651}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.0313415136249005`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7292685780033651, -0.7292685780033651}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., -1.0313415136249005`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         0.7292685780033651, -0.7292685780033651}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1:eJxd13c81e/7OPC2FimEIg0JFYqMxEWUmUKilIisRBJJvcuIBimr7JW997Ev
HHsfx94n84QkJSN8X5/H77+ffzyeXu5zXvd1X9d13/eRezZa9zdt2LAhePOG
Df/7/f//HFfl/tlueRbY5U/6lTdGyG6Kv13fYnkRLkliaGkjyo6tCFIEI9XA
6AWfLf8IRfbIuIFokaUW/CxmJmc1DsnybkvPurFVFw6K9uaNdk3Kvn6fqj0W
oQ/v+RJtOUfmZC32kOXPchtC5STz9wi9RdkjYTld5pb3IEXD9rZb47rsEYfL
RwNIJqB/YtzZkGcLvG/f3527xQx2d53qTeraDiKeNel1mhawc47899AeJhh/
sHa3JfwBjF5ctxv4theKU+9HVE09hGubxxVLV1khVeCGrw7XIzhmc7taRI8D
vnN2PeSxeAxDr0PIVQ08wOxmK2P/0Q4e75AtfvzrCFBC7LnLcp9AxEOmhNpD
vGBqoffi7Kan4LESYUnu5Acjtj1ZevyOYB8u9Mr03kn4r2rovq3GM2htzj/c
yCgEVkPJuU+Dn0P/CJPrDO0MuLVEbjcpewG/8t7skzcTBUfxr0py4/+Bq1NA
rd0/MXB/+W/lG4czuHpZKzy5IQk3pThZlo1dwbavwqmlFsCxduBH3IIr5Ims
ibqPy8FuPCCs8s4NIsJeen/8KQ/V5239rdJew5977+9acClC1svnf48veoD0
09+Dx6nKcHWta+XJ+zdwcspjIZxVFfws56h5XG9haHnafaOBGmz9fZm0V/4d
wE3mQy7bNUD91bDWwXee4GdRslVoUBPm+axW/x7wAsvfjGbvwrUghWt9qjLF
C3gu1tt03dOG9On8K0KtH6BlUEFT9e916DDbynFw1yc4zDLzx/WqHgRbnbKz
uOoL0k8E1/8W3wW+uQa3/jBfGDswHLnBwhC+Ff6+pjDtC64Mx/a0/zEEme0C
mlNv/QANAm6Z7r8HWruYL0SU+4NJp1fKGTsT0NawMLYQ+QLPH/mOnQixAHGt
4R/r/30B75+qQk6qlvCr+9yyR8MXsOJI+rH/nyVE2uyquG8aCIebUsOETK2g
4fDHx4YhQbAmGjTbpGMDl77Jq3NvCoVqfx4Hecpj+GRZl/FVIxT2mJcsC0rb
wSZuIQP2kFCYi3i2RyLODmajMqurRMNgfrDlVN6rJzDcfEBcyiQcIt+7zqvK
OUAQfelnnGEkjARMz0X/fQZXcy9q3M+NBoseZ7X6Qy4QVYMHeruigSNik/Ca
oQu8vb35n8JyNDhp8ZFTv7oA7xpX8oLsV2BQ6Pz8StAV1vw4nDtqvkKX9gLL
lIwbaAZtPGfWFQMuWwN31D93hyP7JfdcmYkDl3SjyyNa7+FTc99hGaZ4YNi7
Zb9ezHuooD4o4xGOh0asZLi08B6m191uFj+Kh9cHn1I9Qjzhb8WPqmvz8ZDK
DN5xU17gCRsFOv4kQOjYBcbz0R/hTAkLS8VsEjh4yVbRsn1BKXvRWZ4pGY72
/aXtGvGFvMHY2MxTydBynj/54T4/sL9lUG9skQxLhaH/umz9oFzA0Y3xWzLI
9m1IviTqD9eFwjpMW1MgoEHJ0r4sAM77bt6eHZkGZVEjrV83B4Gq8qgmX0ka
jJw58i1CKghYXvGxvu1JA91jnpcoNkEw6nGnaP++dHhjLpZF7Q+CAuPEBAPX
dPh3LIh+vSAYvuzK6a4UzoAS+EkWfxEKww5hofStmbB0iq/FljUSTn8PmWFl
zQShQWOei+ciwcNJKkHsaCaIGZ2WFrkRCW7fxIQ1ZTPhwXPHkPuBkWBVpaG7
ap8JI/95mIoeigIR8TMkjpFMkNzZJ64hHA3Bcn/a9+ZkQRpdwm2/WQw0NBTU
5ZZlwROzT5JunjHgnufdpd6UBSlP3rbuyogBxYtv2a6PZ4EzQ5XZo6UYOMQe
tFrFng3/OoOt3D/EAixSY4QcsyGas9y6tTAO5LXkXjcJ5YA/6Vz6E4FECMgL
erVNKgd2+CptCtBIhBDpHwKiCjkwc51W22CXCPukNazMdHMgrJv56YvSRHgd
dLr5/KscWLFjrZi8ngTNeV6XPBpzgFlzXmXYPRkM1OY/LnTkgLgYyyajlGSQ
cZNkujWUA8ouBxX+tiUDtZz37fJcDrTR/x0zOZwCtkep4ZH7c0FWJ7VIpjgF
bg++aXG6kwulwp+Xv/1NhcwjPh0HTHNhfeWWQC5PGjBwPQpMtc6FTaHXZ0KU
0oDj6SuJ5Fe5MHmpYiHuSxp4hLrt2RaVCzzPIm5lSqZD56tTvaK0XAApRYoi
ZMDF9/w3ZHXzYHezCL+VVya8qeNPLTLIg8shgXHXv2aCy5ybGb9pHrTOdu5W
LsyEXzbzIy1P8sCJ0c/06mQmGKdl7r7hkwcG5bPHhxSzIMBMqlCiJg/iTu56
trSeBc/O51yJb8oD91RZe09iHdB+R+nW9jyQnElLPSGcDTy9rqwfh/Pg5c+w
+JcG2eBo2pvTtpgH1so/vWJLsiFlralgPx8JVO187Zv+ywFR/xHNRydJwMZX
sXstIAceSdRezhchQdD0YWHJtBy42PntBIs0Cd6y20zWDuYA5dTe2XkNEvwc
uzh3Sy4XJG/zBqA2CTwGtsR16uXCl9P/3XqmRwJ2AQdPfdtcKJkt5CUZkcBZ
s6rQOToXyA83jt2yIwHrykdLia150DydkvX5KQnsn1qarHDnAU2uyrjsOQlO
7hQSrRXPA2otRWvAjQTn9gkdeWGeBz2X5r5c8CNBcNvJZbXGPPjP1jJn/DMJ
Yg973dAZywPeR0JOL4NJEPi6VdBsLQ8MnXaMOUSRgPcQ3+4YYl7vdXNs36eR
oOxsr7lLAAlI/pcovpkk+LW3lUmX+Puxx75X3uWQQEUj002shgT1fqdd5QpJ
YF6omrptiQQVr+xObywhwX5TV7WVvflQZGjSl44k2G0d4/lXMB8ikl8e76ok
gVWGQ+W2O/ngZdGec5X4HMUUtzhOh3zIqTt9Oq+OBAHeYquiH/PBetwL1ZtJ
oKm5u+9leT6cn+otjOgkQU7gQ04rvgL4WL1K8+gmwXK8j1EBFMA5BdYy/V4S
KGzZQGa8WQBPuf3eNg+QIIUZvzZ4FkBNVY2p1RDxnJNh97nYAmhPfDvyd5gE
uife3o0tLQBSj09k1wgx//yFoOC5AmC9399+cowEZ/MKLXh2FYJcBunjw3ES
jOWYLCTxFoJ1w7mG0AkinvU6YjKyhUDzsXEpmCQB35Yp9k7dQtBLeZ1CppPg
msV/Afa2hfDSL+Ry0XcSuGy4F3XQsxDMfGkqkVPE+7XRhWtjCuFv7fuMx9Mk
YJo1Ove8tBA0hdqenJ0hwU4bljix7kK46Lf0aYjw32cKDr/nCiE9RmX92Q8S
zCmLBhfuKoKlmb2FG2eJ+Age3vbmeBHc7ksociBs80Yh7SYUgUHxg7VuwpGj
bR5nbxYBf3XpC/6fJJieXHfba1cEY2yMZ+4T/nN3MWjBqwiOZ9eyfSQsLzte
TIsrgjO+lsfjCO+JnR1uKysC08+PbyURlhwXX67rLQIvf7P0EMJ73/b+q/5d
BAI6XYecCKur/OmvYyqGrs83vl4iTOMN927jLwYfZheJNeJ9vulMbqVdLIYN
T5Y6vhK21R8R/3O7GJpsLJ6JE477F8y252kxDGe6cOUR8zVXZ/8s5FMMOfSl
gqOErVJvp2gnFxPr8En9BRGffZ0P1F9WFcMU4+6WCiKeOu3ylmlDxfDAXvLC
AhHvwr3dSyNLhJvo3vsJy+ryzh5iLYG9s8vlx4j1UaJwyN4VKgH/iiut3MT6
+bLE9MYol4CdfEPOFmJ9T3Fn5s/eK4G594zTgUR+5GZ93x7wpQT6smrELo+S
oMux795sZgmwXfoCw9+IeLt2Nmk0lkDh+/Q3vUT+7RK5Ese1sRRKdA8p6w6S
QKPw9b5KzlLoT8iVIveTgFsspsTmbClwWyZFmveQwL14KYFqXAon0qSZortI
IJOj1+H5ohQ4jtwJq+8gwX27OQ7lgFKI/znPTKeQ4Gb31tLG6lKAgNqZwRYS
pE8G7AoYKoXYlal+chPRL0LeKhstEs/9OUduEfVGW4g23yqIcKrk4IkSol6N
ZJ8LPP+AUMqiLnSSqOcLdRt7jeIQPrtpCL4l6l3dq1JAHZE4R9n9Ysol6udH
8cuTcwgMGzgNryYS8aHv+/VOsAzC16oSA72J/PKXNir3LoOoHY/1f78nAdzf
o3M1pAz6v3I2yL4hQVLWk5rB+DIYcjHvinhFAvHrb1k2lZfB8ukgVV8bot/c
iC24OV8GE5ra386pk0D/a0qZsl45bHbvXX6uRALPrUXi0yblMB/PFZlxkVjP
ZKGeT7blIM+i5D4mSQKfsADvgfflRN3GW/7HS4L2LXqCr0vKAa0GJYyJ/t9H
YQ3eeKwCSq84Ku77lQcqQQbkGpEK6HnfGJgylQdFTO5T3rIVgOMVu74O5oHF
xzzuw7cqYHzri4rP5Dz4yf5e44pPBTAYz9Z9fpcHd9frtjStV8CYn8rwokse
cDg4LkYwkuGNpwPTZac8OHo99ZXdQTJxzzGLj7LMg5jqpNNcEmSYnJB2uaOa
Bxk381XtrMmQ8/xHyBixD3DGB4WcHSDDhh8FS3//5cJxe+uQXVNkuBDhpPRn
Phe2FqtVjC6S4dfuDUkZxH5rod5n8YW1Ekwu0jQEi3PBdF3CaFWtEvQu/Ll2
4mEu8Lfs+FNVWAmM4VIp0pgDJSV20ZyBVZD45eLkw5wcuMe0rLAeUwUpSVOB
HxJzoGlCTXk0swoWM2WuB/jlQEBc3b2UhipQFeLhrDbNAWFPbXmx9SoIuPf8
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
mJBa1u2fakE5rG5ElHB8FC/r6EwtWGY5X75O5JuGrn1LJ1cdPNzmbdNP5OOI
4evYRrU6eGyYe+EuYc9X1U7liXXAeVWh7DqRzzXXqknN9+tB3O2s7jpRDzak
zRI9/vXAlDHoeZvwxtkQ13FyPSSdjDHIIern+6XXujuONoDoj4992lF0/Kuk
N2o92ABMvkWHtMKJePCFZ3kzNkKl5orw6zDi+ytvrmVcaITu6yE9GaFEfR4J
Hv8X3AiZDOfml4LpmJWROJqh2wQv00NPqRH9YTWG7d2IRxMsiMbMaH4m6qfF
X58jrwnWxULktQPoeF7g7723rM1wfjAn4hLRX6L0do06U5qBY5vxUbo3He+U
DNDIG1qALSvJvPIDHTe/mCjZLtICT2cKLgR70fHkysfJL94twNmf4XnuPfF5
u1Oejh1vhXfPmrIFiX4nGrVz5INMKwQ/36/b60bE2+g2m4ROK5S/V3Z77UpH
sXM5hZ6vWyHjGdOT2ld0FJpYd5IZaYVUlrk4Jic6Uq3f3y+NpMDki9vtfg/p
OHB1IWyJRAH9gdnjvx/Q8VfHgNK5FgpgqKHQVUs6Gs/N9aeuUoAN6UZ/TIn1
cCe7f73VBgfXFC5vMiT2h01XQkNZqbBJ6U8otyaxP2R7JfefpEKP0SNegat0
fFAsPcSlQDw/7a4vfIXIp0nPyDBbKiSdoHSeVKFjQrHq5shmKvC/cF8YlaPj
2lDpjpi37fBRxM9VV5ioX6VaztGIdnht95PKeJqOm6LcNvCS2qHrdXFzqSCR
v0fey34da4fL+2SQmdgfd1/Y8Tv8YgcIc9xzfcJFx5vuZv88/nVADfWPsvR2
Ohrq5Rz+a9MFdM32FnLfJB6ZrOo9/K4Loplk+b27J9Gp9WOSSnQXVInbndYi
9u8LChsfB7Z3gYrPGZma5kmUjOCdFZDqhp7N85b3yyfxtu/H/eybeuDmyM1G
29hJfFYrHjzj2wuJ7LqGdeaTaL4jrnQmuRcCeo/O1JpM4oEoudPTlb0Q7qR+
pMJwEiciDVtGFnph9arDqyg94rygwvSk5FYfFG5L3MuqPIltb1O+sh7th2Ge
Px61x4nzh/mvxOPpAyAasaPDun8Cv3lLSklXD8B9yT7/P10TyGOZHKgxMAD0
iolmB+oEziYey7beNQhBLkezzOsnUFcwkexnNgh9759J7syfwPf5ucVWPEPw
6qePsaLvBH4P800MvjwMyomvHny+OIE7T8LdVc1heHwnvcxKZgIFTu5INLgz
DBSNfwEykhP45/TjH1xPhiHp5mp58+kJlBtfW3gTNQx5w1dOpHNMIAwezmL7
NwzOp5vNzWfGUT+syHw1nQY2bmts6DuOdS7UN07FNLgwxegn4TWObkZyjn9q
aSA1p66Q6D6OeruflY7SaKCpmQ2OjuMYprLDKYHlG5jlbCiovDOO53atOpU7
fIMa43/nOU6MY1DUQdbD0iNQur34SlrOGCZ3/VK5pjQCcGHEUSN1DIecNPr/
0x6Bro7imYnYMXxgvGk75cEI3FXuJW37MoZLPY/ZdENHoKPn0di84xg6BlN6
Bv+NgPrRnZYfpMfw0EHTYyPbR2FwmTuwQnQMP166/nGUdRQcxvcdmjs5hjXd
hTh4ahQyFmzOnecaQ7XNp7gzbo/CI1XW1Bf/RlFSkIE1zHwUNhrK5b74PYpv
pWWY3zwZhWPKh7kdpkeRCO1OLa9ReL5lJ7NO/yim72rdIBo4CgHzPGHn20eR
RfviD+aYUfj3faM3Z+MoGsgsNU+lj0J6d+HIHHkUt4frRpCLRmHX//uN/wdH
TeMV
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {1.0313415136249005`, 0.}], 
         Scaled[{0.006, 0.}, {1.0313415136249005`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7292685780033651, 0.7292685780033651}], 
         Scaled[{0.004242640687119285, 0.004242640687119285}, {
          0.7292685780033651, 0.7292685780033651}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., 1.0313415136249005`}], 
         Scaled[{0., 0.006}, {0., 1.0313415136249005`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7292685780033651, 0.7292685780033651}], 
         Scaled[{-0.004242640687119285, 
          0.004242640687119285}, {-0.7292685780033651, 0.7292685780033651}]}],
        LineBox[{
        Scaled[{0, 0}, {-1.0313415136249005`, 0.}], 
         Scaled[{-0.006, 0.}, {-1.0313415136249005`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7292685780033651, -0.7292685780033651}], 
         Scaled[{-0.004242640687119285, -0.004242640687119285}, \
{-0.7292685780033651, -0.7292685780033651}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., -1.0313415136249005`}], 
         Scaled[{0., -0.006}, {0., -1.0313415136249005`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7292685780033651, -0.7292685780033651}], 
         Scaled[{0.004242640687119285, -0.004242640687119285}, {
          0.7292685780033651, -0.7292685780033651}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {1.0313415136249005, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "4"], NCache[
        Offset[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {0.7292685780033651, 
          0.7292685780033651}], 
         Offset[{5.656854249492381, 5.656854249492381}, {0.7292685780033651, 
          0.7292685780033651}]], 
        NCache[{-2^Rational[-1, 2], -2^
           Rational[-1, 2]}, {-0.7071067811865475, -0.7071067811865475}],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.0313415136249005}], {0, -1},
        
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "4"], NCache[
        Offset[{(-4) 2^Rational[1, 2], 4 
           2^Rational[1, 2]}, {-0.7292685780033651, 0.7292685780033651}], 
         Offset[{-5.656854249492381, 5.656854249492381}, {-0.7292685780033651,
           0.7292685780033651}]], 
        NCache[{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
         0.7071067811865475, -0.7071067811865475}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-1.0313415136249005, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "4"], NCache[
        Offset[{(-4) 2^Rational[1, 2], (-4) 
           2^Rational[1, 2]}, {-0.7292685780033651, -0.7292685780033651}], 
         Offset[{-5.656854249492381, -5.656854249492381}, \
{-0.7292685780033651, -0.7292685780033651}]], 
        NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
         0.7071067811865475}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], 
        Offset[{0, -8}, {0., -1.0313415136249005}], {0, 1},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "4"], NCache[
        Offset[{4 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {
          0.7292685780033651, -0.7292685780033651}], 
         Offset[{5.656854249492381, -5.656854249492381}, {
          0.7292685780033651, -0.7292685780033651}]], 
        NCache[{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {-0.7071067811865475, 
         0.7071067811865475}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 1.0313415136249005, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[NCache[{{0, 0}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, 
      0}, {0.7071067811865475, -0.7071067811865475}}]], 
   ArrowBox[{{0, 0}, {1, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.712068854675791*^9, 
  3.712068910416098*^9}},ExpressionUUID->"a98b00d0-1651-4aa9-ab26-\
1152d51d1e43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "11"}], "*", 
    RowBox[{"Pi", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ang4ex.png\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712068971478971*^9, 
  3.712068987418428*^9}},ExpressionUUID->"21705fef-b6c8-4a01-a32a-\
4b539faef7d3"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.015562955497673, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.7181114525542566, 0.7181114525542566}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., 1.015562955497673}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7181114525542566, 0.7181114525542566}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.015562955497673, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7181114525542566, -0.7181114525542566}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., -1.015562955497673}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         0.7181114525542566, -0.7181114525542566}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {1.015562955497673, 0.}], 
         Scaled[{0.006, 0.}, {1.015562955497673, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7181114525542566, 0.7181114525542566}], 
         Scaled[{0.004242640687119285, 0.004242640687119285}, {
          0.7181114525542566, 0.7181114525542566}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., 1.015562955497673}], 
         Scaled[{0., 0.006}, {0., 1.015562955497673}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7181114525542566, 0.7181114525542566}], 
         Scaled[{-0.004242640687119285, 
          0.004242640687119285}, {-0.7181114525542566, 0.7181114525542566}]}],
        LineBox[{
        Scaled[{0, 0}, {-1.015562955497673, 0.}], 
         Scaled[{-0.006, 0.}, {-1.015562955497673, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7181114525542566, -0.7181114525542566}], 
         Scaled[{-0.004242640687119285, -0.004242640687119285}, \
{-0.7181114525542566, -0.7181114525542566}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., -1.015562955497673}], 
         Scaled[{0., -0.006}, {0., -1.015562955497673}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7181114525542566, -0.7181114525542566}], 
         Scaled[{0.004242640687119285, -0.004242640687119285}, {
          0.7181114525542566, -0.7181114525542566}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {1.015562955497673, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "4"], NCache[
        Offset[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {0.7181114525542566, 
          0.7181114525542566}], 
         Offset[{5.656854249492381, 5.656854249492381}, {0.7181114525542566, 
          0.7181114525542566}]], 
        NCache[{-2^Rational[-1, 2], -2^
           Rational[-1, 2]}, {-0.7071067811865475, -0.7071067811865475}],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.015562955497673}], {0, -1},
        
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "4"], NCache[
        Offset[{(-4) 2^Rational[1, 2], 4 
           2^Rational[1, 2]}, {-0.7181114525542566, 0.7181114525542566}], 
         Offset[{-5.656854249492381, 5.656854249492381}, {-0.7181114525542566,
           0.7181114525542566}]], 
        NCache[{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
         0.7071067811865475, -0.7071067811865475}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-1.015562955497673, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "4"], NCache[
        Offset[{(-4) 2^Rational[1, 2], (-4) 
           2^Rational[1, 2]}, {-0.7181114525542566, -0.7181114525542566}], 
         Offset[{-5.656854249492381, -5.656854249492381}, \
{-0.7181114525542566, -0.7181114525542566}]], 
        NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
         0.7071067811865475}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], 
        Offset[{0, -8}, {0., -1.015562955497673}], {0, 1},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "4"], NCache[
        Offset[{4 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {
          0.7181114525542566, -0.7181114525542566}], 
         Offset[{5.656854249492381, -5.656854249492381}, {
          0.7181114525542566, -0.7181114525542566}]], 
        NCache[{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {-0.7071067811865475, 
         0.7071067811865475}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 1.015562955497673, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[NCache[{{0, 0}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, 
      0}, {-0.7071067811865475, -0.7071067811865475}}]], 
   ArrowBox[{{0, 0}, {1, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7120689749721413`*^9, 
  3.712068987805357*^9}},ExpressionUUID->"d1512c34-28d3-44bc-864a-\
a4d338745470"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"70", "*", "Degree"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<(x = \\cos(\\theta),y=\\sin(\\theta))\>\"", ",", "Large", ",", 
         "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "0.6"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", "0.6"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", "Italic"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<unitcircle.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.743238360642913*^9, 3.7432384172524033`*^9}, {
  3.743238449209868*^9, 3.743238487210902*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"da1fc655-1eb2-4b8a-a0b8-59e51d2f5f88"],

Cell[BoxData[
 RowBox[{"70", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.7432383891770353`*^9, 3.743238417690839*^9}, 
   3.7432384507378387`*^9, 
   3.7432384896387577`*^9},ExpressionUUID->"bcf627c6-c332-45f2-b272-\
3d1621384b5f"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{0.3420201433256687, 0.9396926207859084}, {0.3420201433256687,
        0.9396926207859084}}]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{1., 0.}, {1., 0.}}]}, {}}, {}, {}, {}, {}}, InsetBox[
    StyleBox["\<\"(x = \\\\cos(\\theta),y=\\\\sin(\\theta))\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {0.08404028665133745, 1.2793852415718168}], 
   ArrowBox[NCache[{{0, 0}, {2 Sin[20 Degree], 2 Cos[20 Degree]}}, {{0, 0}, {
      0.6840402866513374, 1.8793852415718169`}}]], ArrowBox[{{0, 0}, {2, 0}}],
    CircleBox[{0, 0}], 
   CircleBox[{0, 0}, 0.2, NCache[{0, 70 Degree}, {0, 1.2217304763960306`}]]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->{Medium, Italic},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7432383891770353`*^9, 3.743238417690839*^9}, 
   3.7432384507378387`*^9, 
   3.743238489834086*^9},ExpressionUUID->"abdd5c76-6dfb-40ad-9ed5-\
f8cea829c601"],

Cell[BoxData["\<\"unitcircle.png\"\>"], "Output",
 CellChangeTimes->{{3.7432383891770353`*^9, 3.743238417690839*^9}, 
   3.7432384507378387`*^9, 
   3.743238489986743*^9},ExpressionUUID->"b37253dc-d95d-4cfd-a6f0-\
9fd861fda03f"]
}, Open  ]],

Cell[BoxData["zzz"], "Input",
 CellChangeTimes->{{3.743238453068871*^9, 
  3.743238457321218*^9}},ExpressionUUID->"7ad8bc4f-2893-4549-a075-\
3f15f0d99cb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"t", "+", 
      RowBox[{"Pi", "/", "6"}]}], ")"}]}], "\[Equal]", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"t", "+", 
       RowBox[{"Pi", "/", "6"}]}], ")"}]}], "\[Equal]", 
    RowBox[{"2", "Pi"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"t", "+", 
          RowBox[{"Pi", "/", "6"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "6"}], ",", 
       RowBox[{"5", 
        RowBox[{"Pi", "/", "6"}]}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "6"}], ",", 
        RowBox[{"5", 
         RowBox[{"Pi", "/", "6"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "Pi"}], "/", "6"}], "+", 
         RowBox[{"k", " ", 
          RowBox[{"Pi", "/", "8"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "2"}], ",", "10", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"t", "+", 
           RowBox[{"Pi", "/", "6"}]}], ")"}]}], "]"}]}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g6-2.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.743363145735557*^9, 3.743363245706307*^9}, {
  3.743363295139792*^9, 3.743363431767632*^9}, {3.74337538381852*^9, 
  3.743375431927723*^9}},ExpressionUUID->"03bd368d-e000-446e-8e9d-\
47ce82635a93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "6"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.743363194867179*^9, 3.743363248465501*^9}, {
   3.743363304966585*^9, 3.743363431982417*^9}, 3.743375384568596*^9, {
   3.743375423221383*^9, 
   3.743375432173766*^9}},ExpressionUUID->"fdbc87c1-3623-426e-9901-\
08e653d9cf0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", "\[Pi]"}], "6"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.743363194867179*^9, 3.743363248465501*^9}, {
   3.743363304966585*^9, 3.743363431982417*^9}, 3.743375384568596*^9, {
   3.743375423221383*^9, 
   3.743375432181592*^9}},ExpressionUUID->"de76d792-61cd-4a35-8ca8-\
dd5c6ae5a168"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
gSG2uRkjwYZus+57dGK9RpfvWAtGS4LOP5YOpxP8WgHND20YreLG7L8ZRSds
Qh7FKnVipFbcfuXIQzpRvf37l9A+jLQunvt69z86IR6REiw6gJGu4tzy4hQ6
UX/5QfSdXxiZRyjkbX5CJ1bE/Xvr6B+MPO2c2bNZ1P2smzJvczDylprS3JVD
J6KcNz5+w8XI92toiHMunZgPte/q4mEUtuOVYuMbOtH3Wm2TNB+jmD7wEi6k
E/3n1u+UG8YoKb6hbH8RtV6v0m4ojGD0fG7U/tknOqHSs4khPIbR67zgV12f
6UQzETvOofzOUXZOqpROzK5wN60cx+hbnVaS71eqvi8sKhwmMarzr2PlVdAJ
w5Q/v+WnMGpWt9/zp4pOlHiwDzZTHki502xeTye+vHevkp/BaMhcZuPdH3Ti
qnIQp5Dy8KLMi58a6cRFNz0zvVmMpt7vKeE30wknW7/RCsoCnlUSm9voRPKA
eLvOHFXvDTZ2tu10Yri9ei6P8rJWzsvoTjoxJBV3WnYeo5Wht6a/ddOJouNG
wt6U5bQlDWd76YS+ewO7grLicNqDv/upfl8mKSm1gJFy5m6m0y86IT+GL5tR
VrP+qpbMpBOba+1WBVPWkrAMaGDRictahtN5lHXLWA2L2XRiuj9jbTNloys+
Cvu5dCLGxukW9XyPzLeJnb+Iqfg0guVnKFv1pBRn8unE/39f+D8gMljH
       "]]},
     Annotation[#, "Charting`Private`Tag$15484#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"-", 
         RowBox[{"cos", "(", 
           RowBox[{"2", " ", 
             RowBox[{"(", 
               RowBox[{"t", "+", 
                 FractionBox["\[Pi]", "6"]}], ")"}]}], ")"}]}]}], HoldForm], 
    TraditionalForm],
  PlotRange->
   NCache[{{Rational[-1, 6] Pi, Rational[5, 6] Pi}, {-1, 
     1}}, {{-0.5235987755982988, 2.6179938779914944`}, {-1, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[Rational[-5, 12] Pi, -1.3089969389957472`], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "12"]}], TraditionalForm]}, {
      NCache[Rational[-1, 6] Pi, -0.5235987755982988], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "6"]}], TraditionalForm]}, {
      NCache[Rational[1, 12] Pi, 0.2617993877991494], 
      FormBox[
       FractionBox["\[Pi]", "12"], TraditionalForm]}, {
      NCache[Rational[1, 3] Pi, 1.0471975511965976`], 
      FormBox[
       FractionBox["\[Pi]", "3"], TraditionalForm]}, {
      NCache[Rational[7, 12] Pi, 1.8325957145940461`], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[5, 6] Pi, 2.6179938779914944`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], TraditionalForm]}, {
      NCache[Rational[13, 12] Pi, 3.4033920413889422`], 
      FormBox[
       FractionBox[
        RowBox[{"13", " ", "\[Pi]"}], "12"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.743363194867179*^9, 3.743363248465501*^9}, {
   3.743363304966585*^9, 3.743363431982417*^9}, 3.743375384568596*^9, {
   3.743375423221383*^9, 
   3.743375432234618*^9}},ExpressionUUID->"ff4468a5-d790-4f76-a728-\
f694ddc02b61"],

Cell[BoxData["\<\"g6-2.png\"\>"], "Output",
 CellChangeTimes->{{3.743363194867179*^9, 3.743363248465501*^9}, {
   3.743363304966585*^9, 3.743363431982417*^9}, 3.743375384568596*^9, {
   3.743375423221383*^9, 
   3.743375432336994*^9}},ExpressionUUID->"45529222-b301-4c9d-b73d-\
51743978b622"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"5", 
   RowBox[{"Pi", "/", "6"}]}], "-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "Pi"}], "/", "6"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.743375491080089*^9, 
  3.743375495122204*^9}},ExpressionUUID->"6ef5ea83-ec7d-4b2c-bbfb-\
bf9c32bf2076"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.743375495593169*^9},ExpressionUUID->"1c29190e-3ee8-401a-aab1-\
59ee5d7989e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{
   RowBox[{"-", "7"}], 
   RowBox[{"Pi", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.743422076777103*^9, 
  3.74342208231065*^9}},ExpressionUUID->"46fae79c-0361-4f84-9045-\
2acffa5c3583"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.743422079624518*^9, 
  3.743422082742025*^9}},ExpressionUUID->"18a28985-19b2-46a2-84dc-\
a1cde9c0fc77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], ",", 
    RowBox[{"Cos", "[", "t", "]"}], ",", 
    RowBox[{"Tan", "[", "t", "]"}]}], "}"}], "/.", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{
    RowBox[{"-", "Pi"}], "/", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.743423310425008*^9, 
  3.743423371476069*^9}},ExpressionUUID->"da9f2d69-9acd-4cca-8e35-\
0f626fd46377"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "0", ",", "ComplexInfinity"}], "}"}]], "Output",
 CellChangeTimes->{{3.74342333176309*^9, 
  3.743423371703416*^9}},ExpressionUUID->"c3a20b13-26fd-4efb-93b0-\
b0ec8b2df4d0"]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{Automatic, 215}, {Automatic, 50}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1468, 45, 136, "Input",ExpressionUUID->"ad9afe29-c988-4a62-9d43-bccf1b72efca"],
Cell[2051, 69, 1526, 37, 242, "Output",ExpressionUUID->"cbedbc6a-c845-40a8-8423-80d962fa118b"],
Cell[3580, 108, 271, 4, 34, "Output",ExpressionUUID->"fcb3af61-1aa2-4dce-a96e-86c4d5ae62f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3888, 117, 4998, 148, 346, "Input",ExpressionUUID->"b28297af-5897-48fd-9c59-1dce047bd601"],
Cell[8889, 267, 381, 7, 34, "Output",ExpressionUUID->"e93df091-34af-4768-95a3-65c74fdc847a"],
Cell[9273, 276, 2419, 58, 382, "Output",ExpressionUUID->"debd94ab-5404-4b7b-9bdf-41ba1ea1ae64"],
Cell[11695, 336, 366, 6, 34, "Output",ExpressionUUID->"0d185b85-9131-470a-92b7-e2556b6f5f60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12098, 347, 3252, 92, 241, "Input",ExpressionUUID->"693a7936-6024-4b22-9961-66976462aeae"],
Cell[15353, 441, 989, 26, 449, "Output",ExpressionUUID->"9c6a7e4f-012b-4851-b34a-7bdd89df7007"],
Cell[16345, 469, 300, 5, 34, "Output",ExpressionUUID->"d89273b0-5066-48f4-b23d-883ef708794b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16682, 479, 3276, 95, 262, "Input",ExpressionUUID->"085b212d-6c0e-4fb8-9886-0d8010455d56"],
Cell[19961, 576, 838, 24, 449, "Output",ExpressionUUID->"b5e91e2b-a71e-4cd2-b266-90f2b97838e1"],
Cell[20802, 602, 150, 3, 34, "Output",ExpressionUUID->"041649c6-865d-42e9-a9ef-592b59475773"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20989, 610, 514, 11, 52, "Input",ExpressionUUID->"b179fdae-78ea-46f4-ae95-ad7e2d04d32b"],
Cell[21506, 623, 25953, 481, 377, "Output",ExpressionUUID->"176ce48a-fde7-4011-a09e-6e8e801e14f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47496, 1109, 4940, 145, 325, "Input",ExpressionUUID->"4abaa242-34ba-406e-84be-a7b382be6df4"],
Cell[52439, 1256, 29549, 552, 363, "Output",ExpressionUUID->"f45c8035-6d1c-45a8-94a7-c647f7022938"],
Cell[81991, 1810, 29446, 532, 371, "Output",ExpressionUUID->"8c325722-3945-4140-aade-895b5e0fa4c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111474, 2347, 414, 12, 30, "Input",ExpressionUUID->"8dd2dc66-a82d-4dd2-a2c9-5dd50c607427"],
Cell[111891, 2361, 738, 22, 51, "Output",ExpressionUUID->"51c97134-6f99-4a72-8ab9-f92073bb243a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112666, 2388, 3101, 90, 241, "Input",ExpressionUUID->"4abb5b76-baba-45ed-8f1b-31878a0a1600"],
Cell[115770, 2480, 838, 24, 449, "Output",ExpressionUUID->"bd965a08-bf41-495a-b79a-6c244c05365c"],
Cell[116611, 2506, 145, 3, 34, "Output",ExpressionUUID->"42dc2b81-7910-4907-8d67-51c1fe3aec2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116793, 2514, 289, 7, 30, "Input",ExpressionUUID->"ba3acea6-f495-4fc1-9776-dbac68199ff8"],
Cell[117085, 2523, 220, 4, 34, "Output",ExpressionUUID->"3ae301d8-574f-4dc3-80b9-9e87a5d64f77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117342, 2532, 180, 4, 30, "Input",ExpressionUUID->"7017ef47-a6e1-4d9b-8a00-34e61f7bd6cb"],
Cell[117525, 2538, 131, 3, 34, "Output",ExpressionUUID->"8c48d4ea-3c61-40c3-a702-65f883cbb941"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117693, 2546, 306, 8, 30, "Input",ExpressionUUID->"ef6bd26d-aadc-471a-a274-c76ec49f4a6f"],
Cell[118002, 2556, 240, 5, 34, "Output",ExpressionUUID->"2237f222-00c4-4838-91bd-668d9de2b2f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118279, 2566, 1696, 51, 136, "Input",ExpressionUUID->"ff763460-4f1f-4695-8890-926e01de0a39"],
Cell[119978, 2619, 18476, 327, 251, "Output",ExpressionUUID->"be1fa98d-c4d9-42a9-b81a-e12423a119f4"],
Cell[138457, 2948, 266, 4, 34, "Output",ExpressionUUID->"f7319402-3e7e-4eb9-8b41-2bb4a59a2e40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138760, 2957, 1963, 59, 136, "Input",ExpressionUUID->"c4dee161-ed45-4737-80fb-04838e603704"],
Cell[140726, 3018, 18181, 322, 251, "Output",ExpressionUUID->"45227955-6372-455e-9c92-f2c7252b0f71"],
Cell[158910, 3342, 169, 3, 34, "Output",ExpressionUUID->"66821941-14fc-402f-90c6-201dcd8ffd1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159116, 3350, 1955, 59, 136, "Input",ExpressionUUID->"d9d7d093-c7b7-4868-bdd4-ee4491ec36ad"],
Cell[161074, 3411, 24772, 435, 251, "Output",ExpressionUUID->"a75279ba-8439-4e1f-bac7-c04043e2cfc9"],
Cell[185849, 3848, 188, 3, 34, "Output",ExpressionUUID->"32f87841-e625-4fe7-bfcd-caac932cb3d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186074, 3856, 1965, 59, 136, "Input",ExpressionUUID->"b675defa-7a52-4f65-a2d4-a18f1c7e6037"],
Cell[188042, 3917, 24722, 433, 269, "Output",ExpressionUUID->"2229c64d-704f-4883-a3a2-fa0033bd84f6"],
Cell[212767, 4352, 192, 3, 34, "Output",ExpressionUUID->"b33ac562-0b4f-4af1-8d08-118c3dffc947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212996, 4360, 2253, 65, 136, "Input",ExpressionUUID->"8f7d86c6-394e-4cab-8859-5b72fb12184b"],
Cell[215252, 4427, 8449, 179, 256, "Output",ExpressionUUID->"615c9c17-2157-486e-9706-3b60a47bb3ab"],
Cell[223704, 4608, 292, 5, 34, "Output",ExpressionUUID->"6f98fc78-ff33-4bef-b6dd-2c82571dc055"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224033, 4618, 357, 10, 30, "Input",ExpressionUUID->"0d8c25fa-48d1-45cf-a0fc-d03033578b8e"],
Cell[224393, 4630, 282, 8, 50, "Output",ExpressionUUID->"f0cefaef-ae3d-43f0-8473-b1b7a4569f63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224712, 4643, 1935, 59, 136, "Input",ExpressionUUID->"4acf411b-3c2b-48c2-b684-b0cd8246d645"],
Cell[226650, 4704, 11721, 224, 268, "Output",ExpressionUUID->"fe2a0da8-b22e-4026-a14d-78d0a133a007"],
Cell[238374, 4930, 193, 4, 34, "Output",ExpressionUUID->"7c07b5a7-eddc-4c01-98de-958e21bd8652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238604, 4939, 247, 7, 30, "Input",ExpressionUUID->"b0b90cb1-bc4b-4307-8be1-8379f21197e9"],
Cell[238854, 4948, 179, 5, 51, "Output",ExpressionUUID->"1daae7d0-e240-47a9-a5ad-131a972657f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239070, 4958, 2217, 65, 157, "Input",ExpressionUUID->"f2d0c230-c70d-4f5e-8df6-e189df988d43"],
Cell[241290, 5025, 29127, 508, 251, "Output",ExpressionUUID->"65c4c93b-8a0f-44cd-b879-1725c40d5465"],
Cell[270420, 5535, 192, 3, 34, "Output",ExpressionUUID->"e3718c78-9e7a-40eb-9153-6e87f788f647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270649, 5543, 2708, 75, 220, "Input",ExpressionUUID->"36be2f75-ac8d-4894-9f0c-aee91dbe408f"],
Cell[273360, 5620, 22021, 421, 377, "Output",ExpressionUUID->"68f7cc78-7d21-4c78-ad9c-03ec87358440"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295418, 6046, 2534, 75, 178, "Input",ExpressionUUID->"69509ce0-70b5-49c9-91a1-6ff03e3d612b"],
Cell[297955, 6123, 17033, 329, 365, "Output",ExpressionUUID->"591dc185-a248-4ccd-a281-a98dd5933c47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315025, 6457, 2487, 73, 178, "Input",ExpressionUUID->"846568e6-ee54-4e7b-b987-76b308250647"],
Cell[317515, 6532, 26374, 484, 377, "Output",ExpressionUUID->"a98b00d0-1651-4aa9-ab26-1152d51d1e43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343926, 7021, 2533, 75, 178, "Input",ExpressionUUID->"21705fef-b6c8-4a01-a32a-4b539faef7d3"],
Cell[346462, 7098, 30114, 545, 377, "Output",ExpressionUUID->"d1512c34-28d3-44bc-864a-a4d338745470"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376613, 7648, 4484, 132, 346, "Input",ExpressionUUID->"da1fc655-1eb2-4b8a-a0b8-59e51d2f5f88"],
Cell[381100, 7782, 240, 5, 34, "Output",ExpressionUUID->"bcf627c6-c332-45f2-b272-3d1621384b5f"],
Cell[381343, 7789, 1970, 50, 382, "Output",ExpressionUUID->"abdd5c76-6dfb-40ad-9ed5-f8cea829c601"],
Cell[383316, 7841, 228, 4, 34, "Output",ExpressionUUID->"b37253dc-d95d-4cfd-a6f0-9fd861fda03f"]
}, Open  ]],
Cell[383559, 7848, 155, 3, 30, "Input",ExpressionUUID->"7ad8bc4f-2893-4549-a075-3f15f0d99cb1"],
Cell[CellGroupData[{
Cell[383739, 7855, 2637, 83, 199, "Input",ExpressionUUID->"03bd368d-e000-446e-8e9d-47ce82635a93"],
Cell[386379, 7940, 400, 10, 48, "Output",ExpressionUUID->"fdbc87c1-3623-426e-9901-08e653d9cf0b"],
Cell[386782, 7952, 405, 10, 51, "Output",ExpressionUUID->"de76d792-61cd-4a35-8ca8-dd5c6ae5a168"],
Cell[387190, 7964, 11183, 218, 271, "Output",ExpressionUUID->"ff4468a5-d790-4f76-a728-f694ddc02b61"],
Cell[398376, 8184, 292, 5, 34, "Output",ExpressionUUID->"45529222-b301-4c9d-b73d-51743978b622"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398705, 8194, 286, 9, 30, "Input",ExpressionUUID->"6ef5ea83-ec7d-4b2c-bbfb-bf9c32bf2076"],
Cell[398994, 8205, 134, 3, 34, "Output",ExpressionUUID->"1c29190e-3ee8-401a-aab1-59ee5d7989e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399165, 8213, 243, 7, 30, "Input",ExpressionUUID->"46fae79c-0361-4f84-9045-2acffa5c3583"],
Cell[399411, 8222, 154, 3, 34, "Output",ExpressionUUID->"18a28985-19b2-46a2-84dc-a1cde9c0fc77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399602, 8230, 403, 12, 30, "Input",ExpressionUUID->"da9f2d69-9acd-4cca-8e35-0f626fd46377"],
Cell[400008, 8244, 241, 6, 34, "Output",ExpressionUUID->"c3a20b13-26fd-4efb-93b0-b0ec8b2df4d0"]
}, Open  ]]
}
]
*)

