(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    853235,      17856]
NotebookOptionsPosition[    838304,      17619]
NotebookOutlinePosition[    838729,      17636]
CellTagsIndexPosition[    838686,      17633]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellLabel->
  "In[477]:=",ExpressionUUID->"53ac9e73-d89c-48b2-b0b1-98dc367cbbcc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"1.15", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}], "}"}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4.5"}], ",", "4.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesStyle", "->", 
      RowBox[{"Directive", "[", "16", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<point.png\>\"", ",", "%"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.681547336078837*^9, 3.6815475575851393`*^9}, {
   3.8067024133537135`*^9, 3.8067024244273815`*^9}, 
   3.897171849395097*^9},ExpressionUUID->"f9f63efc-f772-443a-97c6-\
9ecd4fa48fe8"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{4., -1.}, {4., -1.}}]}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, ArrowBox[{{0, 0}, {4.6, -1.15}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.5, 4.5}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6815473715512543`*^9, 3.6815474954436693`*^9}, 
   3.681547558056674*^9, 3.681586347674407*^9, 3.6815876325651827`*^9, 
   3.8067024253071003`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c4425255-21d2-4642-810f-2e4b5a49f720"],

Cell[BoxData["\<\"point.png\"\>"], "Output",
 CellChangeTimes->{{3.6815473715512543`*^9, 3.6815474954436693`*^9}, 
   3.681547558056674*^9, 3.681586347674407*^9, 3.6815876325651827`*^9, 
   3.806702426835805*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"582181e3-7773-4208-a433-48aedea52b30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"121", "*", "Degree"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "0.6"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", "0.6"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Theta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<circle.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68154762664086*^9, 3.68154788092201*^9}, {
  3.681547920678978*^9, 3.68154811676081*^9}, {3.806702521882231*^9, 
  3.806702610543511*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2794ecda-d096-4ca3-9fa5-724e2f71cd24"],

Cell[BoxData[
 RowBox[{"121", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.681547677407929*^9, 3.681547733814436*^9}, {
  3.681547778611038*^9, 3.681547833025559*^9}, {3.6815478678438873`*^9, 
  3.681547881352007*^9}, {3.681547925102397*^9, 3.681548043271468*^9}, {
  3.681548090540347*^9, 3.681548116962864*^9}, {3.8067025248210697`*^9, 
  3.8067025607871685`*^9}, {3.806702591276548*^9, 3.806702610971212*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"40226fec-e339-4c07-bac4-83682225ad0d"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{-2.0601522996402166`, 
       3.4286692028084493`}, {-2.0601522996402166`, 
       3.4286692028084493`}}]}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{}, {
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{4., 0.}, {4., 0.}}]}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-3.175190374550271, 3.685836503510562}], 
   ArrowBox[NCache[{{0, 0}, {(-5) Sin[31 Degree], 5 Cos[31 Degree]}}, {{0, 
      0}, {-2.575190374550271, 4.285836503510562}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 121 Degree}, {0, 2.111848394913139}]], 
   InsetBox[
    StyleBox[
     RowBox[{"121", " ", "\[Degree]"}],
     StripOnInput->False,
     FontSize->Large], {0.9924235601034672, 1.0703556959398997}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681547677407929*^9, 3.681547733814436*^9}, {
  3.681547778611038*^9, 3.681547833025559*^9}, {3.6815478678438873`*^9, 
  3.681547881352007*^9}, {3.681547925102397*^9, 3.681548043271468*^9}, {
  3.681548090540347*^9, 3.681548116962864*^9}, {3.8067025248210697`*^9, 
  3.8067025607871685`*^9}, {3.806702591276548*^9, 3.8067026110975513`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"0a66d6ee-698c-4afc-a2b5-cd8ebbb1347b"],

Cell[BoxData["\<\"circle.png\"\>"], "Output",
 CellChangeTimes->{{3.681547677407929*^9, 3.681547733814436*^9}, {
  3.681547778611038*^9, 3.681547833025559*^9}, {3.6815478678438873`*^9, 
  3.681547881352007*^9}, {3.681547925102397*^9, 3.681548043271468*^9}, {
  3.681548090540347*^9, 3.681548116962864*^9}, {3.8067025248210697`*^9, 
  3.8067025607871685`*^9}, {3.806702591276548*^9, 3.806702611375291*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"e3660767-dfb8-41b2-bb85-8cb398077040"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}], ",", 
           RowBox[{"10", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.5"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Alpha]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "0.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"10", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"4", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Beta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "0.3"}], ",", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "1.5"}]}], 
        "}"}]}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<triangle1.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.681586351403664*^9, 3.681586385226166*^9}, {
  3.681586417420066*^9, 3.681586554954699*^9}, {3.681586643550521*^9, 
  3.681586768415415*^9}, {3.6815874667976017`*^9, 
  3.6815876419539223`*^9}},ExpressionUUID->"87b164fa-8581-4b27-a36e-\
2a39c94cb70f"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    TagBox[
     PolygonBox[
      NCache[{{0, 0}, {4, 0}, {4, 2 21^Rational[1, 2]}}, {{0, 0}, {4, 0}, {
        4, 9.16515138991168}}]],
     "Triangle"]}, 
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    RectangleBox[{3.5, 0}, {4, 0.5}]}, InsetBox[
    StyleBox["\[Alpha]",
     StripOnInput->False,
     FontSize->Large], {0.8, 0.5}], InsetBox[
    StyleBox["10",
     StripOnInput->False,
     FontSize->Large], {1.5, 5}], InsetBox[
    StyleBox["4",
     StripOnInput->False,
     FontSize->Large], {2, -0.5}], InsetBox[
    StyleBox["\[Beta]",
     StripOnInput->False,
     FontSize->Large], {3.7, 7.66515138991168}]}]], "Output",
 CellChangeTimes->{{3.681586491655265*^9, 3.681586530513294*^9}, 
   3.681586605262847*^9, {3.6815866570435038`*^9, 3.681586768598741*^9}, {
   3.6815875245729523`*^9, 
   3.681587643879759*^9}},ExpressionUUID->"ce76b3f2-311f-46c8-aca7-\
26f0710301b7"],

Cell[BoxData["\<\"triangle1.png\"\>"], "Output",
 CellChangeTimes->{{3.681586491655265*^9, 3.681586530513294*^9}, 
   3.681586605262847*^9, {3.6815866570435038`*^9, 3.681586768598741*^9}, {
   3.6815875245729523`*^9, 
   3.68158764396809*^9}},ExpressionUUID->"76e85a28-e577-4bc9-a7eb-\
e4ffb51c06a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"7", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcSin", "[", "1", "]"}], "]"}]}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}], ",", 
           RowBox[{"10", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.5"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Alpha]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "0.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"10", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"4", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Beta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "0.3"}], ",", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "1.5"}]}], 
        "}"}]}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<triangle2.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6815877406357727`*^9, 3.681587740706087*^9}, {
  3.681587954265313*^9, 
  3.681588002593586*^9}},ExpressionUUID->"03aa7a81-9e40-49ed-96b0-\
011e158ca73a"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    TagBox[
     PolygonBox[
      NCache[{{0, 0}, {0, 0}, {4, 2 21^Rational[1, 2]}}, {{0, 0}, {0, 0}, {
        4, 9.16515138991168}}]],
     "Triangle"]}, 
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    RectangleBox[{3.5, 0}, {4, 0.5}]}, InsetBox[
    StyleBox["\[Alpha]",
     StripOnInput->False,
     FontSize->Large], {0.8, 0.5}], InsetBox[
    StyleBox["10",
     StripOnInput->False,
     FontSize->Large], {1.5, 5}], InsetBox[
    StyleBox["4",
     StripOnInput->False,
     FontSize->Large], {2, -0.5}], InsetBox[
    StyleBox["\[Beta]",
     StripOnInput->False,
     FontSize->Large], {3.7, 7.66515138991168}]}]], "Output",
 CellChangeTimes->{
  3.681588003641938*^9},ExpressionUUID->"16f9a731-7f7d-47b4-bacb-\
73932b7e2170"],

Cell[BoxData["\<\"triangle2.png\"\>"], "Output",
 CellChangeTimes->{
  3.681588003732849*^9},ExpressionUUID->"03449a16-808e-4261-b7e8-\
257563a2f1ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682166663813621*^9, 3.6821666936348457`*^9}, {
   3.68216674389616*^9, 3.682166773654944*^9}, {3.6821668514054413`*^9, 
   3.682166860218754*^9}, {3.682166903897148*^9, 3.682166957918343*^9}, {
   3.6821670782573566`*^9, 3.682167096951165*^9}, 
   3.682167162543933*^9},ExpressionUUID->"f685556c-4208-4eb6-b4de-\
f07531c499a6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
rbTYIX5mCn1SNx0jQkex2OPO77VqUyhLrU9y9RtFvTNa8RTdKXyu8SbAy3EU
bSzt776+MYVqFbbvrFRG8dLOd14fn0+hea5EgSttBI2OfzlZ830K78c6TmdJ
jGBJ+NdX2/SouFPkR1eN8AgOcBjVsV0jvVHy5vXOjSN4nvEpdfwGWVfXkmwm
/wzjq6GwG8HOVPRx3p3dWjWMc1wG2l/CqajNT88YNBrGdWJBqh+HqOi75smn
Xp8h7N1pbpBqQcO3N7O4LR8MoZZR49MaaxoK/fR2nbUewg+hDht7HWioILfg
+lt7COnXkkzoXjTkCV2w7RIkfz+57C7G0fD0nPq+fONBNI+pz947RsOkJ+Ma
h+L78f2FyLnxq3SM282/Q+plP3afOHEj2YyO8uwCeQfv9+PUzJbRu5Z0dP9p
ZrX+JNmnquMLg450FNxw6Upgex/yvTC1dg2go0KGrKQtWx9Ouywr+pN9P7Vh
v3nzlR4sinYSkzzAwNU+OU6bTvWg2JLsNRlJBu4Vk12jv7cH7z1UtZWRYaCA
igPWEN0IixbSu08zcMMmS05Lz270U3myMkufgXmvNNg+J3XhppjfVV+fMbB/
h5Km3u8OnBfkc2IZYGDTJQu3JwMdZN5X2LhvlIHvXlVuiCvvQFEhtc9KFAbu
yJt2GfHrQMHcpcL7swxUzGrq3berA+VrFo09OZioPJCQ03O+Hd8eMSvwPMhE
FdtH3PzBraiUF/1v1pGJ5nuOyGS7tqKOzZcmvQdMLD8neU/HuBU1lCgP0p8w
Md6R65DH/lYcTXI1MvBhYpSztFtafgvKf005YhTGxNuZPtKGA82oSHyzP57P
RPVbLp2cu5vwOt8/H51f5PO2cKX0rmxChyJDzpOLTOTOWHFPr6ERc/nTDgr/
Y+KlvU//ueo2Iu/CqxvNHGQOmG42tDb7jg9985y6+ck962gavviwHvP3X9b2
liJzj7iiicSperR2OF21KEOgwIdFmyts9eizTqrlljyBlMrs1IjndWjwYDJF
/BSBu8y6ZLuDarEw9qLFVXVyL/7axL87uQa9vh3eonuD3Lv+89dm7tXgrtL6
VC3SOyPT9frypGpIP4eWc3fIXL+U9kU+txpFkgdytt8nUGtwTnq+rArnIytn
7z0isGDgccK9zgpcYmx+kxxI4Dd9u8XJsAoULC4Mlia9U+/2tNVVwwq0ifq+
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
8H8AtM9G1A==
      "]]}}, {}, {{{
      LineBox[{Scaled[{0, 0}, {1.4142135479610376`, 0.}], 
        Scaled[{0.006, 0.}, {1.4142135479610376`, 0.}]}], 
      LineBox[{Scaled[{0, 0}, {1.224744858910381, 0.7071067739805188}], 
        Scaled[{0.005196152422706632, 0.003}, {1.224744858910381, 
         0.7071067739805188}]}], 
      LineBox[{Scaled[{0, 0}, {0.7071067739805188, 1.224744858910381}], 
        Scaled[{0.003, 0.005196152422706632}, {0.7071067739805188, 
         1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {0., 1.4142135479610376`}], 
        Scaled[{0., 0.006}, {0., 1.4142135479610376`}]}], 
      LineBox[{Scaled[{0, 0}, {-0.7071067739805188, 1.224744858910381}], 
        Scaled[{-0.003, 0.005196152422706632}, {-0.7071067739805188, 
         1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {-1.224744858910381, 0.7071067739805188}], 
        Scaled[{-0.005196152422706632, 0.003}, {-1.224744858910381, 
         0.7071067739805188}]}], 
      LineBox[{Scaled[{0, 0}, {-1.4142135479610376`, 0.}], 
        Scaled[{-0.006, 0.}, {-1.4142135479610376`, 0.}]}], 
      LineBox[{Scaled[{0, 0}, {-1.224744858910381, -0.7071067739805188}], 
        Scaled[{-0.005196152422706632, -0.003}, {-1.224744858910381, \
-0.7071067739805188}]}], 
      LineBox[{Scaled[{0, 0}, {-0.7071067739805188, -1.224744858910381}], 
        Scaled[{-0.003, -0.005196152422706632}, {-0.7071067739805188, \
-1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {0., -1.4142135479610376`}], 
        Scaled[{0., -0.006}, {0., -1.4142135479610376`}]}], 
      LineBox[{Scaled[{0, 0}, {0.7071067739805188, -1.224744858910381}], 
        Scaled[{0.003, -0.005196152422706632}, {
         0.7071067739805188, -1.224744858910381}]}], 
      LineBox[{Scaled[{0, 0}, {1.224744858910381, -0.7071067739805188}], 
        Scaled[{0.005196152422706632, -0.003}, {
         1.224744858910381, -0.7071067739805188}]}]}, 
     LineBox[{}], {
      InsetBox["0", Offset[{8, 0}, {1.4142135479610376, 0.}], {-1, 0},
       Background->Automatic], InsetBox[
       FractionBox["\[Pi]", "6"], NCache[
       Offset[{4 3^Rational[1, 2], 4}, {1.224744858910381, 
         0.7071067739805188}], 
        Offset[{6.928203230275509, 4}, {1.224744858910381, 
         0.7071067739805188}]], 
       NCache[{Rational[-1, 2] 3^Rational[1, 2], 
         Rational[-1, 2]}, {-0.8660254037844386, -0.5}],
       Background->Automatic], InsetBox[
       FractionBox["\[Pi]", "3"], NCache[
       Offset[{4, 4 3^Rational[1, 2]}, {0.7071067739805188, 
         1.224744858910381}], 
        Offset[{4, 6.928203230275509}, {0.7071067739805188, 
         1.224744858910381}]], 
       NCache[{Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.4142135479610376}], {0, -1},
       
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
       Offset[{-4, 4 3^Rational[1, 2]}, {-0.7071067739805188, 
         1.224744858910381}], 
        Offset[{-4, 6.928203230275509}, {-0.7071067739805188, 
         1.224744858910381}]], 
       NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        0.5, -0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], NCache[
       Offset[{(-4) 3^Rational[1, 2], 4}, {-1.224744858910381, 
         0.7071067739805188}], 
        Offset[{-6.928203230275509, 4}, {-1.224744858910381, 
         0.7071067739805188}]], 
       NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
        0.8660254037844386, -0.5}],
       Background->Automatic], 
      InsetBox["\[Pi]", Offset[{-8, 0}, {-1.4142135479610376, 0.}], {1, 0},
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "6"], NCache[
       Offset[{(-4) 
          3^Rational[1, 2], -4}, {-1.224744858910381, -0.7071067739805188}], 
        Offset[{-6.928203230275509, -4}, {-1.224744858910381, \
-0.7071067739805188}]], 
       NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
        0.8660254037844386, 0.5}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
       Offset[{-4, (-4) 
          3^Rational[1, 2]}, {-0.7071067739805188, -1.224744858910381}], 
        Offset[{-4, -6.928203230275509}, {-0.7071067739805188, \
-1.224744858910381}]], 
       NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
        0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], 
       Offset[{0, -8}, {0., -1.4142135479610376}], {0, 1},
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
       Offset[{4, (-4) 3^Rational[1, 2]}, {
         0.7071067739805188, -1.224744858910381}], 
        Offset[{4, -6.928203230275509}, {
         0.7071067739805188, -1.224744858910381}]], 
       NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        0.8660254037844386}],
       Background->Automatic], InsetBox[
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "6"], NCache[
       Offset[{4 3^Rational[1, 2], -4}, {
         1.224744858910381, -0.7071067739805188}], 
        Offset[{6.928203230275509, -4}, {
         1.224744858910381, -0.7071067739805188}]], 
       NCache[{Rational[-1, 2] 3^Rational[1, 2], Rational[
         1, 2]}, {-0.8660254037844386, 0.5}],
       Background->Automatic]}, 
     CircleBox[{0, 0}, 1.4142135479610376, 
      NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821666822307796`*^9, 3.6821666942373877`*^9}, {
   3.682166744621258*^9, 3.682166774225024*^9}, 3.682166861058859*^9, {
   3.682166904807866*^9, 3.682166958487546*^9}, 
   3.682167101609441*^9},ExpressionUUID->"ca37635c-5943-4dba-950b-\
7ec10761c3b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"11", 
    RowBox[{"Pi", "/", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", "/", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"1.5", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"1.5", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<ang1.png\>\"", ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "8"}], 
    RowBox[{"Pi", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"1.5", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{"1.5", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ang2.png\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.682166723856468*^9, 3.6821667238573303`*^9}, {
  3.6821671239741507`*^9, 3.6821671849154167`*^9}, {3.6821672470504208`*^9, 
  3.682167509283811*^9}, {3.682167558524247*^9, 
  3.6821675908861237`*^9}},ExpressionUUID->"ac11b0c8-ba1f-4f3e-9e15-\
bd678ca0c142"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.3864881611594029`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.2007339696104156`, 0.6932440805797014}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.6932440805797014, 1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., 1.3864881611594029`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.6932440805797014, 1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.2007339696104156`, 0.6932440805797014}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.3864881611594029`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.2007339696104156`, -0.6932440805797014}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.6932440805797014, -1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0., -1.3864881611594029`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.6932440805797014, -1.2007339696104156`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         1.2007339696104156`, -0.6932440805797014}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
ok7GP03HHxrtm8H1qZWVvp/dGNdhm2GkNINC7CwxWtrdKGRWGfPeaQbLxG8q
7f/ViRN9i2sFP2ew26JlZmS0k/hO+bOjf2ZwhVehNKipE/sXd51kYphFP0Xq
ylBMJ/6uc96vtH0Wz9y8Ss+u1YlHtCzLXh+bxem7akmVnzrwsod2tcT9WVQK
OPe44kw7MmkqxEu1z6LjVqqJmVg7eorqTjdRZjFcqPU36/Z2LLSK8bkzNIsK
+lVc4tQ2bJ2Unnw5N4tb2h3v7fJuQwNW5SRHpjksjW/tKkwm+k653unQk3PI
fNvlQizRF8/z9v6SiZxDc80Fkx+BTajQUWJaEDOHPfTa3yVuN+G3tzmsMsnE
OkXig91aI/K8WxkWzJ1D04dnjhw43ogHv/Q6JLbM4VKF5ApfYD1eoVWSP22a
x4H/UiKTtWqQ8lCgmeP2PF6UFL9awluDR+WHuTvvzyOt9cNE2Vg1uh7ZJPne
fB75q7oyg19UIz9518yv5/PoKXj/1JO4Kiy2PfLzpe88umx9pEn3XwX2fXuy
zahwHjXma6nFuxEjGY4K6bMv4Bn7aJk9+aUY7T+hscq5gPyOdyXuXyrF5B8a
dSE7FvCBSrh9jGsJcj62q6jYs4Da2iTn7oli3M4X9pAsvoARYelsZ5IKMNkt
L3r28gLK8WzKDt+ZjT3OQsIFHxbwbNqH7oK0LPwikMEeF76AnWpOsng2C0U9
jNk8oxZwpmUHk6tlJl5RFz6jlLCAb1w99aq80tHV1EDhUc4C3t18JUSxLxHd
+BtHItsXsF02YX9QZiBqlF5Qf85MwxcHdhhO9bzH7d54e3wLDRf8o/Yk0/nh
csulM5rbaOiVRnb//skdGzLuyP7joaGhaIPLEFihvU7BJLcwDTVT5+fv/3CD
R9mD8kMKNER/pjnlDC9iTje2JJ+hoQo33+shc184zSWiXKtEQ2uzk1MpNoHg
E2xXEKhGw/OLf+MDfoTD7erFjDZd4vc3dAYMXeOBPWKqa9KUhgc9XyaffJYA
FYXHqA8e0ZB1WmvmLDGX95kkWY6a03B98nJv//lk2C2VPV/yhIZ/jF+N7tqZ
BrelV3UFHWgYwkwtv8yaDn37ov/dfklD++mPMoV/0yFhNoH3kzMNl0sKqPTU
DDgz9caZ7g0NpedO3VLtywKXF3Q0Cx8ajoFTvZd+NsA/+txnvjSUCVrxHmvJ
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
omQ5hv8HWM8irg==
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {1.3864881611594029`, 0.}], 
         Scaled[{0.006, 0.}, {1.3864881611594029`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {1.2007339696104156`, 0.6932440805797014}], 
         Scaled[{0.005196152422706632, 0.003}, {1.2007339696104156`, 
          0.6932440805797014}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.6932440805797014, 1.2007339696104156`}], 
         Scaled[{0.003, 0.005196152422706632}, {0.6932440805797014, 
          1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., 1.3864881611594029`}], 
         Scaled[{0., 0.006}, {0., 1.3864881611594029`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.6932440805797014, 1.2007339696104156`}], 
         Scaled[{-0.003, 0.005196152422706632}, {-0.6932440805797014, 
          1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.2007339696104156`, 0.6932440805797014}], 
         Scaled[{-0.005196152422706632, 0.003}, {-1.2007339696104156`, 
          0.6932440805797014}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.3864881611594029`, 0.}], 
         Scaled[{-0.006, 0.}, {-1.3864881611594029`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.2007339696104156`, -0.6932440805797014}], 
         Scaled[{-0.005196152422706632, -0.003}, {-1.2007339696104156`, \
-0.6932440805797014}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.6932440805797014, -1.2007339696104156`}], 
         Scaled[{-0.003, -0.005196152422706632}, {-0.6932440805797014, \
-1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0., -1.3864881611594029`}], 
         Scaled[{0., -0.006}, {0., -1.3864881611594029`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.6932440805797014, -1.2007339696104156`}], 
         Scaled[{0.003, -0.005196152422706632}, {
          0.6932440805797014, -1.2007339696104156`}]}], 
       LineBox[{
        Scaled[{0, 0}, {1.2007339696104156`, -0.6932440805797014}], 
         Scaled[{0.005196152422706632, -0.003}, {
          1.2007339696104156`, -0.6932440805797014}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {1.3864881611594029, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "6"], NCache[
        Offset[{4 3^Rational[1, 2], 4}, {1.2007339696104156`, 
          0.6932440805797014}], 
         Offset[{6.928203230275509, 4}, {1.2007339696104156`, 
          0.6932440805797014}]], 
        NCache[{Rational[-1, 2] 3^Rational[1, 2], 
          Rational[-1, 2]}, {-0.8660254037844386, -0.5}],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "3"], NCache[
        Offset[{4, 4 3^Rational[1, 2]}, {0.6932440805797014, 
          1.2007339696104156`}], 
         Offset[{4, 6.928203230275509}, {0.6932440805797014, 
          1.2007339696104156`}]], 
        NCache[{Rational[-1, 2], Rational[-1, 2] 
          3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.3864881611594029}], {0, -1},
        
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, 4 3^Rational[1, 2]}, {-0.6932440805797014, 
          1.2007339696104156`}], 
         Offset[{-4, 6.928203230275509}, {-0.6932440805797014, 
          1.2007339696104156`}]], 
        NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
         0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "6"], NCache[
        Offset[{(-4) 3^Rational[1, 2], 4}, {-1.2007339696104156`, 
          0.6932440805797014}], 
         Offset[{-6.928203230275509, 4}, {-1.2007339696104156`, 
          0.6932440805797014}]], 
        NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
         0.8660254037844386, -0.5}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-1.3864881611594029, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "6"], NCache[
        Offset[{(-4) 
           3^Rational[
             1, 2], -4}, {-1.2007339696104156`, -0.6932440805797014}], 
         Offset[{-6.928203230275509, -4}, {-1.2007339696104156`, \
-0.6932440805797014}]], 
        NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[1, 2]}, {
         0.8660254037844386, 0.5}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, (-4) 
           3^Rational[1, 2]}, {-0.6932440805797014, -1.2007339696104156`}], 
         Offset[{-4, -6.928203230275509}, {-0.6932440805797014, \
-1.2007339696104156`}]], 
        NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], 
        Offset[{0, -8}, {0., -1.3864881611594029}], {0, 1},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
        Offset[{4, (-4) 3^Rational[1, 2]}, {
          0.6932440805797014, -1.2007339696104156`}], 
         Offset[{4, -6.928203230275509}, {
          0.6932440805797014, -1.2007339696104156`}]], 
        NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"11", " ", "\[Pi]"}], "6"], NCache[
        Offset[{4 3^Rational[1, 2], -4}, {
          1.2007339696104156`, -0.6932440805797014}], 
         Offset[{6.928203230275509, -4}, {
          1.2007339696104156`, -0.6932440805797014}]], 
        NCache[{Rational[-1, 2] 3^Rational[1, 2], Rational[
          1, 2]}, {-0.8660254037844386, 0.5}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 1.3864881611594029, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[{{0, 0}, {1.299038105676658, -0.75}}], 
   ArrowBox[{{0, 0}, {1.5, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821671475768223`*^9, 3.682167185218712*^9}, {
   3.682167255334141*^9, 3.682167442418434*^9}, 3.6821674747325153`*^9, 
   3.682167510242432*^9, {3.6821675589512444`*^9, 
   3.682167591093087*^9}},ExpressionUUID->"1e9f74fc-9aad-410a-b0da-\
4d9dcfb0aeca"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1.4508046190278983`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {0.7254023095139491, 1.2564336560059641`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7254023095139491, 1.2564336560059641`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-1.4508046190278983`, 0.}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {-0.7254023095139491, -1.2564336560059641`}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {
         0.7254023095139491, -1.2564336560059641`}}]}}, {}}, {}, {{}, {}, 
     {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1: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
aoh77uEoWkJFI1PpdMv91eBBl2uqaKCiZPt7m6TnVUBK3v+2pImKd7ZUq5TL
VoGoXvZMQisV9aTXKQ1uq4LtirYnVbqpuH+XkeSB5Ergin1QFUOn4qLygfqR
XxXAJSsizDlKRZFS8Y37yiogzW5G9/k4FccynlzS962Ad6vR6bRpKuqOGN5Z
OFMBWfIJ+5gXiPNbK6Vpvy2HP7d/3OpepOL5d5sVS2+UwxPOFM/Iv1RsZwrP
PCZSDu4mF++u/qMiPb62RKi0DIz+bBv1WKPiNX8mr5BvZTA08DiEg7kXf+tf
Ie17WgbfbqR5UNf3YpbQ2H8XWcsgQeZs+8GNvTjZ+H5vb3cpLN40vae3qRfD
27N/vE0shexh3OXK0oufNX3X739XCm1vvwiHbe7FahLnvRa1UlBsuG0ataUX
LZ4LFLqIloJCpje3H2sv6u/wUrv0uwTmjFJ1L2/rxVAPrietfiXQ4VvKs5Gt
F8UsfgjFGpTAxeXsY6kE8yikGzvIlgB5TjH3Cnsv9rEOmjxmK4GibsGMFoIL
Yqvhel8xTPBwHLy6vRd/+i3NQ2oxnF6Z4Usj+AVjOvHsh2LY3ufzedOOXozU
FnKQ1SiGt6s0NxWC+/9NuysdKAYZx4ZddgQ3PMsbvbtUBBVvrskHEqzj2Zhs
WlMEtm3/rfwkeGOB6cq3YGKvvbnrQQzBv8yaR4teFgGfo6u+N8FmpgJf/ygW
gUhDq4AxwSe/62+R5i4Ce02xj6cJxiF8ZTtMhpEtiXEzRHzlNyQGq7LJ8DK3
lC+YYHZedVvpL2S46ObpKkvwA2/7XTGPyHCg9vjGGuK8l4tTW0TOkmFZoOHz
//NhHt1CjmInw5PHPuIFRL447CLoOpUIlq1Z1D0E/53YvPbRDEFlwCLZjMj3
YVWHhUIhhOjTnFHZW3vx+1LoIkt1IfgVtZOnifo4re+T0LMohC3BfFt3Euy7
Lja3TrgQmhKt5c8Q9a3/yeXRaVUAL9d0jp4g6h8fJyxuu7cAjjTderKH0Ifh
IfdiyYZ8SIk8m1pD6Im31/h75f58CEg/0ui2rhcv9fw8lNaUB8MPjqnKE/or
Ka9+mPQ2D7iuJz8wX6XigMBDjb62XEjZ8nj93xUqxtyYeMb9IRe2nQ/ge7VM
RYVu72JtqVy49udi7AlC/z0P7McOOOfAt1zJI+/+UNEv9SRLvHQOSHywksn/
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
       "]]}}, {}, {{{
       LineBox[{
        Scaled[{0, 0}, {1.4508046190278983`, 0.}], 
         Scaled[{0.006, 0.}, {1.4508046190278983`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7254023095139491, 1.2564336560059641`}], 
         Scaled[{0.003, 0.005196152422706632}, {0.7254023095139491, 
          1.2564336560059641`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7254023095139491, 1.2564336560059641`}], 
         Scaled[{-0.003, 0.005196152422706632}, {-0.7254023095139491, 
          1.2564336560059641`}]}], 
       LineBox[{
        Scaled[{0, 0}, {-1.4508046190278983`, 0.}], 
         Scaled[{-0.006, 0.}, {-1.4508046190278983`, 0.}]}], 
       LineBox[{
        Scaled[{0, 0}, {-0.7254023095139491, -1.2564336560059641`}], 
         Scaled[{-0.003, -0.005196152422706632}, {-0.7254023095139491, \
-1.2564336560059641`}]}], 
       LineBox[{
        Scaled[{0, 0}, {0.7254023095139491, -1.2564336560059641`}], 
         Scaled[{0.003, -0.005196152422706632}, {
          0.7254023095139491, -1.2564336560059641`}]}]}, 
      LineBox[{}], {
       InsetBox["0", Offset[{8, 0}, {1.4508046190278983, 0.}], {-1, 0},
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "3"], NCache[
        Offset[{4, 4 3^Rational[1, 2]}, {0.7254023095139491, 
          1.2564336560059641`}], 
         Offset[{4, 6.928203230275509}, {0.7254023095139491, 
          1.2564336560059641`}]], 
        NCache[{Rational[-1, 2], Rational[-1, 2] 
          3^Rational[1, 2]}, {-0.5, -0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, 4 3^Rational[1, 2]}, {-0.7254023095139491, 
          1.2564336560059641`}], 
         Offset[{-4, 6.928203230275509}, {-0.7254023095139491, 
          1.2564336560059641`}]], 
        NCache[{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
         0.5, -0.8660254037844386}],
        Background->Automatic], 
       InsetBox["\[Pi]", Offset[{-8, 0}, {-1.4508046190278983, 0.}], {1, 0},
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
        Offset[{-4, (-4) 
           3^Rational[1, 2]}, {-0.7254023095139491, -1.2564336560059641`}], 
         Offset[{-4, -6.928203230275509}, {-0.7254023095139491, \
-1.2564336560059641`}]], 
        NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
         0.8660254037844386}],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
        Offset[{4, (-4) 3^Rational[1, 2]}, {
          0.7254023095139491, -1.2564336560059641`}], 
         Offset[{4, -6.928203230275509}, {
          0.7254023095139491, -1.2564336560059641`}]], 
        NCache[{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
         0.8660254037844386}],
        Background->Automatic]}, 
      CircleBox[{0, 0}, 1.4508046190278983, 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, 
   ArrowBox[{{0, 0}, {-0.75, -1.299038105676658}}], 
   ArrowBox[{{0, 0}, {1.5, 0}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.1],
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821671475768223`*^9, 3.682167185218712*^9}, {
   3.682167255334141*^9, 3.682167442418434*^9}, 3.6821674747325153`*^9, 
   3.682167510242432*^9, {3.6821675589512444`*^9, 
   3.6821675912627707`*^9}},ExpressionUUID->"5a216560-09fc-471f-a47a-\
650d86852542"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}], ",", 
       RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682166733050971*^9, 
  3.682166733327372*^9}},ExpressionUUID->"1e85dd21-54ea-4812-a1c0-\
8d4d3f511fd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["\[Pi]", "6"], ",", 
   FractionBox["\[Pi]", "3"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "\[Pi]", ",", 
   FractionBox[
    RowBox[{"7", " ", "\[Pi]"}], "6"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "2"], ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"11", " ", "\[Pi]"}], "6"]}], "}"}]], "Output",
 CellChangeTimes->{{3.68216672997269*^9, 
  3.682166733530568*^9}},ExpressionUUID->"85eeb809-370c-44a8-b535-\
84747b0ead7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}], ",", 
           RowBox[{"10", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"4", "/", "10"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
      RowBox[{"FaceForm", "[", "White", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.5", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.5"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Alpha]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "0.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"10", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"4", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Beta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "0.3"}], ",", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"4", "/", "10"}], "]"}], "]"}]}], "-", "1.5"}]}], 
        "}"}]}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<cell.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682173707685611*^9, 
  3.682173725497672*^9}},ExpressionUUID->"ac8ed612-f77e-447d-9fb2-\
3596158cae62"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    TagBox[
     PolygonBox[
      NCache[{{0, 0}, {4, 0}, {4, 2 21^Rational[1, 2]}}, {{0, 0}, {4, 0}, {
        4, 9.16515138991168}}]],
     "Triangle"]}, 
   {EdgeForm[Thickness[Large]], FaceForm[GrayLevel[1]], 
    RectangleBox[{3.5, 0}, {4, 0.5}]}, InsetBox[
    StyleBox["\[Alpha]",
     StripOnInput->False,
     FontSize->Large], {0.8, 0.5}], InsetBox[
    StyleBox["10",
     StripOnInput->False,
     FontSize->Large], {1.5, 5}], InsetBox[
    StyleBox["4",
     StripOnInput->False,
     FontSize->Large], {2, -0.5}], InsetBox[
    StyleBox["\[Beta]",
     StripOnInput->False,
     FontSize->Large], {3.7, 7.66515138991168}]}]], "Output",
 CellChangeTimes->{
  3.682173711172031*^9},ExpressionUUID->"434b8d81-9c99-4caf-a8eb-\
d20af7a08163"],

Cell[BoxData["\<\"cell.png\"\>"], "Output",
 CellChangeTimes->{
  3.682173711240569*^9},ExpressionUUID->"e1eca376-275a-4d28-8f5f-\
39d3e84563e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tan", "[", 
   RowBox[{"40", "*", "Degree"}], "]"}], "*", "100."}]], "Input",
 CellChangeTimes->{{3.682173865089052*^9, 3.6821738766662283`*^9}, {
  3.682173944746064*^9, 
  3.682173959109873*^9}},ExpressionUUID->"f7e36015-bdc7-4d6c-9655-\
e36d02ae2736"],

Cell[BoxData["83.909963117728`"], "Output",
 CellChangeTimes->{{3.6821738689137278`*^9, 3.682173876914158*^9}, {
  3.682173945237722*^9, 
  3.682173959306226*^9}},ExpressionUUID->"ed37a4f3-5318-4647-8341-\
8827cc88a579"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"119", "-", "84"}]], "Input",
 CellChangeTimes->{{3.682173990854669*^9, 
  3.6821739919809847`*^9}},ExpressionUUID->"380890d3-3b37-4542-af0e-\
73d589eefaca"],

Cell[BoxData["35"], "Output",
 CellChangeTimes->{
  3.682173992306108*^9},ExpressionUUID->"9d2eff4d-97fc-4428-bb24-\
91ea62c70bd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4", 
   RowBox[{"Cos", "[", 
    RowBox[{"121", "*", "Degree"}], "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.682174764355734*^9, 3.682174782073903*^9}, {
  3.682175623595368*^9, 
  3.682175636835169*^9}},ExpressionUUID->"cf3d3d48-fd19-4c40-b062-\
e8fb67c205c1"],

Cell[BoxData[
 RowBox[{"-", "2.0601522996402166`"}]], "Output",
 CellChangeTimes->{{3.682174769174901*^9, 3.6821747826442633`*^9}, {
  3.682175624503366*^9, 
  3.682175636956468*^9}},ExpressionUUID->"b43704d4-5655-4beb-9760-\
eb842f062870"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g1.png\>\"", ",", "%"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682181064893227*^9, 3.6821811692019367`*^9}, {
  3.6821812806056643`*^9, 
  3.682181312514488*^9}},ExpressionUUID->"49d53b42-a973-4579-9219-\
2ef9f714b299"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJw12Xk81E/8B3A5dxe57apIl3yFDkkl5k06HLlDd5GEVBRdSkQ6JCRFJalc
OSJHIYNWhEQpCSUkuSL3XvP7/H6Px2//2cfzMbP7mHnPa2bn89gFrsfs3YWF
hITCZwkJ/e+7CGY0dOsHGxeS/3thdWV1DbVb+9BOQ8ZcHuWJjijr1phjSOq9
z5ERyj5faVVy2afQgwid8XbKnSbvugpjgpCUgXVeBeX0z2ZC2SWX0OWjX1IS
KbsyltwUyg5Hh4obmk5QnofE1BySrqPl4SZ6JpQ/n/iV+TTmJrqhYVgnTnlL
c5dqYGU0svvwLp4tIPjJsL3705JbyOcBP/EsZSH6m8yG/NtoNLrvmyblPYv0
xqey7iCxW4nbPvAJLjZ6bLggNR71eutP+VBWdlG4ZJF0D3XWs1tEKTdGjMk9
iHmIfA/oG1MTxHGfcrW7q5JQwVEbdgKXYHanZ+OpykdoV9GnYHnKC7itzEcl
j9HV0EeP+2cItqXFlOi/fII0GHo0S8oXlCz21eY/RUbvy548nib42/LilLGs
VPS3y/Oy0RTBNCM/iysZaWh0d2fdhUmCDSy0huelpqP5bsT85QTBsQcT9Dcn
PUM8fc6IwjjB2+LPsu/G5KD/fib/9Rkh2NhBJT9uy3O02UNWyPcvVa8dE2I/
q56jitEOiyPDBIt4ZKX7V+ai+ZV3oywHCd4frDqaWPICHZoZ7878TfBU+Izp
n3X5yE36dYNvL8GRkZ9j9V7mo9gMpUndXwSX3ruxtia/AL14ls+N7iJYpZAf
NJpVhH6UvBzgtBP8vLS1yVD7JVr9UZwd3Ebw1jcFiy5nvESLf0a2CX0jOKDR
p3pO6it04XzVu99fCP7Y3zHbLKkEqe0PyXJpJDhiftmDuBiMQpOZw28rCN5c
d29luXQ5Urxg552KCX572UVR374cfbCs/3ThNcHV/KZWtbZyZBdNDsu/Irhm
gH3w32AFchw2L6zPIbi2OuNsvCwb/Tex42TkPYItLnnsmb2djeTzDk103KXa
jRfDpXg2KrtQf2RxHMF1BQ/EfBZWIaPBNyZxUQTXP46KgtVvkaxZS4J0GMHv
gwJSfjvXoB11z6ssjxBsbah3dff9GmRff0ZG0pPghsm/3k2dNej2c/M9Fe6U
fTxXlni+Q9r5b2gK+yjv2l0aea4WcTyZxRZ2VL4MTD/qP6xHeWF7DkmtJrh/
SpyYnGhEhl7JRzr/CTBZtI1tcKsRBR0zuFc/LMCKtreu6rxoRD17GQq5/QKM
0uYrqoxR7Y2hXa5dAhzrsva/Eb8m9MFrTNWrSYCNX3k6JPp9RGIWxpMS2QIc
fbY+lePbjNLOz5e+ekCAU1LkfUaim1HH7AehF3cLcOlHl1W9uc0ob0Wz53Fn
Ae7V+lXaNNqMWn+fD1m3TYDXt/Gb0nw/oyGJKFnftQLcY7ic5+T7BTHKXdkB
0gK8lh9t++L4V1TRUSrfm8vH6wO97tCivqKzyjE9kpl8bMg1/b4n5ys6r/My
XiuFj41nxrxpw19R9fd7L+wT+HjjxPbwPd6taPdM8vttIXxsPaRSJnHoG3K4
YPNjxJaP3TseLdu9qx2t0aqfHO/j4XffXS4JL+pEyvm391mL8rBT/VqlWas7
0ZTuvJ2KPC7uecVKJWadqNxY/vjHMS4Wuv21lneoE9XpJE2t6ebitZYu8lMZ
nShZTazoUQUXpxQ5PxpY9RN9iTSTEjrPxaFRTrjZtAtl3juuOzrEwWDqyE1x
7UFbz+xx0X81g3ceNx8p2NGH/N+9SwjUnsJlC7RCyp8OogPjYqqVwuPY8a7W
446jI+jcgcv6nBsjeK7Y641Rh/6hOrm+VJnF/Thcryqv/Mo4egEnEncu7sKb
tljsT7k8iZp/c73k3jTjqqvjGqFnp9FkwvB5j6F83H9DsfTHXQ5K+SZ8+rd7
NTpwKvfmSAwPWQ5fVDpp14bOL2SvDCoSoLPXIu/kdP1CuoLzk8KeQuDstCoM
xw6h6j0uY+oHZ8FkaWrdCY1/aGWiT8v5k8IwcldpKz1wApnZVews8BMBXgzf
wc1kGsVe914tckoEmo68S02wmkbdVUqz7c6JwBdj7r9a52kUst6rYvCSCNw4
leiqfHQaVSxS0Fx8WwTW7y6wckmYRsaTBydiikRgLeNkcNjoNFp7jxZ1nCcC
w+hV6LGEGbTsl03Vssui4Pk39HHrZw766ql90/2aKLzuT5KT/MFBl4dpOx5G
ioLE2EEh/T4O6pyqGJS/IwpBClnb/TgcFMtYrchJFYVdh7XuxqhxEW85y63m
nShEbPrP0sOdixrOdgq5S4vBj9PalrZDXHSOlNYmyokBapcXuTHBRZqh8bFf
lcRg+YbBoQo+F4XcsNe0UhODeDc7B8XZPGSQxLbRWy4G1nftVHfp8lBSVVri
LDsx6J8ofnnUh4f8ZH03JMaKgb/1qc+Jv3ioP7L2+M27YhB1N/XEgUEecpVe
/PTifTEozP4mqTrGQ3aMFmm3J2LwrKF8UZAQH60QNfqxNF8M5p1eyR6ew0fD
U7SQ3E9isPL2Ydez1nzk9SOpmi0vDnz3crO1z/moaw+HW6AsDnma6SrMQj7a
2e6wInWOOGSkxxcNl/CReat4/NWF4pA12rv1SjUfaX464mW9Shw2LuuLP/id
j3rfrpX+aicOAxumyssZAuSW3Wg/ECUOmyri2/h7BGgvqzpk5W1xyNfeUrHH
TYB2hrzOOxUvDihtLyf/sADZOmXIiyaLQ7FBwX7zEwK0QXDp47wX4nDac+gT
/YoAKVob2Ft/FodPb5Wl+nIESOalTkhsqziY3+8OKM0XIMbCxXnfOsRh2ZlO
1SuvBEhoUlbeo1ccehXG5oi9EaDBB/1NQVPi8Cax6tntzwLEHnpgl6siAX+K
M4RlZwQIO8cGT6lKwCnr3GhnvgAVV1zLNVooAcrWulvjZhH0/PYpuVotCdCx
LtCYoRN038iuqctQAvQl0q84ziHI/4aoneJeCchvEvm+fx1BGjretqeSJSDG
EZvWHCdoMOp7/8kUCVh35pXa6xME5Y3bhfllSIDrN52lGQEEGZWuLfbJkwCl
1w+KjwQS5GgpvvhgpQR4y+e13AonKNjz0ZRtlwREbG6287xP0Ob3ijHWvRLQ
etoluTORIKmVV7St+iXg1t8ERdtHBN2dPnpgyz8JSGGO7GKmEJQdvqHOSJgG
3qL73LfkENT+tCVRayEN6ifbfmmXE5RMt1ynqUGDUvgirVFJ0GGfsk9LtGhg
K1xjzWQTNLb6KW3BKhpoTT5R6aomiMH282Oa0uC67Nq3rA8ENS7tlVLaTIMA
9qe0j40ExV3fkSpvQQM/nfKk0I8ELXCAdml7GsRodDQ0fiZobZf0ZlFXGjw0
b2Yx2gkSbArunHWIBnXHYxNCOwhip4+fJZ400HwQqDv1nSAb37Ycji81Hg2n
6+yfBB0SSlcZDabaPWJlhH4TpH1wXv5wGA0Stg+xDPsIGq2+aT14lQY7v79Z
efQPQYE3Ay79jqbBbpniqNIBgm6pmQ11PKIBfj/AnflLUGH9n1PVT2kgfibq
/sgIQd/O3hTOTafB6oi0+B+jBKm3fGOG5tJAY75tWsoYQRvDLib7FFD1qvV7
dWGcGo+eho7zKxpM6i/XsJkgKPOmr6lWBQ0cX+fItU4S9MGI+V6higYOT5Si
YqYI+jdQ6syvocGbThdPs2mC1m2l+TQ20kBM6sOy6BmCdk9mTb1qpsHiQ3mK
2hyCLj5xCHn8lQZug5+cMeW3Qg/vBHTS4Ifv5sEGLkF/ss0W7u+hgfQFJyNL
HpWHPf2Z5n00sGpc2Icpr5CMMtAbpMGX4JuD2nyCHF7pV84boYHJxRCLGMoB
Hm1W4uM0CLnRPWuEcoJScMvfKRpMo/vymwUEvX6j4drKpYGX8N3AWMqdvvWD
lYQGcops1EZZRN3vVKYIHR5ckdk9h1D5b2AKx0nQQW+rd5MdZYvA1xFBknQ4
K1P7MJiyj5Yb01OGDrePqVenU476Sku2V6DDsoaDW2op51/O1t7ApIO3+031
bsotqx2Llsylg5hZgv04ZU7XjInMfDqs3RbcwaesGv2wfnohHd6uNaWu/wQB
2uTcpUEHoVvt/BnKB4f6f9Zp0aGs1O7WIOXwe1FHCnTp4DbwJLiFcob5mqnE
VXT4ptlWU0y5Yaot+MoaOtxx4B6Oozz6NFjKbz0dYtRmu3pRVnRcemeXMR0s
5NTy11A2EH6/YJMpHUrCDfZxqXrsfO6XqbuZDu55h91eUj6/l2XAsqCDcVxF
uQ/lJKmyilnWdCiUcjw1l/KbYjerATs65L7RC6+g6t97mN7SvJ0OF4wCRvZR
1qlyHEzdQ4e2tJAPYdR62p7gBEQfoINI1cVN0pRPLkiadc6dDotmzJVuUHko
Pj+gbO1DhzlqxZX+VF46lkU/MvClA739cdJ3Kl9C39ZoL/Cng4zV96+I8uY1
ISbjgXRo5Xx3GaDy6dmztL7jIh300yaT9ClHxLx3qg6lQ0XPLLPTVJ4/DbOO
JETQYYtYxr1eKv/7U3Pi4D61fsppcR7UfhE3+TcvKIkO7Gv73+6j9lPWt9WP
Xz+hw5kjb6atqf3GkS7OWZ9FB7Sg7JD8EEGxJ9k1q8voMD8x4rgOtX/Xz5aw
OVFJhzj5iLKOXoJ+ppp/zn1LB3VGt1zYL4J02xp+6n6g8qWsVvuyi6Aak1aO
ZicdwpeKRuRT58nRtrnBHj10ULjyR0a1jSAl/70SKX10yEP+9wNbCXJN61ZY
NEqHJcrOTepfCOLNHtZWFWYA076giN9A7Zd24X1yixngsDC9n44J+uK/6ZeN
JgMeFXnqd5dS6ylzxTtSmwG7IuyjXxQTVGsqfVpSn/JVpaB1hVTe0pnRYpsZ
kPFwndm3TOo8DtB+M+PBgB33+ZLH7xJkLHvMfO0RBuyPjntZfJugX+m5HwKO
M+DBlj3BvBiCVnWsaR87zYBNs294ud8gqH6jycTQVQZcT8vNrQ+m1k/OaWnX
MwYYrlJ7P3qYIN8nSqyvOQx46GrzvNedoC6Dz7SGFwxYlGL785MrdZ7udex/
VcIA7cKa5Xd2E3Q10z4ruo4BaoWqsRU2BMlvtdEzGWCA5BGBdspqghYHbUVJ
WpLQc2brnfxpAbotT1sRpysJ19VjGvLHBUg8pVo9YpUkiOV4HcsaEaC++s3C
p9dLwpbY16PhfQKUNWdTlY2FJOjPElfqahGgNYUmlsST+vxZhdfLCgTIfGi9
8950SdA+WLZsnpcAGR+5szE9SxIEPV42FQcFaNXA2PLxXEl4FdCSt2efAM35
k0m7ViwJS/U0UaAj9Xveo1ZcUCcJ1pUv422NBSiqXVhVelgSEkJdsLOsAH2p
q+0qWSUFDoVfbg9k8VGtxdIP4gZSENOU3n0ulY/wu0sldoZSkFtbkiryiI/S
qjfE/t4oBatN5RNmbvHR2TfZmxS2S0H+EqvdQWf4SLUkJs3rlBQMH5UXGzfl
o4MZO4+qlErBp3WPv978wEOFJ/5Y2JZT3793Zb1+DQ/RjE4vDWdLwVS5xJtP
5TyU+eF253i9FAQer6icyuWh8fFG+8YOKcgrtDPrvMVDl9AWg3AiBW713hr6
TjyU3KwnNGEqDfvmF97gN3PRT4FUTOM7abhp9d+6qyUcJKhgtZa9l4b9JkWx
P/M4aE7YYvWsJmmYZ7X8gl4GBzlKbsi+2ioNARImImzqXv+W6V1r+kca7pbN
yN7156CMFe+EC2izwaN3C2u2LgeddA07Eb9lNgzz5BVMqPuz+Fu+o2vVbPhw
zCvaZP80Ij7/kVVfZMA71tJX9vAEsmWbLz7mJQvypN3qksU/ZKe69YPpb1k4
skN76N3gECrt7R4qOCoHnrpl18r1etG5P2q7lYfkoFqBvq3cvAM93j1lpBwg
D9ccRXm3PtQgdfqxYyKT8lB0S8xbEJaJrWetSD16QgGSGX+aSpZ9wr88I+3P
cBVAky0Ip3X9xI2SEdt8zypC/K9s8zMuf/AStaWlNFElyBHtX5x7YQRrBUqu
VLuuBKczlvrvmhjDoQo3J9TpyvBT1DCyqHMSb5n7XOdNtDJs/us7Lz1lBlvN
++BdcUsZuM5BbrrPZ7Ct6nA6vq0MkWeqzLOo5zGX+doapfHK8AXd7L9TP4O9
FqWpFTxSBsXVZwzV/83giGVJMqm5yrC+4Jc815CDPxpGjV5rUoYfwrez39Vy
8N7dxwvs5ZiQE2nyzLaZi6ND0gY2KzBhf3x0qWg7F7PTOhcYKjFhszRdM496
ftSasI1cpMKEyaa54jP/uHjqxkqPcXUmjBv9ebZGjoej8D9W3Aom9PIXSh23
4uHKhf6BrTZMWG+5vbvhNQ9PbM3Ke2/HBLmtfXUZbB7WPParr8KBCad+q7UE
1fFwZMn27RnOTHDaOGat1MrDuxzX6J7bx4T0upm4oTEeHg+b+jHvGBPyr/1d
ZK/Jxxp/zmzcH8kEy64Bt87rfDw37OLUhSgmSKtVhuyL4WPZBeHPHsQwIfmx
vsOXu3w84xKr0BbHhFUpL2Y9e8rH9TXZ3dsfMmG7Wo3rSBkf+6V1X7J8TvXv
+p3x5y8fl3lsY6/5SPXfanPumqUAvxBxPL29mQkiveUBPFsBTnu4U/vkFyYc
urNp2N1JgKNbPGJzvzHBn+dvOf+AAB/cEnJQu5sJ19zPxC4LEGDG0iLRheNM
4Dybr5KeKMDOveqbpJVZsKJQRVv3jwCvIu7ZEiwWPGaN7zIdEmAp1jOm8BwW
MJ6e4lqPCnC5uX7/pCoLpqbCwuxmBFgzy/xm5xIWSO87k8GlETx9wq/1hT4L
Po48dOvWIPhjRJFptgELdJI3zr2gRXDmU96ztHUsuP4kTk9Ol+D9LZcvPDBi
QTd6H6KuT/C79fcWhW9iwfTbU5e6TQlOmMX22bmdBTe2lDhwdhN8cg69xdGZ
BZ0awblz9hNsrWcNNjtYsC631VXPjWBh96/yZntYsF3b6PU2T4K9awaLdNxZ
sDJHZoOGP8EbbioJz/JnQRVNrdL9OsHKaTu9uQEsOFdvISwZSfBI+cPmidMs
kOS/v5YWRfCTf/+l9geyQPGqhV/9bYKlnIytmkNZYGWTcbXoIcEd8zziUmNZ
EP8yzXFOHsFOSzb8ao9jQeiRqZxL+QQ36sitlo9nweucBwe6CwmuNC5pCnzA
gk0iMlVhJQSn7ZeRtk9hwfkS3mknNsELPHt2haex4JWW9wm/t9T8fV9llGaw
4CKjuCy0huAbIW5bl+aw4Pkd/00R9QT7PSm6xCtiwb+048JLmwkeyIz4uLKY
BVDwzW/iM8EHCw4s8ChlwdCE1/LiFoKd30ripnIW6Kq1XtNoo+rRt4+T8o6q
93Rk6bWfBBeOrDZvr2NBT8/LIMlugpfP0O/KNbCgVkLqekgPwQsZ+fqBH1kw
8cLjtMNvgiW0ab52bSz49E03+eIgwRdXd+DLHSzon65OeDFEMGdD3uzSHyzQ
6rD42j5M8OC23ZkaPSxovpWiLj9K8CGnldxdvSw4o/ZJS+0fwT/2iltE97Fg
9EfUafUxKj/Hnv/mDlLjmXOlQ2KCYMvTYWtW/qXqQdcZH6TMvrgz7NAoC/ap
rN9WM0lwUbTooqYJFhjohlYdmCZ4RUKrr/g0C6QOm/XMnyE4Izm73JDDglk6
J8yaKd9/4bI3RcAC3yMba+ZzCVYq1clqE1KBro6ggULKkWxhnqyICgTV7Lcx
4xFMe99isVlMBQYVS8aqKQd/zow/J6ECLk8OfTXhU/PtCO57TleBGFtjfi7l
k71OBr2SKiA1ON+VJSB4aHjZ5bmzVaDfZFDcn/KhKaHPtrIqwFAOH6im3Ek+
L7osT/Vf0iIjRwjeQXvmV6KoArsWvz1hS/mj7MWKEWUV0K8E5mXKVirbZTVU
VCD76RpOLuWqBVr7ds1VgfyjCfOaKRtrkawoVRWYU3jgAnW/xy9XNfOq5lPj
kw6jpkvwSsN0S+4CFfj//xf+B8tadBY=
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], HoldForm], 
    TraditionalForm],
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.9999999999999836`, 1.9999997662703648`}}, {{
     0, 6.283185307179586}, {-1.9999999999999836`, 1.9999997662703648`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.6821811062729597`*^9, 3.682181116174803*^9}, {
  3.6821811581635723`*^9, 3.682181169863097*^9}, {3.682181294921492*^9, 
  3.682181333468788*^9}},ExpressionUUID->"2b7375b1-dbaa-4a11-bb17-\
9e1892c15ecc"],

Cell[BoxData["\<\"g1.png\"\>"], "Output",
 CellChangeTimes->{{3.6821811062729597`*^9, 3.682181116174803*^9}, {
  3.6821811581635723`*^9, 3.682181169863097*^9}, {3.682181294921492*^9, 
  3.682181333573431*^9}},ExpressionUUID->"637ca38d-c198-4943-a113-\
d6432ef7236e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "-", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", "2"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g2.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682181320724432*^9, 
  3.682181398111957*^9}},ExpressionUUID->"6bd661aa-79fe-4e18-9e18-\
51ad2b32ec01"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
UQ==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{
         RowBox[{"cos", "(", "\[Theta]", ")"}], "-", "2"}]}], HoldForm], 
    TraditionalForm],
  PlotRange->NCache[{{0, 2 Pi}, {-3, 3}}, {{0, 6.283185307179586}, {-3, 3}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.682181330859268*^9, 
  3.682181398489401*^9}},ExpressionUUID->"7a6e81b2-05ed-4f5b-9841-\
8799bfe28ce6"],

Cell[BoxData["\<\"g2.png\"\>"], "Output",
 CellChangeTimes->{{3.682181330859268*^9, 
  3.6821813986144943`*^9}},ExpressionUUID->"2d6b7825-f640-40b1-aac4-\
e98e65441bc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "4"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g3.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682181409914563*^9, 
  3.6821814467773314`*^9}},ExpressionUUID->"80489909-7b71-40ff-8b63-\
66c769001a72"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
//9/0P8DPr5fMA==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
lc+nxycZNH+S9iq9FLPJBUrw//8v/B9ZP2Am
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"cos", "(", 
         RowBox[{"2", " ", "\[Theta]"}], ")"}]}], HoldForm], TraditionalForm],
  
  PlotRange->NCache[{{0, 2 Pi}, {-1, 1}}, {{0, 6.283185307179586}, {-1, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[Rational[7, 4] Pi, 5.497787143782138], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.68218142423442*^9, 3.68218144719985*^9}, 
   3.682182635228715*^9},ExpressionUUID->"51744723-d3c9-4ddc-b6e4-\
a6a1ce83c32c"],

Cell[BoxData["\<\"g3.png\"\>"], "Output",
 CellChangeTimes->{{3.68218142423442*^9, 3.68218144719985*^9}, 
   3.682182635347581*^9},ExpressionUUID->"a65863ac-ac44-4eb9-a022-\
02035ea764d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"t", "/", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"4", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g4.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821815851278877`*^9, 
  3.682181605194158*^9}},ExpressionUUID->"ec749c8b-6a0b-417e-90d3-\
6b24507d0a43"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
OFWuQo9PNERlkvZKgxSLSTUN+P//F/4Ps0Rwng==
       "]]}}, {}}, {{{}, {}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
7iZ4ZNmS5Q9FmBBjtMmkpYPgVOP+kGAJJgTID+4vbKL82rzffJ8cE5rlG/hF
qPqQsFo7Zq/AhMRd4Sq25VR92Kjcs6Qz4SOkFgS8IzjbsWNipQoTfs83+nu9
our5qNMzsSVMcFznmj6ZRPCiE6tsF2gx4U9K4krLJwT/dJf794vFBL2a8X2B
VD3n+Xx16tNjQuQfRmokVf/G17aLvV7JBFbv7webLxJMC1n6KmsVE3qqkvJS
/an1HyZx5JkJE9QCd8ZwqP2kKPpTSYQZE4ydWqsVj1H1/Gyz19GNTPjZXBIn
ZkOwSormYhcLJkgr/bx/fjPB/9IFamy3MMEweV90LRCMc98vMbdmgnXUgxCl
FVT+36M2GQcmyDqamFjLE8ysVL0u4sgE/aCRvM+SVP1/+ms478SEuMumrgZC
BFc0vAkb28OE91jN9dE0F2/pM4bSQ0y49zy4Vb6Fi20WLE8+7c2EGgWjpIBI
Lp4I6KoP92HCabedlY7XufjOZOhclh8TriUfd5c+z8Wtw4O25BwTMt/98VU+
xsUHvjyYO3OVCfTUfV9iTan9/4GQneddJmxL3H5Zv5uD5eXyz0fdY4JmLK1w
uJ6DX4cfTM6JY0JC6XPzSxUc/O/y27nv8Uz4mr7WxzqDg4OPeyd7JTFBskRW
zd6fg+8bfZvzLqTGA464a4pysFl2mFb0ayakTly8U/OHjb+x1tjlvaF4kfGc
LYeNNZTvJk9iJozKyLbM1rJxJq+VnU8VE/z+Xr324Q4bv6stSPZtY4Kv0X9N
DnJsPOgWbvffHyYckAjU/cwzjk+5Bhj6/GXCLd7pxEIyhicdjy7ynKf8bT9y
N7h7DPNvXNtwnE8DLvQPr219M4YZqlzbXWIa8Mrp+Nm1PmPYtWGbrbGSBkTs
03ir3z+K29dI7JhaowHj31KiFTJGcJ1Y2DbPAA0o7PlHjv4axHR/i/R75zWg
R6G/eWfXID44wCNSclEDhnq1A3TLB/FUsU+56BUN2OBsfeJm1CBWPL3f9NlN
DTgha6SprjuIj9QZarc81IAzP+JlS3YP4NnoNn5zrAHRdze/uvO8Dy9R1SoW
5l8C0Y9mpY/87cI658UMVG8ugZAoayXbEzX4qkzElJqIJsjfst378GMM2qz0
Qv99lCb8ONAxuhw1oH0uHvl2C7UgfL1NfNSxHhQVlDJuIaMF9zyyLh4I6kHl
KT3qpnJa0LhFMkE9vgfpTO0IZ9K1wO580XKvhh40fcvg2KSaFtD8Y7ttzXpR
JP5Bi1muBXxn/u2cEu9DZQyf823btaDWo/Xz4sf9aGpL5svPtlqwnbtdu/J1
P2KdGRwptdeCdOvOF3sa+lH4m50705y0YMrOfciKbwDtcVi19Nx+Lbi9Zm6f
xeEBNHlt+pvyGS3Qzo/fF8EYRJqj/21wDdcCYa2t6xojhpDStUvTFyO14DLL
2qopeQhJqwenx9/Wgo79gr3FeAjN7IqW6YjRAkVhu42IDKGaqqz+nY+04L7s
ngWS24aRV0r/FasXWtDDyXIv5htBJce2la9q0IKakT1T6S6jKJfPwX9noxYU
BF9PtfYcRSmPnPXONmvBYGltZd21URTVciw6p53y41HaUFDWKDq8OeiwXj/1
e67Y8rB/o0hUq5CfMakFtvQ+j8VxY8hpSG2ThDwLVOTTfHMLx5Hh/JEsIRoL
TuVVK/hVjiNxWroCryILvHi7by5uGUfvLI3GfqmwgJOck636axyxMi0jepaw
4OSmQtRoyEa/vb3aco1YoH+/PEkqmY0awgrXZxmzgL7k3hV6PhtlPJ9LT1nN
Arnuvq1C79nIteX6xXhzFhT9CjwY3s1GH9c8YAZvYsHHQSlkKctB9xeUuzvv
ZIEV/Zrd0QAOOqso0uLgxAJxCfsXKdc5yGaFDWzfzQLTrnu6X25zEO+R1kUb
97Kg86qiVVkaB52sYhfqH6H0hFqMbGvjILMIOd4FPix471RVPbKci+RTnE/+
8WXBciW7DCdTLpp496hxyp8FRCFyNmUTFz37oZ08dp4FfIODeT+oflrcca11
41UWDLtfuKV+mYu6lI/FJEezAKplbw985CLHJWaDnTEsCOtc2Ov1lYvq9Beu
XBTHgpDltQ86OrmobO2b+vPxlD/1zZpmhItSXKUk7JJY8Kx7zV6TRQSpuw3s
CU5hwUCU4tdYRYLue75OK05jQeyxf3u/Mgi6FXRoi1Y2la+nPaHNhgR5PSu8
MlfIAkmH6BWytgSNZ4Q1GBRR/n5pXr9xF0GH8w+oHytmQehBomSznyCnD2K4
/h0LqjUCRcgpgsxG9s8mfWSBnrED5/B1ggomVlp2fqLy22p25GAYQctmRGIX
fmGB5S2vY6tvE8QQzTM638CCQJ4Arnc8QUJ6wp62HSy4vHi5leJLgi6t7MLX
u1hQc8RjV38BQbNmLyWLv7EgS0a/+NobgtjbXDI0B1iQl5jj4VhO0FFHgz97
hlhwzq2o4GoVQd/2CW6NGmGBTkCpeVgNQQ1nXgz/YbMAZdn/0WwkyMr/2ioD
woKGuDhWUQtB5Zecrx39zoK54/ZXNTsIKoziZ9ZPUfpTEwtCewlafr/NU/A3
C+76uF0LGiAo7UnWO9NZFmwbkva2HyboYe6ufUn/WHA69Uz8JTZBcsX6mR08
2lAe1PK1k0tQeDnvnDSfNrTJBSov+k6Q8OeWrRYC2uC1If+s2k+CLjdlxJ0T
0oa7h3+3CU1Rersuj7wQ0YaYbb8sq34RdHbI0XhITBsmdoSVHfhNEIere11J
Uhs61lWua5yh9E/zNO2Q1oZM3/6KxX8I6plvYl5fpA18n6y3bZwjaLdwutcb
WW3IeJzQvO4v5Yf0pdIJeW3YM/TUlfaPIGv6TmlNujZoSDmNVVJcoa6zf4+S
NuSq9HntmCdorc58ZqSKNuxOTJjJofiVYeNcxWJtaHgpd5FNsYFpqtUfdW34
//+D/h99D+fj
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"cos", "(", 
         FractionBox["\[Theta]", "2"], ")"}]}], HoldForm], TraditionalForm],
  PlotRange->NCache[{{0, 4 Pi}, {-1, 1}}, {{0, 12.566370614359172`}, {-1, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[5, 2] Pi, 7.853981633974483], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[3 Pi, 9.42477796076938], 
      FormBox[
       RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[7, 2] Pi, 10.995574287564276`], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[4 Pi, 12.566370614359172`], 
      FormBox[
       RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.6821815882520237`*^9, 3.682181605476967*^9}, 
   3.682181753240793*^9},ExpressionUUID->"e60e75c9-a9a6-4985-a36c-\
3194c34d4edf"],

Cell[BoxData["\<\"g4.png\"\>"], "Output",
 CellChangeTimes->{{3.6821815882520237`*^9, 3.682181605476967*^9}, 
   3.682181753350501*^9},ExpressionUUID->"69582f26-0fd3-4520-ae06-\
8cdf15084a45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"2", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "4"}], ",", 
       RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"ExclusionsStyle", "\[Rule]", 
      RowBox[{"{", "Dashed", "}"}]}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "==", 
         RowBox[{
          RowBox[{"-", "Pi"}], "/", "4"}]}], ",", 
        RowBox[{"t", "==", 
         RowBox[{"Pi", "/", "4"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "4"}], ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "8"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Tan", "[", 
       RowBox[{"2", "x"}], "]"}]}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g5.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821816667380877`*^9, 3.6821818417479143`*^9}, {
  3.68218191239745*^9, 3.682181984321219*^9}, {3.682182034850848*^9, 
  3.682182035798121*^9}, {3.682182102008802*^9, 3.68218210206243*^9}, {
  3.682182614064349*^9, 
  3.682182615814941*^9}},ExpressionUUID->"fb9ca97e-e9e7-4c44-867d-\
955a3f536ffb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
1LWZF1UR4h54RyknQZ/ZubFUTA39D5Sk0Gg=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"tan", "(", 
         RowBox[{"2", " ", "x"}], ")"}]}], HoldForm], TraditionalForm],
  PlotRange->
   NCache[{{Rational[-1, 4] Pi, Rational[1, 4] Pi}, {-4, 
     4}}, {{-0.7853981633974483, 0.7853981633974483}, {-4, 4}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[-Pi, -3.141592653589793], 
      FormBox[
       RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[-7, 8] Pi, -2.748893571891069], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "8"]}], TraditionalForm]}, {
      NCache[Rational[-3, 4] Pi, -2.356194490192345], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
      NCache[Rational[-5, 8] Pi, -1.9634954084936207`], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "8"]}], TraditionalForm]}, {
      NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
      NCache[Rational[-3, 8] Pi, -1.1780972450961724`], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "8"]}], TraditionalForm]}, {
      NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {
      NCache[Rational[-1, 8] Pi, -0.39269908169872414`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "8"]}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 8] Pi, 0.39269908169872414`], 
      FormBox[
       FractionBox["\[Pi]", "8"], TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[3, 8] Pi, 1.1780972450961724`], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[5, 8] Pi, 1.9634954084936207`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[7, 8] Pi, 2.748893571891069], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.6821817288087883`*^9, 3.682181842088202*^9}, {
   3.682181929273203*^9, 3.682181984658616*^9}, 3.682182036136997*^9, 
   3.6821821024909697`*^9, 
   3.6821826161506977`*^9},ExpressionUUID->"4a93b564-e075-4a04-933c-\
e6cdc925e912"],

Cell[BoxData["\<\"g5.png\"\>"], "Output",
 CellChangeTimes->{{3.6821817288087883`*^9, 3.682181842088202*^9}, {
   3.682181929273203*^9, 3.682181984658616*^9}, 3.682182036136997*^9, 
   3.6821821024909697`*^9, 
   3.682182616250573*^9},ExpressionUUID->"56b2e18c-7321-4f18-a855-\
f8c17ee97268"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "t"}], "-", 
    RowBox[{"Pi", "/", "4"}]}], "\[Equal]", 
   RowBox[{"2", "Pi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821820795543833`*^9, 3.682182081804598*^9}, {
  3.682182166454405*^9, 
  3.6821821670303593`*^9}},ExpressionUUID->"52a61742-17b4-4cf4-abfc-\
9c61e97c25c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6821820824459743`*^9, 
  3.682182167531975*^9},ExpressionUUID->"c5d7d6d1-b666-4c6b-a4b0-\
53278c19c955"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"3", "t"}], "-", 
        RowBox[{"Pi", "/", "4"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Pi", "/", "12"}], ",", 
       RowBox[{"3", 
        RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", " ", 
          RowBox[{"Pi", "/", "6"}]}], "+", 
         RowBox[{"Pi", "/", "12"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"3", "t"}], "-", 
         RowBox[{"Pi", "/", "4"}]}], "]"}]}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g6.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821820516960287`*^9, 3.682182068367445*^9}, {
  3.682182203339458*^9, 
  3.682182310260704*^9}},ExpressionUUID->"6b9acf17-aa2d-404a-974b-\
769c228d4ff3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"2", " ", 
         RowBox[{"sin", "(", 
           RowBox[{
             RowBox[{"3", " ", "t"}], "-", 
             FractionBox["\[Pi]", "4"]}], ")"}]}]}], HoldForm], 
    TraditionalForm],
  PlotRange->NCache[{{0, Pi}, {-2, 2}}, {{0, 3.141592653589793}, {-2, 2}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{
      NCache[Rational[1, 12] Pi, 0.2617993877991494], 
      FormBox[
       FractionBox["\[Pi]", "12"], TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[5, 12] Pi, 1.3089969389957472`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[7, 12] Pi, 1.8325957145940461`], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[11, 12] Pi, 2.8797932657906435`], 
      FormBox[
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[13, 12] Pi, 3.4033920413889422`], 
      FormBox[
       FractionBox[
        RowBox[{"13", " ", "\[Pi]"}], "12"], TraditionalForm]}, {
      NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[17, 12] Pi, 4.4505895925855405`], 
      FormBox[
       FractionBox[
        RowBox[{"17", " ", "\[Pi]"}], "12"], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.682182070412704*^9, {3.682182209369728*^9, 
   3.682182310987122*^9}},ExpressionUUID->"d9cd71bc-1f99-4ef5-bdee-\
418a7506dca7"],

Cell[BoxData["\<\"g6.png\"\>"], "Output",
 CellChangeTimes->{
  3.682182070412704*^9, {3.682182209369728*^9, 
   3.682182311084714*^9}},ExpressionUUID->"7223bc95-64a6-4a99-a95e-\
195b2f0394b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", 
   RowBox[{"Pi", "/", "4"}]}], "-", 
  RowBox[{"Pi", "/", "12"}]}]], "Input",
 CellChangeTimes->{{3.6821823753318768`*^9, 
  3.6821823784228373`*^9}},ExpressionUUID->"b39cd8a7-c643-4a31-904e-\
b2d943437d1e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Pi]"}], "3"]], "Output",
 CellChangeTimes->{
  3.6821823786582212`*^9},ExpressionUUID->"88830e85-6af5-4ddf-b4fd-\
85be19dfd379"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Csc", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "\[Equal]", "Pi"}], ",", 
        RowBox[{"t", "==", 
         RowBox[{"2", "Pi"}]}]}], "}"}]}], ",", 
     RowBox[{"ExclusionsStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "4"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{"y", "=", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<g7.png\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682182545067535*^9, 3.682182630246189*^9}, {
  3.682182672768136*^9, 
  3.682182676382839*^9}},ExpressionUUID->"044aea80-6219-4806-9202-\
56a7b776baca"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}, 
      {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
HaWiqjgh4cITfrrg/9/n/B9zXiO/
        "]]}, 
      {Dashing[{Small, Small}], 
       LineBox[{{3.1415618467342448`, 7.674322294257595}, {
        3.141623450097968, -7.671744651126855}}]}}, {{}, {}, {}}}, {}}, {{{}, \
{}, 
     {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
57aK
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{"y", "=", 
       RowBox[{"csc", "(", "\[Theta]", ")"}]}], HoldForm], TraditionalForm],
  PlotRange->NCache[{{0, 2 Pi}, {-4, 4}}, {{0, 6.283185307179586}, {-4, 4}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
      FormBox[
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[Rational[7, 4] Pi, 5.497787143782138], 
      FormBox[
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.682182545802368*^9, 3.682182630487279*^9}, 
   3.682182676792245*^9},ExpressionUUID->"c6491b65-64ef-481c-8c95-\
7daae7af02f1"],

Cell[BoxData["\<\"g7.png\"\>"], "Output",
 CellChangeTimes->{{3.682182545802368*^9, 3.682182630487279*^9}, 
   3.6821826768858833`*^9},ExpressionUUID->"fa71dfaf-8199-438f-b245-\
7c6e468dedee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "/", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"Pi", "/", "3"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a positive\\nangle \[Theta]\>\"", ",", "20"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.6", ",", "0.25"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<vertex\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<initial ray\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<terminal ray\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.32", ",", "0.65"}], "}"}]}], "]"}], ",", 
        RowBox[{"Pi", "/", "3"}]}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<positive-angle.pdf\>\"", ",", "\"\<positive-angle.svg\>\""}],
     "}"}], ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.89711926167444*^9, 3.897119346346588*^9}, {
  3.8971194533885603`*^9, 3.897119899895371*^9}, {3.897120651956555*^9, 
  3.897120655089922*^9}, {3.897129286475089*^9, 3.897129313016245*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"1b8ba446-98b3-41c3-9fb1-68d4c22e9819"],

Cell[BoxData[
 GraphicsBox[{
   ArrowBox[NCache[{{0, 0}, {
      Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {0.5, 
      0.8660254037844386}}]], ArrowBox[{{0, 0}, {1, 0}}], 
   {PointSize[0.02], PointBox[{0, 0}]}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
1bBfIR//AtAwAOg=
        "]]},
      Annotation[#, "Charting`Private`Tag$65297#1"]& ]}, {}}},
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["\"a positive\\nangle \[Theta]\"", 20, StripOnInput -> False], 
      TraditionalForm], {0.6, 0.25}], 
    InsetBox[
     FormBox[
      StyleBox["\"vertex\"", 20, StripOnInput -> False], TraditionalForm], {
     0.1, 0.03}], 
    InsetBox[
     FormBox[
      StyleBox["\"initial ray\"", 20, StripOnInput -> False], 
      TraditionalForm], {0.75, 0.03}], 
    GeometricTransformationBox[
     InsetBox[
      FormBox[
       StyleBox["\"terminal ray\"", 20, StripOnInput -> False], 
       TraditionalForm], {0.32, 0.65}], {{{0.5, -0.8660254037844386}, {
      0.8660254037844386, 0.5}}, Center}]}]], "Output",
 CellChangeTimes->{{3.897119316229455*^9, 3.897119346880822*^9}, {
   3.897119455727755*^9, 3.897119519163557*^9}, {3.897119566157783*^9, 
   3.897119599990336*^9}, {3.897119642784984*^9, 3.897119696706468*^9}, {
   3.897119734756546*^9, 3.89711990036409*^9}, 3.897120668858585*^9, {
   3.897129289913463*^9, 3.897129313308136*^9}},
 CellLabel->
  "Out[416]=",ExpressionUUID->"2f42c6ee-2dd9-4132-8789-9262993335ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"positive-angle.pdf\"\>", ",", "\<\"positive-angle.svg\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897119316229455*^9, 3.897119346880822*^9}, {
   3.897119455727755*^9, 3.897119519163557*^9}, {3.897119566157783*^9, 
   3.897119599990336*^9}, {3.897119642784984*^9, 3.897119696706468*^9}, {
   3.897119734756546*^9, 3.89711990036409*^9}, 3.897120668858585*^9, {
   3.897129289913463*^9, 3.897129313761608*^9}},
 CellLabel->
  "Out[417]=",ExpressionUUID->"4c625b1f-1621-42df-bd8c-5fa5343c399e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "/", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Pi", "/", "3"}], ",", "0"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.05"}], ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a negative\\nangle \[Theta]\>\"", ",", "20"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.6", ",", "0.25"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<vertex\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<terminal ray\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<initial ray\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.32", ",", "0.65"}], "}"}]}], "]"}], ",", 
        RowBox[{"Pi", "/", "3"}]}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<negative-angle.pdf\>\"", ",", "\"\<negative-angle.svg\>\""}],
     "}"}], ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897119911473716*^9, 3.897120044542871*^9}, {
  3.897120076788418*^9, 3.897120087528769*^9}, {3.8971206629229803`*^9, 
  3.897120663208323*^9}, {3.897129319955958*^9, 3.8971293434588757`*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"97e1f80b-1aa6-4df6-b037-5b226caf178d"],

Cell[BoxData[
 GraphicsBox[{
   ArrowBox[NCache[{{0, 0}, {
      Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {0.5, 
      0.8660254037844386}}]], ArrowBox[{{0, 0}, {1, 0}}], 
   {PointSize[0.02], PointBox[{0, 0}]}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{-0.05, 0}], FaceForm[Opacity[
       0.3]], ArrowBox[CompressedData["
1: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
1bBfIR//AtAwAOg=
        "]]},
      Annotation[#, "Charting`Private`Tag$66656#1"]& ]}, {}}},
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["\"a negative\\nangle \[Theta]\"", 20, StripOnInput -> False], 
      TraditionalForm], {0.6, 0.25}], 
    InsetBox[
     FormBox[
      StyleBox["\"vertex\"", 20, StripOnInput -> False], TraditionalForm], {
     0.1, 0.03}], 
    InsetBox[
     FormBox[
      StyleBox["\"terminal ray\"", 20, StripOnInput -> False], 
      TraditionalForm], {0.75, 0.03}], 
    GeometricTransformationBox[
     InsetBox[
      FormBox[
       StyleBox["\"initial ray\"", 20, StripOnInput -> False], 
       TraditionalForm], {0.32, 0.65}], {{{0.5, -0.8660254037844386}, {
      0.8660254037844386, 0.5}}, Center}]}]], "Output",
 CellChangeTimes->{{3.8971199152288427`*^9, 3.897120045326274*^9}, {
   3.8971200799446363`*^9, 3.897120094886599*^9}, 3.897120670839748*^9, {
   3.897129331833663*^9, 3.897129343945022*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"b64cdff6-2e7e-41ec-a0ac-dccc994cdf26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"negative-angle.pdf\"\>", ",", "\<\"negative-angle.svg\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8971199152288427`*^9, 3.897120045326274*^9}, {
   3.8971200799446363`*^9, 3.897120094886599*^9}, 3.897120670839748*^9, {
   3.897129331833663*^9, 3.897129344400576*^9}},
 CellLabel->
  "Out[426]=",ExpressionUUID->"737600bd-629f-43f5-9417-4aa50d9b969e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "/", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Pi", "/", "3"}], ",", "0"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.05"}], ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a negative angle \[Theta]\>\"", ",", "16"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.65", ",", "0.25"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<vertex\>\"", ",", "16"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<terminal ray\>\"", ",", "16"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<initial ray\>\"", ",", "16"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.32", ",", "0.65"}], "}"}]}], "]"}], ",", 
        RowBox[{"Pi", "/", "3"}]}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<negative-angle.pdf\>\"", ",", "\"\<negative-angle.svg\>\""}],
     "}"}], ",", "%"}], "]"}]}], "Input",ExpressionUUID->"4a63019b-92a9-46e4-\
a2d9-d75af9b29a24"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897120963486946*^9, 
  3.897120964710238*^9}},ExpressionUUID->"3dbbe8f8-d4d2-4181-ad8c-\
639460d8b66a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"t", "/", "20"}], "+", "0.2"}], "]"}], 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"t", "/", "20"}], "+", "0.2"}], "]"}], 
          RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], "/", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{
         RowBox[{"Pi", "/", "3"}], "+", 
         RowBox[{"2", "Pi"}], "+", 
         RowBox[{"2", "Pi"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<vertex\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.0", ",", 
          RowBox[{"-", "0.05"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<initial ray\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.03"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<terminal ray\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.32", ",", "0.65"}], "}"}]}], "]"}], ",", 
        RowBox[{"Pi", "/", "3"}]}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<intro-angle.pdf\>\"", ",", "\"\<intro-angle.svg\>\""}], 
    "}"}], ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897120990554208*^9, 3.897121107497017*^9}, {
  3.897129353108873*^9, 3.897129377150524*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"bc36161a-3d1c-4f28-856e-819d1bda8012"],

Cell[BoxData[
 GraphicsBox[{
   ArrowBox[NCache[{{0, 0}, {
      Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {0.5, 
      0.8660254037844386}}]], ArrowBox[{{0, 0}, {1, 0}}], 
   {PointSize[0.02], PointBox[{0, 0}]}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
SgILzmvpHzwufxdDfXItaIksWB2vz9cY4YB8KX/6C5NYsCTpAk6JLnjzI25y
TGYB3bcBrl52RynW/NYNKSzQ/BnXXNb/CrcH1Cy8Jzhu9EmYofkb5HI29vlL
cLZgrrDCFx888UqjZ38q8f2ePyFKDwLQSuLHsBHBlftTD29zDsK5Xcdi/scD
86/DL2sHY7qBmtD/nq896sAVyhaC98Ib1P8Q3xM69kdttD4Ue1v1uEIJPnr2
bBu8DkPy6R1uIgT3zNq6J5+KwLB9/El2xH7VBAQ5xdZ+wMmrqTa5RDzrBoL/
+VCisO3o7HAHEW+D2A7J1SEx+E2H62cbocdb18+rdDJjUfW+fGoKoVfBzvdV
y35xmJOLizcJPcNnxnkrHsZjJsl+YiWGBXOTS/UOBgm4w2SVqwuRj/+iUyh9
IkloVpJ1V4jIn2yIGNXzdxKu1VBq30bkN/3OmtCtrGTkDIEGRSL/CWQTvEzc
QwQ7p91L37KAv3gtedA1DTWXdY4bEPUjcmB4wfh6Ova2JSe0EvX1yv/nT+XN
mTjH+Wer8RtCjxvKD59wZKHNxNxFG6I+QydMjEtHsjDEXlnKkqjf3dce0tiT
c7Dt745ncy4saDHgfv3qSC5++ndPyusJC/Y0ybxeKshFmcyiK8sOLBC4YHWl
410esimJVr++T+hRusIhvyof1zZMjkcS/TMtvK3s7qN8TC02Kgkg+mvh/JZ5
2sUCDA7QNhIzIfKnbPBoSrQIk3uNx2JOsSDo9YF1J54V4WTi2Cvu4yw4rrvW
PGC8CEkvY0UMdVjg86Lo+HRxMZ486L8udB8Rb6lZ39ilUkz72k1vl2OB/r+P
P4uqS3GbuudZQ2kW1E1nLtspleHjQ16M6g0skJZ4z5b/qwy/cPiu1yXOJ+ul
Dv+9wRVo9z68c36uG7b8M100W6jASc5NEvET3fDD/c07hxuVmNx19N2Oz90Q
0Dp096JaFfbGuqv87OkGyRrwm26tRnx35tbu6m4QvT03LrRUgzranDvd3Lvh
XISoNV2tFj2yEjkeOHWDe6V102vzWnR42mN+2LYbKKkTUjXNtTi/VunLW7Nu
SJ2YqLcJqsMVZwfqlHY32LEpaUVvbsC1qgnTAYTPT3h15O15wwY0D6Jta/tK
zKsvM+t+vmrAMtkW+6/Eva4t5k/U0ucGPLVhi343cW9UOaf2TiGrEeNvTOy0
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
d5EFt0TTpFo249efNyx287Dhf/Bx7gc=
        "]]},
      Annotation[#, "Charting`Private`Tag$68909#1"]& ]}, {}}},
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox["\"vertex\"", 20, StripOnInput -> False], TraditionalForm], {
     0., -0.05}], 
    InsetBox[
     FormBox[
      StyleBox["\"initial ray\"", 20, StripOnInput -> False], 
      TraditionalForm], {0.75, 0.03}], 
    GeometricTransformationBox[
     InsetBox[
      FormBox[
       StyleBox["\"terminal ray\"", 20, StripOnInput -> False], 
       TraditionalForm], {0.32, 0.65}], {{{0.5, -0.8660254037844386}, {
      0.8660254037844386, 0.5}}, Center}]}]], "Output",
 CellChangeTimes->{{3.897121000783072*^9, 3.897121107869038*^9}, {
  3.897129357570778*^9, 3.89712937761795*^9}},
 CellLabel->
  "Out[440]=",ExpressionUUID->"6f4f1ece-7c4a-4e3c-a2cc-d809892fca23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"intro-angle.pdf\"\>", ",", "\<\"intro-angle.svg\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897121000783072*^9, 3.897121107869038*^9}, {
  3.897129357570778*^9, 3.897129378117343*^9}},
 CellLabel->
  "Out[441]=",ExpressionUUID->"c30bacff-2af7-4758-83c2-d6496cf40c84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Thick", ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", ".7"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"Pi", "/", "3"}], "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.7", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"0.7", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Pi", "/", "3"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.3", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", 
        RowBox[{"0.3", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"Pi", "/", "3"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\"\<angle\\n\[Theta]\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.38", ",", "0.2"}], "}"}]}], "]"}], ",", "20"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\"\<radius\\nr\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.3", ",", 
            RowBox[{"-", "0.2"}]}], "}"}]}], "]"}], ",", "20"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\"\<arclength\\ns\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.4"}], "}"}]}], "]"}], ",", "20"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<radian-measure-angle.pdf\>\"", ",", 
     "\"\<radian-measure-angle.svg\>\""}], "}"}], ",", "%"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.897121342565987*^9, 3.897121476843628*^9}, {
  3.8971215087154427`*^9, 3.897121701486616*^9}, {3.897121957832447*^9, 
  3.8971220566798563`*^9}, {3.89712208772608*^9, 3.8971221631319513`*^9}, {
  3.8971222041651382`*^9, 3.897122225319951*^9}, {3.897129383746626*^9, 
  3.897129393453587*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"78b456a7-0b33-4275-991e-84b5392e189a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], CircleBox[{0, 0}, 0.7]}, 
   ArrowBox[NCache[{{0, 0}, {
      Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {0.5, 
      0.8660254037844386}}]], ArrowBox[{{0, 0}, {1, 0}}], 
   {PointSize[0.02], PointBox[{0, 0}]}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.02], Opacity[1.], FaceForm[Opacity[
       0.3]], LineBox[CompressedData["
1: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
X+fhzu4=
        "]]},
      Annotation[#, "Charting`Private`Tag$69836#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJwt1nk41dkfB/BbWkbd6SchtNHYs0aMaN7cwggVSQq/LMlSEWVtsyQh3K41
kiUzqbGVlCxJXzuXr3u7oixN00ilbEkR8zvN8/s8z3nO8/rnPJ/P55znnCPr
6mvjvpDBYGSR8X3W/jf4YPw/QlembvzuffZ6XiIsKRwvfDS2mfgoHPeKsJTh
uqgo67vP79H+6fL4ZgxLuSh/t3bf6Ox/WPpo+fA8SYuY1v1ckMQBloZL92sS
7/EuTIwbZ+Hl0w2Lv1tWXFyFK2WKpnfvlmsQH7P75foKljl86k+PqxHPet4Z
2u1tiWo3Xrkq8bvo6Tk2ZzcErR/tNxHbTluOejpZY9U3+rkycfgI2zhm3AbM
mWADJeI0Y+bJW1G2SGgaClUgfpMsFN4iZYf4/lWkQD6aSoMVhVkHUK/K95Mh
NnpwvlKp+yAYB+xV1xO/0BPf8Ku3I4Ls722TIr6mMG99kXMIhjpxyRLEGd7H
422SnCExr9i66t/+qApcnFyQ7lvW9SPx+nw54bBxV6TI5t1YRtwgyJtIqHKD
Tbed7dLv/WueeZgVdRibD4naMIh19er6KqWOgJnFIw3no0rLy3LS2AtCohMX
R4hjXAPnGUxv9NQ8Uxsm1nvjG7mi2xtHe6ZWDxLPbb3DUPY+BrGZs05txOMm
6nkOHF8YLKbXNBLf/b3klbb6CVTHDFc8Jg6/adajn3QCu+SOJ5YT23Erj5k4
+aH/bgPZYNIv3wRFh3F/eGVYuqYRf80RMnW2OwlVy4wpNrFr8YLt7lUnsdQg
tiKSeHZlv8An6hTYcTUlHsQ5k+MWYVKBsHh5xk2ZeKDo2stM4xAkvijZJUNc
q/Pyj3UlIZjkPBNdTZwtPMTKXhuKmPDFCouIGcU1dO50KBzO9wf1afGxzMdo
b37RGVz6kd0SRczstpfsZIbB2FRyRyhxXkivYsL2MDy9nJrmQ/zlvImEVWgY
OvMCWuyIgy03JrS+CUP49cf28sSPJOv6qSfhOGGYI1+lycfWZQqZJcGRaJZN
0SgintXY5H6sJBLS98NFs4lj9RSWKg9FgvdfllsEsVOqUVfu3gv4681hTTNi
M6tevyvqUShNMw9p0eAjMV4r0vP1RVgWBzWWqvOhcsnsxcTuWJRJ+WpmE6dU
5qcKR8Zi9x7X4Hjica35jTL3YyGaZZjnRTx62aDIcm0cPLTrnWSIk22nz94Y
jkPICsNT0Wp8rLbQqDMLjwe3/PEGQ1U+Tm7ZqaJzgI2Ur/7mCsSbLnxDtT8b
H7zlrUWIt9VF/rzjMhsO/nEzf23iI2vEoWtvLRuj7s7lMcQrDyHLT/4KErSt
2zpUSP2rdQNvjl+BqGtACJT5uHFQeGwmJgkadOeQPLGkaOXQfB5xQbg2k/js
hYmqhdVJMDMZ8e5RIudzxZ4Fyz4mQZr5ytqXeOHoqkkJm2QIdgQx0hT58PT3
s1KRTkEXO/FPrjwfAcZyZVtup2Jyj+bWUuKSGR2lLVQqEp3V/TnElREhgTp9
qQjU3x5mR2zBmczavCINC44LxPrl+NCnFoqp+afBz6tlw+uf+BgcNg2S3poO
DsfjUa8sH1MuRmOClqtgTJfKlxNf/vJU7ePrq4hwyzzCJh7wCNVbwshA32nb
AFPi+6fWF2/RzcDx9kONpTJ8uD3v3cjJy8DDubV65zbw0deWNGN0OhN2H6z3
fVvLR7rt86FTqlmor8hPjVrNx617qm/FzHJQodB87iDxM1f7x3f35oC5lGOi
QWx0Zz50j3MOVlpJ+/ZIkPt2qVtGXEgOxLF4szLxpUTZ84zCHIjORwfVi/Gx
3Eed+1okF43jR4RereTj82vbP1Of52J0LkTz4XI+eudGJa8dvwFunvdY6jce
CgfT8owFv2NzXC3T6T0PC28e2KaschtPY8beavTykNexRqmbVYT4uy/GNCge
dgn7WnlalcJUEM2IKOQhqCxTU/rFHfQzt701TeaBFXyTLXKoDNxJlxdPgngo
O+KjXbygHOuV/shd5cCDude2LR+i7uN6+H5BlT4PVM2w6QKlCoh55BrVSPDQ
x00+6Ff7EJPxhQ5Sn7rA5bpKJ/1cBemakm6H9i7yjuikWXdUo9lh49wvv3Vh
H9NhjjJ5hACJ8fri4C6Un6hQf9ZTi6Ha9cGPdnZh9tNkq0XpY7wc4Oh+WteF
d2WZ9irudRjcYMna9Z7GWSdFWznFJ9CtemgmVkmjesdQpOrzJ/AcfsBccolG
l7BR2e1oCrLn1jOqd9MoOXz7W7RxPWhr151OUjS0JI8svjtSD3NZA493FZ3o
a2aty73RgEXlt+Odt3XC/wK3J9q2EQk7lq0pauzAb90HKpnTjbgQK2b7M6sD
KRen6sLzm0DXF8bKUFxEzsgGVG9vxoNaXThu56JTSPzitv5mVEeoHNYvb4dp
iNwRQVgLXAy1Zl3V2mHF/vQqU6IVP8jUnS5JbQO/6GplU3krPuZZzbQuaUNz
e+f1/WZtMPeN+LEzsBX9vPD6tfw2pDtyY048awG96NGso0c7lqfWRjWgBRZN
XasjP7ZjX75IvWV6M9wNbX9xP8vF7Kl/3nSMNaFuic303OIOfDWeF7y2boJ3
wZohkYgOzAzVHKzNa4RYfnXNq0WdsFH4kp//rQGVyX2/h5zuRMQEe8B/fwM0
nVtjHUc6UTwwO3Urtx5Chu49YVo0duvrzZZPUTiZFMgS9qAhXrpF684EhWv5
S7Z/Ik6+98WgcJRCk+sPMoOeNJ4lDXXmvqVwdMLe9543jQezkhOx/RQqGz67
OvnQ6JVPlt/XQGHe1+taQQCNxpyngS3JFNTMHHfKXaBhEStlU3uFgl2WlWBZ
FI2RNVMLyxMofEnxMxwnnuTE/p19iUJmrnl2TTSNwsNvik+eofA5TeiBbRwN
U091+1WHKTwsfK96hkPy3TmVuMSFQgG1LtQ5ica5o9VZX50oMI+53diRTCNk
0N1gcD+F9AeyscxUGkcfD5wvsKAQqKdTkHGVxgfa2TPjVwq3BO2Csxk0Pq+Q
VLxsQvK/6jXonEnj0BUjRV9Q0Pj75kWFLLKeeK2nsyGFgWQTOeHrNNJN48Os
9SnYVg9mvScObrjjw9KlUHvi1CQ3m4bOv/83ClebFsiX5tD4HyF9s5g=
        "]]},
      Annotation[#, "Charting`Private`Tag$69863#1"]& ]}, {}}},
  Epilog->{
    StyleBox[
     InsetBox[
      FormBox["\"angle\\n\[Theta]\"", TraditionalForm], {0.38, 0.2}], {20}, 
     StripOnInput -> False], 
    StyleBox[
     InsetBox[
      FormBox["\"radius\\nr\"", TraditionalForm], {0.3, -0.2}], {20}, 
     StripOnInput -> False], 
    StyleBox[
     InsetBox[
      FormBox["\"arclength\\ns\"", TraditionalForm], {0.8, 0.4}], {20}, 
     StripOnInput -> False]}]], "Output",
 CellChangeTimes->{{3.897121354087632*^9, 3.897121436388749*^9}, {
   3.897121467604315*^9, 3.897121477209907*^9}, {3.8971215094164047`*^9, 
   3.897121706050744*^9}, 3.897122293977776*^9, {3.897129387602861*^9, 
   3.897129393917207*^9}},
 CellLabel->
  "Out[446]=",ExpressionUUID->"171abb04-4093-4a78-9bea-71ff13689c17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"radian-measure-angle.pdf\"\>", 
   ",", "\<\"radian-measure-angle.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.897121354087632*^9, 3.897121436388749*^9}, {
   3.897121467604315*^9, 3.897121477209907*^9}, {3.8971215094164047`*^9, 
   3.897121706050744*^9}, 3.897122293977776*^9, {3.897129387602861*^9, 
   3.897129394322364*^9}},
 CellLabel->
  "Out[447]=",ExpressionUUID->"012c9757-3209-45c9-81ef-c12649fb3d0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Unset", "[", "r", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta", "=", "2.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Thick", ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", ".7"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "theta", "]"}], ",", 
         RowBox[{"Sin", "[", "theta", "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.7", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"0.7", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "theta", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.3", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", 
        RowBox[{"0.3", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "theta", ",", "0"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.05"}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.25"}], "}"}]}], "]"}], ",", "20"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"TraditionalForm", "[", 
           RowBox[{"r", "==", 
            RowBox[{"Quantity", "[", 
             RowBox[{"2", ",", "\"\<Inch\>\""}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.3", ",", 
            RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], ",", "20"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"s", "==", 
           RowBox[{"Quantity", "[", 
            RowBox[{"4.6", ",", "\"\<Inch\>\""}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0.84", ",", "0.4"}], "}"}]}], "]"}], ",", "20"}], "]"}]}],
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<radian-measure-angle-example.pdf\>\"", ",", 
     "\"\<radian-measure-angle-example.svg\>\""}], "}"}], ",", "%"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.897122302809599*^9, 3.897122306471774*^9}, {
  3.897122669057432*^9, 3.897122681212816*^9}, {3.897129399762927*^9, 
  3.897129482642617*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"6eb498ae-7fdc-4bea-8d77-8de300bbd340"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], CircleBox[{0, 0}, 0.7]}, 
   ArrowBox[{{0, 0}, {-0.666276021279824, 0.7457052121767203}}], 
   ArrowBox[{{0, 0}, {1, 0}}], 
   {PointSize[0.02], PointBox[{0, 0}]}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.02], Opacity[1.], FaceForm[Opacity[
       0.3]], LineBox[CompressedData["
1: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
3iMMx8vI8H+o3DS6
        "]]},
      Annotation[#, "Charting`Private`Tag$75413#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0, 0.05}], FaceForm[Opacity[0.3]],
        ArrowBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$75440#1"]& ]}, {}}},
  Epilog->{
    StyleBox[
     InsetBox[
      FormBox[
       TagBox["\[Theta]", HoldForm], TraditionalForm], {0.25, 0.25}], {20}, 
     StripOnInput -> False], 
    StyleBox[
     InsetBox[
      FormBox[
       RowBox[{"r", "\[LongEqual]", 
         TemplateBox[{"2", "\"in\"", "inches", "\"Inches\""}, "QuantityTF", 
          SyntaxForm -> Mod]}], TraditionalForm], {0.3, -0.1}], {20}, 
     StripOnInput -> False], 
    StyleBox[
     InsetBox[
      FormBox[
       RowBox[{"s", "\[LongEqual]", 
         TemplateBox[{"4.6`", "\"in\"", "inches", "\"Inches\""}, "QuantityTF",
           SyntaxForm -> Mod]}], TraditionalForm], {0.84, 0.4}], {20}, 
     StripOnInput -> False]}]], "Output",
 CellChangeTimes->{
  3.8971223097865553`*^9, {3.897122676161042*^9, 3.897122681702636*^9}, {
   3.897129404879086*^9, 3.897129482953583*^9}},
 CellLabel->
  "Out[493]=",ExpressionUUID->"aebef547-de10-4c84-9509-87b502dd51e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"radian-measure-angle-example.pdf\"\>", 
   ",", "\<\"radian-measure-angle-example.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8971223097865553`*^9, {3.897122676161042*^9, 3.897122681702636*^9}, {
   3.897129404879086*^9, 3.897129483387692*^9}},
 CellLabel->
  "Out[494]=",ExpressionUUID->"a7ba0f59-be97-45fc-ae56-7cbad448b176"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta", "=", "2.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Thick", ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", ".7"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "theta", "]"}], ",", 
         RowBox[{"Sin", "[", "theta", "]"}]}], "}"}]}], "}"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.7", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"0.7", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "theta"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.3", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", 
        RowBox[{"0.3", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "theta"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.05"}], ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\[Tau]", ",", 
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.25"}], "}"}]}], "]"}], ",", "20"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"r", "==", 
           RowBox[{"Quantity", "[", 
            RowBox[{"2", ",", "\"\<Inch\>\""}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0.3", ",", 
            RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], ",", "20"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"s", "==", 
           RowBox[{"Quantity", "[", 
            RowBox[{"4.6", ",", "\"\<Inch\>\""}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"0.84", ",", "0.4"}], "}"}]}], "]"}], ",", "20"}], "]"}]}],
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<radian-measure-angle-example-negative.pdf\>\"", ",", 
     "\"\<radian-measure-angle-example-negative.svg\>\""}], "}"}], ",", "%"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.897122650970182*^9, 3.897122654992579*^9}, {
  3.897122701703225*^9, 3.897122723546101*^9}, {3.897129466398131*^9, 
  3.897129479204752*^9}},
 CellLabel->
  "In[486]:=",ExpressionUUID->"eb768e8a-f0c3-4ab1-9af1-90f7ff82f420"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Thickness[Large], CircleBox[{0, 0}, 0.7]}, 
   ArrowBox[{{0, 0}, {-0.666276021279824, 0.7457052121767203}}], 
   ArrowBox[{{0, 0}, {1, 0}}], 
   {PointSize[0.02], PointBox[{0, 0}]}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.02], Opacity[1.], FaceForm[Opacity[
       0.3]], LineBox[CompressedData["
1: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
3iMMx8vI8H+o3DS6
        "]]},
      Annotation[#, "Charting`Private`Tag$74898#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{-0.05, 0}], FaceForm[Opacity[
       0.3]], ArrowBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$74925#1"]& ]}, {}}},
  Epilog->{
    StyleBox[
     InsetBox[
      FormBox["\[Tau]", TraditionalForm], {0.25, 0.25}], {20}, StripOnInput -> 
     False], 
    StyleBox[
     InsetBox[
      FormBox[
       RowBox[{"r", "\[LongEqual]", 
         TemplateBox[{"2", "\"in\"", "inches", "\"Inches\""}, "QuantityTF", 
          SyntaxForm -> Mod]}], TraditionalForm], {0.3, -0.1}], {20}, 
     StripOnInput -> False], 
    StyleBox[
     InsetBox[
      FormBox[
       RowBox[{"s", "\[LongEqual]", 
         TemplateBox[{"4.6`", "\"in\"", "inches", "\"Inches\""}, "QuantityTF",
           SyntaxForm -> Mod]}], TraditionalForm], {0.84, 0.4}], {20}, 
     StripOnInput -> False]}]], "Output",
 CellChangeTimes->{{3.897122703755212*^9, 3.897122725221478*^9}, {
  3.897129469277893*^9, 3.897129479484563*^9}},
 CellLabel->
  "Out[488]=",ExpressionUUID->"d5e4a80e-66f1-4d88-963e-b19111152b42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"radian-measure-angle-example-negative.pdf\"\>", 
   ",", "\<\"radian-measure-angle-example-negative.svg\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897122703755212*^9, 3.897122725221478*^9}, {
  3.897129469277893*^9, 3.897129479902067*^9}},
 CellLabel->
  "Out[489]=",ExpressionUUID->"6b3a3b4c-01c5-4820-8036-7892a6891707"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897126602449493*^9, 3.897126783707008*^9}, {
  3.897126833786096*^9, 3.8971268619695*^9}, {3.897126898563727*^9, 
  3.897126905581338*^9}, {3.8971289461583*^9, 
  3.897128955513669*^9}},ExpressionUUID->"4ef2e92c-8d3f-4761-abca-\
d7a4cf49c2f1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8971289583485317`*^9, 
  3.8971289584247427`*^9}},ExpressionUUID->"d846112c-0dec-4ce4-b3de-\
02981e3decd4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"121", "*", "Degree"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "1.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<initial ray\\n(positive x-axis)\>\"", ",", "20"}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"2.5", ",", 
         RowBox[{"-", "0.9"}]}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-q2.pdf\>\"", ",", 
      "\"\<standard-position-q2.svg\>\""}], "}"}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.897126910705649*^9, 3.897126942500527*^9}, {
  3.897127455206293*^9, 3.897127574793604*^9}, {3.897128931008224*^9, 
  3.897128932744894*^9}, {3.89712949353051*^9, 3.897129509612137*^9}},
 CellLabel->
  "In[515]:=",ExpressionUUID->"6d4c107e-319f-4919-8f12-98ecaabb52a8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
qGumI2D1Ng24RjaE5TypaHjmntCMIw3+B6YXEoE=
        "]]},
      Annotation[#, "Charting`Private`Tag$78876#1"]& ]}, {}}, 
   ArrowBox[NCache[{{0, 0}, {(-5) Sin[31 Degree], 5 Cos[31 Degree]}}, {{0, 
      0}, {-2.575190374550271, 4.285836503510562}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {1.2924235601034673, 2.2703556959399}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
      "\"initial ray\\n(positive x-axis)\"", 20, StripOnInput -> False], 
      TraditionalForm], {2.5, -0.9}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.897126916863962*^9, 3.8971269428453712`*^9}, {
   3.8971274637281103`*^9, 3.897127575682396*^9}, {3.8971289078824577`*^9, 
   3.897128959999743*^9}, 3.897129013513241*^9, {3.897129494301498*^9, 
   3.8971295100692053`*^9}},
 CellLabel->
  "Out[517]=",ExpressionUUID->"d1ade5df-4fa8-40c4-9647-dcfccc61714c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"121", "*", "Degree"}], "+", 
    RowBox[{"90", "*", "Degree"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", ".05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "1.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-q3.pdf\>\"", ",", 
      "\"\<standard-position-q3.svg\>\""}], "}"}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.89712695258642*^9, 3.897126975459453*^9}, {
  3.897129029191238*^9, 3.897129050782648*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"c3b13620-e7c3-4b4e-90b3-d282038e2ff8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
zReDq5X2NiQ5IORRYK3W9yK4zCM2lElywuKxs+dZDYqAbcAkIaWF+Ny1zmth
64rgZkeZSiTJFUbROed+mxeC9OE3bK9JDuFml3moKFEATPlHj4W7KWhT4tRr
6cmHH9+39i3poaB8PnPXXY98KHuxb3c7YWr4p4LTVB5UnRfZ+5rkml2/9xSH
xOWC1fLT27NI7hlXMW9yEM0Gi/UeOW/HKPBZckz0XtsvEMBDV6TGSW6IlOtS
f/sLZuTUm1oJHw9ZIXC+A+Fh1mjctkmK+G9FjN7tTMDEgGAbktPCLTUEhQoz
4Ih9UioHyXFq17Kr2kUyQN+qLsOXMMt8x+7zo+mwfjebT+QMBXaWmzQ4H6VB
7IMKl28kJ44Y3dVNrUuFrPfd2wRIjqyaYQrfkkqFhfEvQR8I85gGsof/TYGb
PP1PHy2QHB/GrnxGMwUkb94o6SC8c81dh8GMZHBbdolDkeTUbpXKldufJ4Fi
zNubXCTXijL3P07vToQWz5x7poTjPp1aqyqbCPoBF+4VEy48K8lvsyIBuIUv
SFuQnOxewy9utSkGIp9TqxNIjl4if9H4Q1sU3OXk9p4n/MiwbTYiIBIkTI5y
S5Ncnmnl6Fi5MxwiObAijXCRvl5+x2AYNJ7iWfeH8I6RbbUjUaGwap/e2b0k
96/YEVNNiYeAoNJf+/eEC23lqBWzQWCaf+hlJuFfv06Yc6QFgpfH9ceDhI2u
z34RnPOHMXeTKzykdyxqpWvutPkMK6b0d0gSTol8d3P30k+QLHKq5yrhDcFS
vbte+cAqxuK7x4RLep7s2sHlBTeeeex1J6xymu+2gKcHnFy2LCWCcFRRbevG
zW7gcuT8fiQsrjb7bvspV1BjM/GuJqxu/bmYS9kJ5hNvjnUR5qTv7v6rbg88
KCwxRphrQd6/oNACnlE/DOf+/V1U7/B+NAUtD0FXOmH+b2FfP7arwZruq18o
wnmyIyvEctXwv8Ab/v/YJKjYYCHBFKsrxd/9u/6oemaaaLYFjqY3mPxb73XB
1fvRl+2RPn/u+L/Pczfmvpat5ITxRh5z/+6n3ZQhUCfjigvHooL+3a/D5Nmd
Dze64fI+H+l/+7nC9i3OwsMDlfdez/u3X6/S8w+fcXihw5YZ6X/PI+G2wZo5
TR/MF+P0ekr4lnIEmkT54gpa/WlNwsL1qNS96Ie8XRflZQinO6jZqJ31x4SH
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
D74GZcjv66fwgPYGzv4LefBwePYRDlAYfOmu62bSU0/mOVbjMIVlMvLqJqY5
UHKm4bnIJIUZ6tIXzGsR/N44PckjzG48wWYkibD66eabWlMUOkw/LNDwyYID
nElLnaYpHFyq6yKumQlPdgoGJs6Q/bw83ZDdkw5Wz/WFpWYptPhRcyVALh3u
JQh8/E542nGfqlXYD5BLL74SO0fhhewshsidNHAuDRO0XKBw1Hu+8M5UCizZ
f31/H2HOUJN6SbUU2HRur5jyXwrVS5ObmMnJsEnqL2PNIoWqvIqM1xZJkEL1
VT4gPMjSIKPSkgga1oUe5YSVwrJjuWUSYS71/Ig1jUKVoOMGb6l4qC3tel5B
2FuEq+SMTjzYHDmzkp9O4YfXXsfYneLg7x/r/iTCBSGbfUY4YmB2/AgsEhZV
TnHVqIoCPu/oVycYFNZGQmPOh0jY+zhsLJ2wHUN29P3mcAiPFWCfJZyXozI9
3R4G13yOrdvHpPBl250itaBQUBsZ59UmfOlk95tE/a/wKeE45Ua4l5umxS0S
AkIyG9uzCB8NX3L9zkgQlO9+ETVEWMz1ZEBubCCUckxtkqIojOJfxui58xk+
fB/9oU6YjXE08s2UL9wTMjz7hPDs5z1tEhY+MKmnVUp6GI6b3alsYnpCcHOZ
TCRhXQG3X9aOHkDfl+RPehxOOxwY3crhBndVuaZIz0Mp2Z/bLHe6wjmXNolu
wsOKt0pSDjnBuOZWQ9ITMSvysfok2INXQNlr0iOx3UjVRvWTBTw2H/UnPRNf
aHzoeGFsCqny1iGkh+Ix5udBlFGDJ8UWH/+xs99ijsu1y5jF8vvZv+v7Hgpn
Dc6boseRX2r/1nvw3brjZbcF9ixbvfnf5wXJq9m66Nmj99mCKtJLsWSPf6/K
VSd0lvzz9N/9yv76s3PNGVe0O/GB+99+5tL5DIa2uaH0znAf0kux2Or1fiUf
DzRZlOD59zwytxUcCOXxwuR1xyxJj0f7kkNiLK99MHRzeg3p+bi1WXpYg/UT
5s//2CpJOLlVeW+czWd80y+tzkNYy786fumcP3plJSiOkPfDcXPzhH5wINZe
N3iXS/jWW03hwuIgvKzqy29COEJCcqnzxq8YOcNvJEN4aH+wdR+EovrQ1MpV
hEsbFQ+eMgxDliK3s1/I/OQWDwxOpYTjQtbtMV3CgXmpPxXbI/C00Kf+nYTl
6+4a+i2LwvpUybYQMp9H7MQGpNVi8IpKXZ0dmW/t1xN3DyzEI8tZED1IuEap
VLvKNQFXuRxtaifnI3xlced9gUR0eDglKU7YK2zZuUiFJGzNPbskjZy/Je+s
bFd7paAq/wyHGmH5QD2TAJHveDDb6P7IPIU2ZrscxDO+44qPDUf5CC8b3jBz
oTcVjy3kdsiT8x4UWexrLp6OG5/mB5USfdBnC7i3kJeOm8zaf6oQ/pnMzW6l
8RPP+1vNKv+h8PK2b1pP7DLQdeqT3R6iN7Gsc2Kq5Vn4K92O7kv0aO3t0cYc
bcQ/1+uqVhLe8PLc74MziPtZmXat4xS2XvaxcXj7C31ep/zVHaVwKZNqkE/O
xtr1VhJZI2ReNzVz/mFk4yGW9fnrCb8/dTnfXzEHpbpXT+IQ0cOKiC9TLTm4
l/nCYJroZyxTROnlkjz0vsXS29hFnr930G4NlQJs1LnFPk/0uassT5LfvwAV
Th3nXUs47pIyZ89YAZZsycz/j+j7epcLf3XfFuJOUes8S6L/w1Ohw0plRVjf
NC92uZro6Y8Lt/zPlOIlu8NP/6sifnHDVfOEbynimychopUUKlrqfW0eLEXr
4aehc2UUfh9COvurMpzabqNqSPyp7vzGcaWCcryWNWaclEX0M7bWfuv2Ksxt
GJq8l0nmJzLZvU6pClvac27sziD+XBbE7mpWhZfhTe874o9yEuuE/mAVGq3g
TSDVEpuPfXoVd7Ma9Z84G8+HU7jxkHlBvV8N7k2UPi/kRuHvAxLdGXz1yKZ9
esz7HYWJDNf9fsfqUW9Cpo3tLfHLsQfRT2/W46MMr299LhSe6rokJhpejwoH
/OatX1B4PEZvxFq6AcU2dPrteULhVJGOb7ZOI/Zq+C/YXyP607C5pDC6Gf01
r2cGqlO42qmGz6C6GT2uptdnkDyyrK9cdOlcM+Y5r146dolC3ptrEiWgBRfa
Xp4XO0uhbeH9IuvqFnxVIlQvdpzCwrBVul9mWzH/7tP2AxuJvtfE2PHIdGC7
grbnsvUU9j8/7Bx1qwMtP0xnNawl/nFAnVfuRQcKBpTcf0Ty1fa2vCDTkg48
v/Sq/LsVFLKs8tMJ1uhEj5Ozg2dmmFjqrj6oeLwLqwT4DVrKmZidW8kucYX0
TqPGca1SJsbwZf2uNyA9NkZjqqOI5MlRu8tPLboxZPilfnMuExUMv/el+HWj
de059vgfTDT1sf22vacbjUVsrfu+MrEuRPtR4r0eHG378vKuJRNLsmi8cU69
uMO9LUbnCRN/mTvXfvbtxbnh4P7Lj5g4LzEa/yq6F4vFZ5wPmTIx1exP6vWa
XizUXHAv0WYiW+Dv3IFtfditNbHiniITuVZoSn9N7sPih9H+L9cw8ftR32nf
rt+oYTCRvTSQgQZyDZZrDw2ioMhQld1nBj7UrF8KsoNIX0vpLn5kYO6fRXuj
y4N42y2Wd9Cd5PlLszdSngxidMuDoNAXDORdqqol9XMQdar7yyMMGBim6CNf
JzuEG89qPW/ay8BdNfPRj9WG8f6v0N3dUXR8ovFKkro7is2crC8VvtHRp/rZ
F1fbUZRjGHSFB9Pxjmcm+zr3UXw+Ku6n70tHxwWNAf7vo8hdcH9XmhMdjzb/
fM7FMoYndpktqdKmk/chaK35YQzl1rGdKVhDx8M3M9YHpI5jRsuCXxknHSue
vDtXVDyOl7OXUJVsdAz7ckBxvHUcv3Q9nC9n0jArR971IMsE9gu+/BU2TMOd
giG875QmcEn11J6ybBr6JKjcj2qawOtbUjNDMmh42a9CLHB4AvcWrb1jkUrD
ddOdnu70CRQuzOTaFEPDonLfvZI8k3iojMvnyEcaqiFnyl+JSayzKmTOe9DQ
ye7i536ZScy7Y/4i5S0NnUGrqlp+Es1Pdv7e/YKGytkbt4SoT6IeLTWv7RkN
n88NHXDRnsTOqPScdxY09F5T8tbUeBKtnz3uOvGIhrPZJRIXH05ix/AT/mFT
Gq7tZAiKW0/i/wCyJUEa
        "]]},
      Annotation[#, "Charting`Private`Tag$57920#1"]& ]}, {}}, 
   ArrowBox[NCache[{{0, 0}, {(-5) Cos[31 Degree], (-5) Sin[31 Degree]}}, {{0, 
      0}, {-4.285836503510562, -2.575190374550271}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {0.5327616239217432, 2.3636304532086228}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.8971269616551447`*^9, 3.8971270001008368`*^9}, {
  3.897129033784671*^9, 3.8971290512753696`*^9}},
 CellLabel->
  "Out[366]=",ExpressionUUID->"e126ce29-c362-4bad-bc4d-0c9a11c1c6b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"121", "*", "Degree"}], "+", 
    RowBox[{"520", "*", "Degree"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"t", "+", "1"}], "]"}], 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "/", "10"}]}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"t", "+", "1"}], "]"}], 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "/", "10"}]}]}], "}"}], "5"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "1.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-q4.pdf\>\"", ",", 
      "\"\<standard-position-q4.svg\>\""}], "}"}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8971269863010893`*^9, 3.897127066670801*^9}, {
  3.897128868499941*^9, 3.897128871641309*^9}, {3.897128975830966*^9, 
  3.897128978132545*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"9ec6eb63-4f79-4312-8412-0559cc06c0a8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
fn12ZwAkEso2Rj+cQkOV+mh52QF4pTB3e8/7KbSIVB7UHOsHpp35ry82TeHt
jhrDIZl+yG94YQGq09icEima1dcLu93Gt7rIzGCPeVWEMGs3jAb1SjYqzyAP
uz/L384uuBg8nMmhO4PTjJJ2WbFdoMa47HrZcQZ3P/1CL/yvCzyMZBoTUmZw
H33R5KBDJ1we9FfZfmAWfwieOuvQ2Q4O1z5XLZ2cRTu9240i0e0gS+K9izCL
gtMBAlkP2sEy9GEau8EsckwaPbFnaocKm5KXL97Pop/c9Uf3TrYB5zauwcHl
WRw4+Gvx+vMWyBA//Pnsxjn0/y+XZ7NqC5TF/6fsxjmHAt8HK0L5WmCrS6ta
tugcHqz8E2Ie3ww1Vhc3rd+Yw227Pkh8qW+CqlJNrtzkOfxVtU1Oem8DZMl9
UHiaN4ePXv58+Ce5HvSd6wxFKubwu6xK3cv/6qFI8B7bkd451ElyerNuVAf6
Hwre0zbO45vGYTbz4Bpo0Ix9+U5jHqe+FbJ+2FQJe65H1nDozWMYV5dPc1AF
hD2Qc3c0IfhoYdGEWAV8dAnb+s92HiUgIfHTtXKIfLPRYfHDPM6NHs5giSoF
zxXf3+nB86jrYirzT7IUqslHPxp9nUcVUdquxsoSyNtk2mGRPI/lNE6t1Zli
eC/icfNW/TzeSZQe9zhdBAY7RVWM2+bxnOaw+ys/BBYlCapy7zw+W3TRrEwp
hEU9v8vNk/MoF9fJbE7Ph5KiX45GjBQUq/Rs03DPAbvK2y/+CFDQQoKdpueZ
CredSfeydlGwwUihIfBrCiTaVnXc3UNB+3mpev+iZGDO7leK3E/Bsjxpnrg/
iSDaVzn75BgFE4cd7zBMx8GbqZHktuMUlNlHaUk5GAvZHe96hSQo+J/v5zbK
rWgoos9dfy9FwXAmV0/ZuAh4cdbRrFueggklZ01+mX+AtUL76dr/KKgb+znA
Mek1KN8ozkxRoOCmicQH1FdeQKuYYtdRouBfYQOZDIo59PxJf8enTMG4BJGT
m76ew4tM3y9VX6bgzpnSIa/jNrglQufSZlUKRs6tuSbZeuNmuRsvP6pR0LFJ
PLgt8i2KNzHOchOddunC12Pp5v74XEBv54wWBSsezOcZhwajjHBYz8VrFKzb
mv2h4PQXvNiYm/L+OgW53kP5bfNItEk//olRl4J+/rKBZptiMMhjOUJej4LU
KI0Duaux+OyxmrWVPgX9rX6etJr/hrv9elZ9DShoCsV9LmPxuOPD1fMhhhR8
2qx5kdSbgOraZhByk4LJu+y8I1sSkT1yad7XiILMZ14VZVT/QuWdjLryxhR0
8LO9ZN2XgjObLFgYTYjnylrHHnWl4hcGQb10gg0Wk5Qi29KQtl/6su5tCn5Z
DYpcbErHirjR1hmCo2lNl6zqM5Bl0oBma0rBoNhK5S01mZj5aDx+gmCe/vBf
1RVZGLu5b1b1DgWjnI74/CzNxpPh0QUxBOdcWehPLsrBNYs03hmCt+0Rz28v
yMVXY++p+82I/AU2HduZl4e1rU0aVwk2Fnc79zQ7H38q8R8zIzj4RABtPaMA
H8fwez0gmCF6v3FoWiHqJH7UMifY5Pya97UUxCcexoFaBDPnNMt8JM6Z3l8N
Lx8juEMwkf91RxFmrrtYrhDzbw/3M/G7XozMC9kraQT7NLaEfmkrRpUrh+du
EazKmqGSrV2CZ65PKa8R8WWNqlP7W0pQv/0I8yuCT/z6wsehVYoMvIf3MxN8
i+J8Vrm5FLePSXx5ROhlSAobfa1Rhl1RsbbNhL6SU7GBXY1lWCg390WI4Cd7
trccUy9HutQrISMiP/tyzwu+bijHHckblt7cIvIR7vR7XrUCE8yWBX4S+axs
6J4xqK/AL9mcb/KIfGfP2To1XK3E3JQtV/IIP4QXHhO8VFeJtJ090a8J/zgu
ypcr11ZhI6uDjCHhr0Mdk3VNKtWI3122CxL+u2Ns/NuwphorKTTvh4Q/r51X
anKvrkH/Dcl7GAn/yv0895T3ci0WB+tSPQl/S4zy6iVW1eKJnm9KOuoUpDx2
iCVV1mGfJmdZPFEv+/Rqdjy9VI9nFscdZ65Q0GUttEygsh7dv/E5KRD19vyf
cZlaRQNe2Hs+/wRRrwLj2rXat5vQUNELNxH1PCXVbb8rqgnDyJJzVWeJ+ilX
BBKpCUsOsNfsPUPB1oEV6bsmzZhZpH6Hl+gfExP0OjXjFqwbSbridISI76W7
RUd4Cy6ov56uFqXglTxNdf3+Fpw5yKh9fh8FZRlLmW7ot2Jx1OZsZz4Kev3d
9oLvWhuqB3PpG3MT/eujVquLfxuGOMelSm+jYOrbwz6dTW3I7Pz5Zd4WCmqz
Dp16ptqOsxKJr7hX5nHfj7fL3kodWHFDTH6OMo97z+T0ZXp14D7lm6Y/yPM4
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
aT3Z5+h8Xw15rzlp1UllcjyUj3sS/B8r9h7I
        "]]},
      Annotation[#, "Charting`Private`Tag$58494#1"]& ]}, {}}, 
   ArrowBox[NCache[{{0, 0}, {5 Sin[11 Degree], (-5) Cos[11 Degree]}}, {{0, 
      0}, {0.954044976882724, -4.90813591723832}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {1.57162458338772, 0.763921779722236}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.897126990667283*^9, 3.897127067040146*^9}, 
   3.897128978571929*^9, 3.8971290801960373`*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"872a8df8-e814-42a6-aab3-54de788e4a6d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897127082449841*^9, 3.897127084324*^9}, 
   3.8971290069123297`*^9},ExpressionUUID->"7b360dcf-c77f-474c-bb61-\
c79196846e99"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.897151311849454*^9, 3.897151312839834*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"8f83871d-6d54-4dea-974f-1a1c22e7b916"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"121", "*", "Degree"}], "+", 
      RowBox[{"720", "*", "Degree"}], "-", 
      RowBox[{"90", "*", "Degree"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"t", "+", "1"}], "]"}], 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"-", "t"}], "]"}], "/", "20"}]}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"t", "+", "1"}], "]"}], 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"-", "t"}], "]"}], "/", "20"}]}]}], "}"}], "20"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"\[Theta]", "-", 
         RowBox[{"2", "*", "31", "*", "Degree"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "1.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-q1.pdf\>\"", ",", 
      "\"\<standard-position-q1.svg\>\""}], "}"}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8971290998745832`*^9, 3.8971291565268106`*^9}, {
  3.897151296784186*^9, 3.8971515723844633`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"9cb84a09-ebdb-41dc-89cb-62a3aeea89f2"],

Cell[BoxData["\<\"/Users/ant/Sites/JumpStartIM/assets/images/trig\"\>"], \
"Output",
 CellChangeTimes->{
  3.897128829965897*^9, {3.8971291029333973`*^9, 3.897129157260192*^9}, 
   3.897151307672769*^9, {3.897151338663948*^9, 3.8971514621910667`*^9}, {
   3.897151493376083*^9, 3.897151572887433*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"67a1ab20-8425-4d3a-9c8c-8afdbd8b23aa"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
vBnRUsdadPdSMTFW//NfzzWjGO7WuEgxKvbvWPAzl8lGFBfwg11QgYqFu7Jb
TyrWI9am7P6LZ6hY/AH79LoPdSjz5RN+nfNUjNFrI/JuohY9dv7P/vxlKqZI
0bplE1yD3NODxTbdoWLIKdbboaIS7XHP5nqrS8Xc9C785/2kArU3PeRh6FOx
ca+7JzT4y1GnxYj+s4dUbNvbX7LjxqWoZktR9KdHVEy8SvhJ0cYSVMolO5Zg
QcXe3NLJuEHMBe5CbQ5vnlCx7Bes0x/W8tGMZlXa9adU7Efg+5/q0XnIXqSh
neMZFUsflN6Tq5SLtFv8+6WdqZha3wXWnwKA8viVxV94ULFabusrm+XSUIbO
p9Ohb6nYRNcvRfsXKYhmc2fLJy/ifcwozaY3CWiXlNmkkR8Vo33nuU4O/Yyq
FhLGDgZQMX6dDW3RZ0ORRL9ESG0gFRNR4GrDPnmjkoHygcFgKmag+1vR5ZED
DJ1676z+gYq1bpM4WeTvBzuVJ39+DqVinYq1yT1vwwHSTF06wqjYEvv432N5
0bCrIaWb8pHQI+sll/CZ71Cd6ly5OYKKXf3A7Q6QCOc2JClt+ETFPrx8k+ok
kArVemIXxgmWf6lk/agzDdhWlwt/RxLnSwvZ++XTL0hbPF1oFkXF5tcF2kX0
MqHrrCjG+ZmK1dTWZTME/0Lc1w1HAgnWO0ftXe0G2NSo/J4aTcU2eosfjb2a
A0Gmug/1CHZwMpEwSc2F/qm+7zEEH/41YaW6JR+kR9yv1RA8v8b/TsWmAFKb
OAyGCR4R42QzqC+E4jNX6v/HbsmvHwXKFMPZnxe+1hK8JspzqT24BAxqWRq+
EPxjpltcnlkKHRqxOgYE74wfC0/SLoMUNovTdIIfV3YIy2SVw1BvmlUIsV/l
s3s1KnZXggqtf5Gb4MOPJzX/oCoYyXxVYUWc9w6nU0fQVBVcJDn9KSX00Gl9
UfX1fTWcmefv2UiwwtuMyb9yNWCZGIIhQr+9sl3RTZ01MPjpZP1tQu+PDf7X
F9xqIT9OO8KQiIdqmfbDHaJ1gO96GHornIpF2cRfPF1ZB0pBusLsRDwLPbQ4
vHc0QKWtU0pOCBXTCpbN+JXdADOPF00eEH7Q+BVX1W3QCBLJMvfsCL+kkD3r
pRObYMOPgrBufyp2f2XI9861ZuC+cX5dlvBbVn6uustiM0SV2Sl8J/yY8onP
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
RCC+hvI/9CY6Hmny+mtuYCwyU/neMkCwYoBL6lWReLQ3h7z3ezMdT3shlH5M
JwWdaLP3Vm+h40dbyp85fUtDpQal/O0E++rt/EOd+YU4VMtKrrTS8WR0kbVQ
4Q/a/8faP5ZgV9ONg3/eZKOFjdXW3QTHh19kMoZx9KOH25TcRsfrSH+1P/rk
oke8jk/YCfbsmtLROZ6PzErtfGeI729vT1M91lqAPJ6+ysgjeORdqMnOl0UI
6z878fR/rLKwxnOwBNVImIhvIfgox4AaX3kpOlBV/dif2J+i6MVoMesyFBX7
KGueOI+PUtlplR0VqIhxkQMj2GXTwAMrqER9997fMifOL8wxfqQ6tQqZbw7+
9pLQy0S9/dTYq2pkGfBjzr6BjnMoHbeh36pBiWOm6Cah71dPtdWD4rXoX9Rd
tx2E/g9rLZkX1mvRjRTGkmo1HZ++Z13rEluPvkXdFc0m4lvR+3Tu49MGxCIU
pM5bQccDMyo3p19qRFokOSeLUjpuyDdX2MxoQoYm19xsionz2NyN6s1vRuxO
7510Cum4Q6Tq2kBwC8q/InqlO4eOu1feKGxQaEM7P/mxxAAdZ7+fk5pMbkdf
04SE1f4S+6saWX1Z1I5MNpH+6vwm8iGzvY12tRPVff5yJO8nHY+QMHRt5+hC
/GEHtnP/oOPBaS13j5h1ofRkDRkDIj98J6/YFx7pRt4y1McP4+j4os5FKi2w
G/XPftyjReRThQA8wua7UfxLp/oJIv/W+tgMw4l7a9Lal38sAXRcbF6Da/Js
Hxqb+Zh+yYeO3x987j0W04eEIuL4nd7S8WyNuW1dbP3IkfePbrgrHX9nhtd+
Le1HinueTmRb0XFdqbVtyVcHEWfqTOtHVTpumXws8vrdEXQiJk/dUonIh8g9
km+yR9D8b4N7Ymfp+InzGXviBUZRsfzpe7dlid+rc/zK6x4l/HBBIlqQqD9Z
PJMHjcZRp5RFW90EOy4hurFJTnoKNR0473l0iB3/bnvy9VnDKcS39zGHfTc7
PvP+XxAKnEIx2Ub+eC1Rj4937NsxO4W0UzNPyv1ix12zpbnP/2CgK0Jzs632
7DhPVs+uW5IzqPDQv7Gdj9nx1hEVliD9GRT0LZQNGbPjTRFye/Pez6BtzSey
ZG6w4697p6THl2fQtWvWS31S7Di8OGLjUDSLTn/mcjzXTcMrrOgnlW/Po1Zj
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
/wNzsffm
        "]]},
      Annotation[#, "Charting`Private`Tag$26869#1"]& ]}, {}}, 
   ArrowBox[NCache[{{0, 0}, {5 Cos[31 Degree], 5 Sin[31 Degree]}}, {{0, 0}, {
      4.285836503510562, 2.575190374550271}}]], ArrowBox[{{0, 0}, {5, 0}}], 
   InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {1.763630453208623, 1.6672383760782568}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{
  3.897128829965897*^9, {3.8971291029333973`*^9, 3.897129157260192*^9}, 
   3.897151307672769*^9, {3.897151338663948*^9, 3.8971514621910667`*^9}, {
   3.897151493376083*^9, 3.8971515730001163`*^9}},
 CellLabel->
  "Out[109]=",ExpressionUUID->"928df7e4-46f5-4f1e-a27d-b7974638c174"]
}, Open  ]],

Cell[BoxData["\"\<\>\""], "Input",
 CellChangeTimes->{
  3.897129119267312*^9},ExpressionUUID->"62b6474e-3d28-4526-9131-\
2023897c92bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"180", "*", "Degree"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          SuperscriptBox["180", "\[EmptySmallCircle]"], "]"}], ",", "Large"}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "1.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-180.pdf\>\"", ",", 
      "\"\<standard-position-180.svg\>\""}], "}"}], ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"90", "*", "Degree"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", "0.05", "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          SuperscriptBox["90", "\[EmptySmallCircle]"], "]"}], ",", "Large"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "1.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-90.pdf\>\"", ",", 
      "\"\<standard-position-90.svg\>\""}], "}"}], ",", "%"}], "]"}], ";", 
  RowBox[{"r", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "270"}], "*", "Degree"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Theta]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.05"}], ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"-", 
           SuperscriptBox["270", "\[EmptySmallCircle]"]}], "]"}], ",", 
         "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "-", "1.8"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<standard-position-m270.pdf\>\"", ",", 
      "\"\<standard-position-m270.svg\>\""}], "}"}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.897128302871894*^9, 3.897128413577168*^9}, {
   3.8971295568334513`*^9, 3.897129562495528*^9}, {3.8971320204536247`*^9, 
   3.897132118445019*^9}, 3.897132190538597*^9, 3.897132265224556*^9},
 CellLabel->
  "In[800]:=",ExpressionUUID->"94525ac7-44f7-486d-b92f-5d351f1fbc5a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
B6NT5P8PwlgbxA==
        "]]},
      Annotation[#, "Charting`Private`Tag$122075#1"]& ]}, {}}, 
   ArrowBox[{{0, 0}, {-4, 0}}], ArrowBox[{{0, 0}, {4, 0}}], InsetBox[
    StyleBox[
     TagBox[
      SuperscriptBox["180", "\[EmptySmallCircle]"],
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {0.8, 2.2}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.8971283833074923`*^9, 3.897128414178587*^9}, {
   3.897128832343775*^9, 3.897128834231745*^9}, {3.897129557568615*^9, 
   3.897129562897469*^9}, {3.897132037294303*^9, 3.897132118948197*^9}, 
   3.8971321910328627`*^9, 3.8971322662821007`*^9},
 CellLabel->
  "Out[802]=",ExpressionUUID->"8394c54a-4a59-4b46-91d3-467d26b935aa"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{0.05}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
ISl1ZbkU1plwS4nEvpL/3xz7f5Mf4xM=
        "]]},
      Annotation[#, "Charting`Private`Tag$122221#1"]& ]}, {}}, 
   ArrowBox[{{0, 0}, {0, 4}}], ArrowBox[{{0, 0}, {4, 0}}], InsetBox[
    StyleBox[
     TagBox[
      SuperscriptBox["90", "\[EmptySmallCircle]"],
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {1.365685424949238, 1.965685424949238}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.8971283833074923`*^9, 3.897128414178587*^9}, {
   3.897128832343775*^9, 3.897128834231745*^9}, {3.897129557568615*^9, 
   3.897129562897469*^9}, {3.897132037294303*^9, 3.897132118948197*^9}, 
   3.8971321910328627`*^9, 3.897132266845796*^9},
 CellLabel->
  "Out[806]=",ExpressionUUID->"19c680fb-1333-4ada-a9cb-f6eacb299c2b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], Arrowheads[{-0.05, 0}], FaceForm[Opacity[
       0.3]], ArrowBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$122367#1"]& ]}, {}}, 
   ArrowBox[{{0, 0}, {0, 4}}], ArrowBox[{{0, 0}, {4, 0}}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{"-", 
       SuperscriptBox["270", "\[EmptySmallCircle]"]}],
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {0.23431457505076203, -2.365685424949238}]},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.8971283833074923`*^9, 3.897128414178587*^9}, {
   3.897128832343775*^9, 3.897128834231745*^9}, {3.897129557568615*^9, 
   3.897129562897469*^9}, {3.897132037294303*^9, 3.897132118948197*^9}, 
   3.8971321910328627`*^9, 3.897132267415181*^9},
 CellLabel->
  "Out[809]=",ExpressionUUID->"86c960b1-2c6f-4b3c-be66-efd0e8ee3f33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "9"}], "*", "90"}]], "Input",
 CellChangeTimes->{{3.897128495625351*^9, 3.897128505359054*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"afc2aabe-5ff7-4283-992f-dc8bef101325"],

Cell[BoxData[
 RowBox[{"-", "810"}]], "Output",
 CellChangeTimes->{{3.89712850273184*^9, 3.8971285059977713`*^9}},
 CellLabel->
  "Out[299]=",ExpressionUUID->"55253e74-a255-4091-9b0f-d47aa5dba77a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"PolarPlot", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
    RowBox[{"Ticks", "->", "None"}], ",", 
    RowBox[{"PolarTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"2", " ", "Pi"}], "-", 
            RowBox[{"Pi", "/", "4"}]}], ",", 
           RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PolarGridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"2", " ", "Pi"}], "-", 
            RowBox[{"Pi", "/", "4"}]}], ",", 
           RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", 
    RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<sketch-8.pdf\>\"", ",", "\"\<sketch-8.svg\>\""}], "}"}], 
    ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.897129727968314*^9, 3.8971298420945387`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"e115f4c8-eab2-4412-94d2-ddddb55b140f"],

Cell[BoxData[
 GraphicsBox[{{{{
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[NCache[{{0, 0}, {2^Rational[1, 2], 0}}, {{0, 0}, {
          1.4142135623730951`, 0}}]]}, 
      {GrayLevel[0.5], Opacity[0.4], LineBox[{{0, 0}, {1, 1}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[NCache[{{0, 0}, {0, 2^Rational[1, 2]}}, {{0, 0}, {
          0, 1.4142135623730951`}}]]}, 
      {GrayLevel[0.5], Opacity[0.4], LineBox[{{0, 0}, {-1, 1}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[NCache[{{0, 0}, {-2^Rational[1, 2], 0}}, {{0, 
          0}, {-1.4142135623730951`, 0}}]]}, 
      {GrayLevel[0.5], Opacity[0.4], LineBox[{{0, 0}, {-1, -1}}]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[NCache[{{0, 0}, {0, -2^Rational[1, 2]}}, {{0, 0}, {
          0, -1.4142135623730951`}}]]}, 
      {GrayLevel[0.5], Opacity[0.4], 
       LineBox[{{0, 0}, {1, -1}}]}}, {}}, {}, {}, {}, {{{
       LineBox[NCache[{
         Scaled[{0, 0}, {2^Rational[1, 2], 0}], 
          Scaled[{0.006, 0.}, {2^Rational[1, 2], 0}]}, {
         Scaled[{0, 0}, {1.4142135623730951`, 0}], 
          Scaled[{0.006, 0.}, {1.4142135623730951`, 0}]}]], 
       LineBox[{
        Scaled[{0, 0}, {1, 1}], 
         Scaled[{0.004242640687119285, 0.004242640687119285}, {1, 1}]}], 
       LineBox[NCache[{
         Scaled[{0, 0}, {0, 2^Rational[1, 2]}], 
          Scaled[{0., 0.006}, {0, 2^Rational[1, 2]}]}, {
         Scaled[{0, 0}, {0, 1.4142135623730951`}], 
          Scaled[{0., 0.006}, {0, 1.4142135623730951`}]}]], 
       LineBox[{
        Scaled[{0, 0}, {-1, 1}], 
         Scaled[{-0.004242640687119285, 0.004242640687119285}, {-1, 1}]}], 
       LineBox[NCache[{
         Scaled[{0, 0}, {-2^Rational[1, 2], 0}], 
          Scaled[{-0.006, 0.}, {-2^Rational[1, 2], 0}]}, {
         Scaled[{0, 0}, {-1.4142135623730951`, 0}], 
          Scaled[{-0.006, 0.}, {-1.4142135623730951`, 0}]}]], 
       LineBox[{
        Scaled[{0, 0}, {-1, -1}], 
         Scaled[{-0.004242640687119285, -0.004242640687119285}, {-1, -1}]}], 
       LineBox[NCache[{
         Scaled[{0, 0}, {0, -2^Rational[1, 2]}], 
          Scaled[{0., -0.006}, {0, -2^Rational[1, 2]}]}, {
         Scaled[{0, 0}, {0, -1.4142135623730951`}], 
          Scaled[{0., -0.006}, {0, -1.4142135623730951`}]}]], 
       LineBox[{
        Scaled[{0, 0}, {1, -1}], 
         Scaled[{0.004242640687119285, -0.004242640687119285}, {1, -1}]}]}, 
      LineBox[{}], {
       InsetBox["0", NCache[
        Offset[{8, 0}, {2^Rational[1, 2], 0}], 
         Offset[{8, 0}, {1.4142135623730951`, 0}]], NCache[
        ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "4"], NCache[
        Offset[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {1, 1}], 
         Offset[{5.656854249492381, 5.656854249492381}, {1, 1}]], NCache[
        ImageScaled[{
          Rational[1, 2] (1 - 2^Rational[-1, 2]), 
           Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
         ImageScaled[{0.14644660940672627`, 0.14644660940672627`}]],
        Background->Automatic], InsetBox[
        FractionBox["\[Pi]", "2"], NCache[
        Offset[{0, 8}, {0, 2^Rational[1, 2]}], 
         Offset[{0, 8}, {0, 1.4142135623730951`}]], NCache[
        ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "4"], NCache[
        Offset[{(-4) 2^Rational[1, 2], 4 2^Rational[1, 2]}, {-1, 1}], 
         Offset[{-5.656854249492381, 5.656854249492381}, {-1, 1}]], NCache[
        ImageScaled[{
          Rational[1, 2] (1 + 2^Rational[-1, 2]), 
           Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
         ImageScaled[{0.8535533905932737, 0.14644660940672627`}]],
        Background->Automatic], 
       InsetBox["\[Pi]", NCache[
        Offset[{-8, 0}, {-2^Rational[1, 2], 0}], 
         Offset[{-8, 0}, {-1.4142135623730951`, 0}]], NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "4"], NCache[
        Offset[{(-4) 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {-1, -1}], 
         Offset[{-5.656854249492381, -5.656854249492381}, {-1, -1}]], NCache[
        ImageScaled[{
          Rational[1, 2] (1 + 2^Rational[-1, 2]), 
           Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
         ImageScaled[{0.8535533905932737, 0.8535533905932737}]],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], NCache[
        Offset[{0, -8}, {0, -2^Rational[1, 2]}], 
         Offset[{0, -8}, {0, -1.4142135623730951`}]], NCache[
        ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]],
        Background->Automatic], InsetBox[
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "4"], NCache[
        Offset[{4 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {1, -1}], 
         Offset[{5.656854249492381, -5.656854249492381}, {1, -1}]], NCache[
        ImageScaled[{
          Rational[1, 2] (1 - 2^Rational[-1, 2]), 
           Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
         ImageScaled[{0.14644660940672627`, 0.8535533905932737}]],
        Background->Automatic]}, 
      CircleBox[{0, 0}, NCache[2^Rational[1, 2], 1.4142135623730951`], 
       NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.897129779911779*^9, 3.897129842659383*^9}, 
   3.897130002521757*^9},
 CellLabel->
  "Out[588]=",ExpressionUUID->"5d1f1e5f-fcc1-4026-8e5b-66f247a8caea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"15", 
    RowBox[{"Pi", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", "None"}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"3.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "0", "]"}], ",", 
           RowBox[{"Sin", "[", "0", "]"}]}], "}"}]}]}], "}"}], "]"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"3.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], "]"}], 
     "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<sketch-8-2.pdf\>\"", ",", "\"\<sketch-8-2.svg\>\""}], "}"}],
     ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.897129863424287*^9, 3.89712989401062*^9}, {
  3.897129925828627*^9, 3.897130008003683*^9}, {3.897130178997764*^9, 
  3.897130181727598*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"010d6bb3-7909-428d-b600-7b5425600af0"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {2.7817340919877798`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.9669830399023622`, 1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., 2.7817340919877798`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.9669830399023622`, 1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-2.7817340919877798`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.9669830399023622`, -1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., -2.7817340919877798`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {
          1.9669830399023622`, -1.9669830399023622`}}]}}, {}}, {}, {{}, {}, 
      TagBox[
       {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJw0l3k8lV+0xokoQ4NKCikaJSX006ClFFEJIWQWFREZGpQpRURCpQghCZnn
sMzzPM+O8RgPDo7x5L73cz/XP3ztc953r2c9a+21Dxg9VjXZwMDA0MPMwPC/
v//vhwT//9e/oH/h4swkEJZ/EXj2hy6wBSV6am0iAddeE7v1aAuogN10h20k
2FPx4I915iv46D90ee9+Emz/z0dnutUbzmUdIPUKkSC0x+bUwRpfsIO9Fp+O
kOBfzAPXnAQ/GMn9JdIuSgKK5W+GmKef4evNhgMpF0jQ7CGyrMAVAhfGT/Gx
yJDA5MevL4dXQ+Fkh3GqoiwJHA5wdVhRwyB6+OLnaAUSZG50VbDvCQeJNnu2
dHVi3X7kq19mFJDdSnoCNElwPNCCZpT4Cw7fPMFgcpcEw1UfUoOio6Fs0yB7
hwEJ1BrL2i9/i4Gww+ySW81JMOBrLXLLNR4u1o3bP7UgwWL5dxbFVwmQom+b
U/+YBPQal723LySCw+7aExq2JLjAWf0SpJKgaPyevKs9CU405vW/TE+CqD3i
MqHPSGC68+3BMYlksEn6Fhv7kgSfrly1uXE6Bci2DzmCHEkQcefk58tJKeB1
r/OogzMJnrI2FZucSoWMmF/WnG4k+O/gucdiJ9MgsUBY5bknCRrE7rA1iGbA
3o7B4CkvQm8vw1DBhAyoc8vWV/UmgYfYoOf3k5mgzfPh2NQHIt5j29w4xbIA
v/HsF/pIArH0y2GMyVnQxND2SMGPBDeGV0/yi2dDZF7MqGkACaQ4NYvKJf/C
0d0FrHqfSOCUVdd4J+MvZFhu0b36mQRTt59ZcJzNARHdTBLfFxKMrt7nGcnO
gdD7c55DBHf9NdAcupALvJxMasGBJDhKr09iwVxQaTorceUrCfTWmqJvXMqD
o7eXhboJXpM+XZBWlAc6V5N5730jQQyTkeMlOYQrE7JWwwRLM5waojQhNHD3
Tt0OIkGk1k9y/6l82OXL65VAsGNTX13f03wgKcZdXCK4NP1z50xePux+rr5+
IpgEbMJGGTtZCoD1+2yRMsGiXhG7rt8sgHdBVq8NCP5R8SbSP6AA9tW2SegS
PJBP56J0FcD0zst1cgTb+ldu1RYqhITRPgV+gvew2Cu0mRWCxaPFIBLxvidd
apYmyYVw3Wkox5dg6kl3EeaVQuCv5Yk8QbBY65JYyqUiGB/iVcgg4vFPMRR5
8q4IDGW8Ik4QfJlfrkKmoQgO6e+N9SX0cJFcTNu3pxi2NvndIRH6mSr4h7Ib
FoOyanMYH8GdoizirL+L4Xl5s+NVQu+J8M3822eLweJ+2Jg2kR+36ENsx86W
wIVMrQ4dIn/25MQoJZcS6Iw9K3edyG85e0OIS0UJxMUUPJsi/PBok63KFu1S
iJa4cfKHLwna4pSN74eXQqVT4ZVLhH/6Ptg7VY+Xgs/Qqcdy70lgN3ztdZZD
GTy5WWAXS/gxQr01X6a4DNYlLfPWPEhwrehxaiNHOfjaKq4YvyFBhr/v/V0h
5bBlvKLv+WsSbNN/71AyUg5K0iyTDi4k2I+vKI4nK8AxR03vyisSFHPKBnIU
VEBapVUGmwMJYsWOC5I2V0LgV13+XKKePPhPJ/1VrQSv7jzasA0Jbk1QXN8N
VcJ655KujjUJ4jRNdjucqAKdap+sPEsS9D9+qWZjXwXDpbpn5B8S9XBLwcx+
UzUUR/76ZapL+CGt8H6uSA08UTvPdUGbBKeuFP/stKsBm8m0K3QNEszs7qxa
zauB9bdTk5eVSTBns9/imkotPNXxz++8RII7lL1yjPZ14Gl7yl7qANEPIv7Y
N/TVg5S6Eu9OfiI/JUledMYG2L1RZKCHh6iXoV3DRw82wOqXZxXnif55pm+9
/uWDBrDc/NTw0lofdG0actw12wDcx97f3/OnD6JrBYLGGJtA/s68g194H7RN
qbsvCTXBoxf57uQvfeBqt8GYWa4JgoSKnx5y7YP7j4VUuTybIP5ujuGMWh9o
m96Y3sDVDLYKDPvz53ohuNiBlftAC9CYtukvjvQC9fL66YHLLaDvf9mKrbMX
Cj2yp6PvtYBm7MGNxdgL8obgdii6BYy8BEbc3vWCqjR5olW0FT51/bOW5u6F
5cIzksvn2uBwpInGx509YL4pK0r0Zge8vL75YBBTD5TU/h7RteiAYu5ZDVdq
N6Tc26z82rsDPsW2rY7WdYNXxV3OxJoOCLO+mbb7XTfU31iV9L7ZCRI/9Oj/
5rvAqVpZ+8z1LqhduybV398FBv51vBlmXZBUUHr4R20XhFj643HPLrgzBP9l
/+qCRa8jfDPlXUAub+hS0ewi8mhzov9qN3wfitDlT+kE9/7JlivSPbC6xYa1
93snnPCWj6He7QH5RcGOlx6d0FmStNfvRQ98P2nJra7bCWbJbhd/ZvRA6nu2
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
         "]]},
       Annotation[#, "Charting`Private`Tag$92470#1"]& ]}, {}, {{{
        LineBox[{
         Scaled[{0, 0}, {2.7817340919877798`, 0.}], 
          Scaled[{0.006, 0.}, {2.7817340919877798`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.9669830399023622`, 1.9669830399023622`}], 
          Scaled[{0.004242640687119285, 0.004242640687119285}, {
           1.9669830399023622`, 1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., 2.7817340919877798`}], 
          Scaled[{0., 0.006}, {0., 2.7817340919877798`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.9669830399023622`, 1.9669830399023622`}], 
          Scaled[{-0.004242640687119285, 
           0.004242640687119285}, {-1.9669830399023622`, 
           1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-2.7817340919877798`, 0.}], 
          Scaled[{-0.006, 0.}, {-2.7817340919877798`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.9669830399023622`, -1.9669830399023622`}], 
          Scaled[{-0.004242640687119285, -0.004242640687119285}, \
{-1.9669830399023622`, -1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., -2.7817340919877798`}], 
          Scaled[{0., -0.006}, {0., -2.7817340919877798`}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.9669830399023622`, -1.9669830399023622`}], 
          Scaled[{0.004242640687119285, -0.004242640687119285}, {
           1.9669830399023622`, -1.9669830399023622`}]}]}, 
       LineBox[{}], {
        InsetBox["0", Offset[{8, 0}, {2.7817340919877798, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "4"], NCache[
         Offset[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {
           1.9669830399023622`, 1.9669830399023622`}], 
          Offset[{5.656854249492381, 5.656854249492381}, {1.9669830399023622`,
            1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 - 2^Rational[-1, 2]), 
            Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
          ImageScaled[{0.14644660940672627`, 0.14644660940672627`}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 2.7817340919877798}], 
         NCache[ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"], NCache[
         Offset[{(-4) 2^Rational[1, 2], 4 
            2^Rational[1, 2]}, {-1.9669830399023622`, 1.9669830399023622`}], 
          Offset[{-5.656854249492381, 
           5.656854249492381}, {-1.9669830399023622`, 1.9669830399023622`}]], 
         NCache[ImageScaled[{
           Rational[1, 2] (1 + 2^Rational[-1, 2]), 
            Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
          ImageScaled[{0.8535533905932737, 0.14644660940672627`}]],
         Background->Automatic], 
        InsetBox["\[Pi]", Offset[{-8, 0}, {-2.7817340919877798, 0.}], NCache[
         ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "4"], NCache[
         Offset[{(-4) 2^Rational[1, 2], (-4) 
            2^Rational[1, 2]}, {-1.9669830399023622`, -1.9669830399023622`}], 
          Offset[{-5.656854249492381, -5.656854249492381}, \
{-1.9669830399023622`, -1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + 2^Rational[-1, 2]), 
            Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
          ImageScaled[{0.8535533905932737, 0.8535533905932737}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], 
         Offset[{0, -8}, {0., -2.7817340919877798}], NCache[
         ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "4"], NCache[
         Offset[{4 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {
           1.9669830399023622`, -1.9669830399023622`}], 
          Offset[{5.656854249492381, -5.656854249492381}, {
           1.9669830399023622`, -1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 - 2^Rational[-1, 2]), 
            Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
          ImageScaled[{0.14644660940672627`, 0.8535533905932737}]],
         Background->Automatic]}, 
       CircleBox[{0, 0}, 2.7817340919877798, 
        NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, {}}, 
   ArrowBox[{{0, 0}, {3.5, 0.}}], 
   ArrowBox[{{0, 0}, {2.474873734152916, -2.474873734152916}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.897129864605927*^9, 3.897129894367959*^9}, {
   3.897129948157555*^9, 3.897130008423813*^9}, 3.8971301822705936`*^9},
 CellLabel->
  "Out[594]=",ExpressionUUID->"c7285a43-2502-45a0-8099-1a84577f3199"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "5"}], 
    RowBox[{"Pi", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", "None"}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "3"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "0", "]"}], ",", 
           RowBox[{"Sin", "[", "0", "]"}]}], "}"}]}]}], "}"}], "]"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<sketch-8-3.pdf\>\"", ",", "\"\<sketch-8-3.svg\>\""}], "}"}],
     ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8971302681273518`*^9, 3.89713035167866*^9}},
 CellLabel->
  "In[617]:=",ExpressionUUID->"267e5463-ee36-45a5-8639-2e263100dd59"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.2733940490810571`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0.6366970245405286, 1.1027915955321237`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-0.6366970245405286, 1.1027915955321237`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.2733940490810571`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-0.6366970245405286, -1.1027915955321237`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {
          0.6366970245405286, -1.1027915955321237`}}]}}, {}}, {}, {{}, {}, 
      TagBox[
       {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
xqETe6ko6pi5ytlQhIdia4Y37qPickvPUakLxbj7T7SeLeHjdyqHS72LcSut
0a6FsGzISJtxVTFajl5/5SVLxbcVLywzTpdg2te7r7oJvzqy+OMmce/d/3Tz
Pmk5Ku7Zpf9hB5bgnlgnjQrCVm8+C6UeL0Xxd2ONbPupeDraqNvdpRQLWY7R
NAjbKYV76hH3XIbWjtgAwt2xBVyKy6X47THj70bCwhQBB8EjiK/37fi24QAV
q0kc8cyPEA1ynj86TthSavzNcg7ijqc+ZtGEX01WlC9vK8Not+7iRsI0XftD
bkfLMD+7I32RcNqTxB9MBmVYy9d1XFCeir09vj/8HxP3Sjkl0+OE/51T3C8U
XoZRB00EjQgfE6iPT84rQ/7F93ceEjYUMFeB7jI0n9C7HEB4wk1IgPyzDLeL
TzbEET67xMVpt7UcI81SerMIV0Tr7OA8VI4sjGyu5YSLtzBdStEtxxwmw4xG
wl/M5QIvO5bjWfZ1Th2Ej3PPDP0MKcfOa9c7ugjfF9FUjMkux4sT5OL/XLze
wl+9sxwfKjYc/m8+X7ES5e+PclR3izrz3/N+5VD3pPJW4PbQjIEywkVUyxsW
Byuw5bfNhv/W8yKj/YWQdgWu1h0qjv1vP5v3vibfr0C1RnsGf8LG990ehLyp
QM873u0PCHfXNB7QzazAxtweWQPCes+EygU6KnD6JolfiXDLR1vh4e8VaE8a
9OMnnPm5/kTi5krk146XnSXed30fV/oOhUo8+iwPywj30k/rfdCrxNR8o5Ov
CcecLdgt6lSJobs7kgwIq2vVb499V4lhC8brxAgLu1UdlCqtxCPCZ89RiXjY
vufvtfSRSgzYLetrSDjos1Zbo0QVar4r8+Um/FKDncNEpQqvBVTf/y/+9u6S
Of7jThWe3HTx7zbCbNpl5pLpVThlaxyBRPzKFhWpVHVUoewvdhEzwrqPZJlv
LlXhNwnLjjAi/jne3aelKlWjy3Qq4z7CAU+LVq8aV+MNgTq+UiKfXlbfaWTy
qEaWhWQKici3DHmynUV1Nbaayq02E/kquvUu25nLNWjy/tv+M4T1PruzMDjU
YE4b15nM3VQM/uv8pCy0Bj/MzS17E/l/yr6xRKW/Bvnae1P+7iLWH5QZ5mhZ
iy853xVqEmbXZvBV9q3Ft5sjot/vpGL58umcbV9rcYardk6WqD+hw0zRNd9r
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
AD4ytug=
         "]]},
       Annotation[#, "Charting`Private`Tag$97110#1"]& ]}, {}, {{{
        LineBox[{
         Scaled[{0, 0}, {1.2733940490810571`, 0.}], 
          Scaled[{0.006, 0.}, {1.2733940490810571`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {0.6366970245405286, 1.1027915955321237`}], 
          Scaled[{0.003, 0.005196152422706632}, {0.6366970245405286, 
           1.1027915955321237`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-0.6366970245405286, 1.1027915955321237`}], 
          Scaled[{-0.003, 0.005196152422706632}, {-0.6366970245405286, 
           1.1027915955321237`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.2733940490810571`, 0.}], 
          Scaled[{-0.006, 0.}, {-1.2733940490810571`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {-0.6366970245405286, -1.1027915955321237`}], 
          Scaled[{-0.003, -0.005196152422706632}, {-0.6366970245405286, \
-1.1027915955321237`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0.6366970245405286, -1.1027915955321237`}], 
          Scaled[{0.003, -0.005196152422706632}, {
           0.6366970245405286, -1.1027915955321237`}]}]}, 
       LineBox[{}], {
        InsetBox["0", Offset[{8, 0}, {1.2733940490810571, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "3"], NCache[
         Offset[{4, 4 3^Rational[1, 2]}, {0.6366970245405286, 
           1.1027915955321237`}], 
          Offset[{4, 6.928203230275509}, {0.6366970245405286, 
           1.1027915955321237`}]], NCache[
         ImageScaled[{
           Rational[1, 4], 
            Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.25, 0.0669872981077807}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
         Offset[{-4, 4 3^Rational[1, 2]}, {-0.6366970245405286, 
           1.1027915955321237`}], 
          Offset[{-4, 6.928203230275509}, {-0.6366970245405286, 
           1.1027915955321237`}]], NCache[
         ImageScaled[{
           Rational[3, 4], 
            Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.75, 0.0669872981077807}]],
         Background->Automatic], 
        InsetBox["\[Pi]", Offset[{-8, 0}, {-1.2733940490810571, 0.}], NCache[
         ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
         Offset[{-4, (-4) 
            3^Rational[1, 2]}, {-0.6366970245405286, -1.1027915955321237`}], 
          Offset[{-4, -6.928203230275509}, {-0.6366970245405286, \
-1.1027915955321237`}]], NCache[
         ImageScaled[{
           Rational[3, 4], 
            Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.75, 0.9330127018922193}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
         Offset[{4, (-4) 3^Rational[1, 2]}, {
           0.6366970245405286, -1.1027915955321237`}], 
          Offset[{4, -6.928203230275509}, {
           0.6366970245405286, -1.1027915955321237`}]], NCache[
         ImageScaled[{
           Rational[1, 4], 
            Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.25, 0.9330127018922193}]],
         Background->Automatic]}, 
       CircleBox[{0, 0}, 1.2733940490810571, 
        NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, {}}, 
   ArrowBox[{{0, 0}, {1.5, 0.}}], 
   ArrowBox[{{0, 0}, {0.75, 1.299038105676658}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.8971302770556927`*^9, 3.897130352079336*^9}},
 CellLabel->
  "Out[618]=",ExpressionUUID->"56bd5d11-d9da-4943-ae1d-66ca8eae62b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"13", 
    RowBox[{"Pi", "/", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", "None"}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "0", "]"}], ",", 
           RowBox[{"Sin", "[", "0", "]"}]}], "}"}]}]}], "}"}], "]"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<sketch-8-6.pdf\>\"", ",", "\"\<sketch-8-6.svg\>\""}], "}"}],
     ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.897130550532866*^9, 3.897130576539237*^9}},
 CellLabel->
  "In[659]:=",ExpressionUUID->"1c9f8236-8bf0-4bce-8872-87f6327b1969"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {2.537934185020451, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {2.197915477360666, 1.2689670925102254`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.2689670925102254`, 2.197915477360666}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., 2.537934185020451}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.2689670925102254`, 2.197915477360666}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-2.197915477360666, 1.2689670925102254`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-2.537934185020451, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-2.197915477360666, -1.2689670925102254`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.2689670925102254`, -2.197915477360666}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., -2.537934185020451}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.2689670925102254`, -2.197915477360666}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {
          2.197915477360666, -1.2689670925102254`}}]}}, {}}, {}, {{}, {}, 
      TagBox[
       {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$105267#1"]& ]}, {}, {{{
        LineBox[{
         Scaled[{0, 0}, {2.537934185020451, 0.}], 
          Scaled[{0.006, 0.}, {2.537934185020451, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {2.197915477360666, 1.2689670925102254`}], 
          Scaled[{0.005196152422706632, 0.003}, {2.197915477360666, 
           1.2689670925102254`}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.2689670925102254`, 2.197915477360666}], 
          Scaled[{0.003, 0.005196152422706632}, {1.2689670925102254`, 
           2.197915477360666}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., 2.537934185020451}], 
          Scaled[{0., 0.006}, {0., 2.537934185020451}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.2689670925102254`, 2.197915477360666}], 
          Scaled[{-0.003, 0.005196152422706632}, {-1.2689670925102254`, 
           2.197915477360666}]}], 
        LineBox[{
         Scaled[{0, 0}, {-2.197915477360666, 1.2689670925102254`}], 
          Scaled[{-0.005196152422706632, 0.003}, {-2.197915477360666, 
           1.2689670925102254`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-2.537934185020451, 0.}], 
          Scaled[{-0.006, 0.}, {-2.537934185020451, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {-2.197915477360666, -1.2689670925102254`}], 
          Scaled[{-0.005196152422706632, -0.003}, {-2.197915477360666, \
-1.2689670925102254`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.2689670925102254`, -2.197915477360666}], 
          Scaled[{-0.003, -0.005196152422706632}, {-1.2689670925102254`, \
-2.197915477360666}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., -2.537934185020451}], 
          Scaled[{0., -0.006}, {0., -2.537934185020451}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.2689670925102254`, -2.197915477360666}], 
          Scaled[{0.003, -0.005196152422706632}, {
           1.2689670925102254`, -2.197915477360666}]}], 
        LineBox[{
         Scaled[{0, 0}, {2.197915477360666, -1.2689670925102254`}], 
          Scaled[{0.005196152422706632, -0.003}, {
           2.197915477360666, -1.2689670925102254`}]}]}, 
       LineBox[{}], {
        InsetBox["0", Offset[{8, 0}, {2.537934185020451, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "6"], NCache[
         Offset[{4 3^Rational[1, 2], 4}, {2.197915477360666, 
           1.2689670925102254`}], 
          Offset[{6.928203230275509, 4}, {2.197915477360666, 
           1.2689670925102254`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), Rational[
            1, 4]}], ImageScaled[{0.0669872981077807, 0.25}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "3"], NCache[
         Offset[{4, 4 3^Rational[1, 2]}, {1.2689670925102254`, 
           2.197915477360666}], 
          Offset[{4, 6.928203230275509}, {1.2689670925102254`, 
           2.197915477360666}]], NCache[
         ImageScaled[{
           Rational[1, 4], 
            Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.25, 0.0669872981077807}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 2.537934185020451}], 
         NCache[ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], NCache[
         Offset[{-4, 4 3^Rational[1, 2]}, {-1.2689670925102254`, 
           2.197915477360666}], 
          Offset[{-4, 6.928203230275509}, {-1.2689670925102254`, 
           2.197915477360666}]], NCache[
         ImageScaled[{
           Rational[3, 4], 
            Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.75, 0.0669872981077807}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], NCache[
         Offset[{(-4) 3^Rational[1, 2], 4}, {-2.197915477360666, 
           1.2689670925102254`}], 
          Offset[{-6.928203230275509, 4}, {-2.197915477360666, 
           1.2689670925102254`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2]), Rational[
            1, 4]}], ImageScaled[{0.9330127018922193, 0.25}]],
         Background->Automatic], 
        InsetBox["\[Pi]", Offset[{-8, 0}, {-2.537934185020451, 0.}], NCache[
         ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"], NCache[
         Offset[{(-4) 
            3^Rational[
              1, 2], -4}, {-2.197915477360666, -1.2689670925102254`}], 
          Offset[{-6.928203230275509, -4}, {-2.197915477360666, \
-1.2689670925102254`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2]), Rational[
            3, 4]}], ImageScaled[{0.9330127018922193, 0.75}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"], NCache[
         Offset[{-4, (-4) 
            3^Rational[1, 2]}, {-1.2689670925102254`, -2.197915477360666}], 
          Offset[{-4, -6.928203230275509}, {-1.2689670925102254`, \
-2.197915477360666}]], NCache[
         ImageScaled[{
           Rational[3, 4], 
            Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.75, 0.9330127018922193}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], 
         Offset[{0, -8}, {0., -2.537934185020451}], NCache[
         ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"], NCache[
         Offset[{4, (-4) 3^Rational[1, 2]}, {
           1.2689670925102254`, -2.197915477360666}], 
          Offset[{4, -6.928203230275509}, {
           1.2689670925102254`, -2.197915477360666}]], NCache[
         ImageScaled[{
           Rational[1, 4], 
            Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2])}], 
          ImageScaled[{0.25, 0.9330127018922193}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"], NCache[
         Offset[{4 3^Rational[1, 2], -4}, {
           2.197915477360666, -1.2689670925102254`}], 
          Offset[{6.928203230275509, -4}, {
           2.197915477360666, -1.2689670925102254`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), Rational[
            3, 4]}], ImageScaled[{0.0669872981077807, 0.75}]],
         Background->Automatic]}, 
       CircleBox[{0, 0}, 2.537934185020451, 
        NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, {}}, 
   ArrowBox[{{0, 0}, {1.5, 0.}}], 
   ArrowBox[{{0, 0}, {1.299038105676658, 0.75}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.897130560665056*^9, 3.897130576964286*^9}, 
   3.897131047452826*^9},
 CellLabel->
  "Out[660]=",ExpressionUUID->"5e48868e-5a0a-4a26-8711-ce481788c6cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{
    RowBox[{"-", "810"}], "*", "Degree"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "20"}], "+", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Gray"}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", "None"}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "2"}]}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "2"}]}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "0", "]"}], ",", 
           RowBox[{"Sin", "[", "0", "]"}]}], "}"}]}]}], "}"}], "]"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<sketch-quad.pdf\>\"", ",", "\"\<sketch-quad.svg\>\""}], 
     "}"}], ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.897130929080888*^9, 3.8971310057210913`*^9}, {
  3.89713105049402*^9, 3.897131078029695*^9}},
 CellLabel->
  "In[665]:=",ExpressionUUID->"ba58893d-8eda-4c84-b6c3-a667211a9340"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.3607292014493009`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., 1.3607292014493009`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.3607292014493009`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., -1.3607292014493009`}}]}}, {}}, {}, {{}, {}, 
      TagBox[
       {GrayLevel[0.5], Thickness[Large], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
gFbBr2VFVRQ48NZTebh8Atw7DcNDYyiQPrwwXTE3AeCotDtKhwIR565t97Ah
QzHlSPqZhClYj7nXuqhMQtywl9DkoUngiWhYC2mZghI7y3VuopOwm6bZmTE1
BUeq3ub1rZHhfN0J9ZzlKbjzo7L9YgcZZF7WaTj+S4F4a/tz5Ftk2DanQY4K
pUDjVLR8UOYE/IzOuFJ7ahrE3geHqEdOgHWVjKK82TT4LHbGdnpPgPHs3ite
7tPg659lkk3Mg5p113/lx03D2TqsbuvwOGTYYpHts9Ng5MLiqN44DpD8k8sj
jgruuqY6DwfGYCnOTnbpCxXmNmjt10kZg1zJv45OJCqU3SifUjs6Bq03/FvJ
DCrET04vlZiPwn8REkG2GjTQJkvwXHo3DHLe+jftemggWRHwS4DdD6/WnAtj
cDpcf1bdIVrcD/3jjXtml+kgpHhZd/FhPyzzHnOS30zcIxb7OS/w90Nd78Ki
9gEM1H/ODZ6R/wnsPxkrvA4YTDhzyb+16gUj5wbbxh7iHsqaCHaQ7YXl9Z2+
SmQMOnzyM4WxHujopG14xMZAP7P7zFavHsirW1Qo5mXAqwkX92ch3UC+2h6b
qckADx7ri4mfO2EpOCorMIEBy4Jypvc9OkGVEUpnpTNA5JGCt7pyJ6yq+dxQ
LWCAwAl/FYfvHRAuZI85/GBAenzoTH9kO1Ar7vw++psBieUF0T0i7XBMa8Yk
ZpUB2VXdf+MS2iCppdKln4cJrIanmqHprZC93dXr904mNO4L+Mz5vRnsj9md
itNiQmQxS8EeNQOnd/lz9jkm+FgVb3hLaoJPBukcMpeZYPFoke3Y/ANEtPVM
ZZ2ZwNYI2jDc3wBCXTpd4aFM+GB4amc4gwTfpWJc5xuZMCMTdDDAjgR7bmwp
qe5gAv8FDRGdgRrgvntB3b6fCU8CHH306qtBvSby/SEqEyjljYkhmgClW8f2
/OTEQfuc0Wjx3koQnhOyteDFgfr6+4bobRWwV+WDyTcBHL717VZ0ppZB2AGT
vcwdOEQxFk9HvCwCY3eDFRdFHD5qkv84eRcCTitwS1LFYc6y6b9lq29wTTBN
7qsmDnHCyrx2h/PBSHjfqfM6OPwU9DyhIpoH1f6toSP6OIg56S+8XfkKVeS9
TC0jHPw5tucEx2VD5/PS+tdXcHD51XrosnMmjDAp+/yu4pDmIGhcqJIO0Z15
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
/9f/AGsyGsg=
         "]]},
       Annotation[#, "Charting`Private`Tag$106467#1"]& ]}, {}, {{{
        LineBox[{
         Scaled[{0, 0}, {1.3607292014493009`, 0.}], 
          Scaled[{0.006, 0.}, {1.3607292014493009`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., 1.3607292014493009`}], 
          Scaled[{0., 0.006}, {0., 1.3607292014493009`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.3607292014493009`, 0.}], 
          Scaled[{-0.006, 0.}, {-1.3607292014493009`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., -1.3607292014493009`}], 
          Scaled[{0., -0.006}, {0., -1.3607292014493009`}]}]}, 
       LineBox[{}], {
        InsetBox["0", Offset[{8, 0}, {1.3607292014493009, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 1.3607292014493009}], 
         NCache[ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]],
         Background->Automatic], 
        InsetBox["\[Pi]", Offset[{-8, 0}, {-1.3607292014493009, 0.}], NCache[
         ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], 
         Offset[{0, -8}, {0., -1.3607292014493009}], NCache[
         ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]],
         Background->Automatic]}, 
       CircleBox[{0, 0}, 1.3607292014493009, 
        NCache[{0, 2 Pi}, {0, 6.283185307179586}]]}, {}}}, {}}, 
   ArrowBox[{{0, 0}, {1.5, 0.}}], ArrowBox[{{0, 0}, {0., -1.5}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.8971309367369947`*^9, 3.897131006275927*^9}, {
  3.897131054897647*^9, 3.897131078575388*^9}},
 CellLabel->
  "Out[666]=",ExpressionUUID->"cc21e926-3a2d-4cb6-908b-f13191cd4658"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"15", 
    RowBox[{"Pi", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", 
        RowBox[{"Opacity", "[", "0", "]"}]}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", "None"}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "4"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"3.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "0", "]"}], ",", 
           RowBox[{"Sin", "[", "0", "]"}]}], "}"}]}]}], "}"}], "]"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"3.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], "]"}], 
     "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<sketch-8-2-ctm.pdf\>\"", ",", "\"\<sketch-8-2-ctm.svg\>\""}], "}"}],
     ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8971314910931053`*^9, 3.8971316093062572`*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"d5335628-391e-4e2e-9f65-50088294cfe0"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {2.7817340919877798`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.9669830399023622`, 1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., 2.7817340919877798`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.9669830399023622`, 1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-2.7817340919877798`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.9669830399023622`, -1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., -2.7817340919877798`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {
          1.9669830399023622`, -1.9669830399023622`}}]}}, {}}, {}, {{}, {}, 
      TagBox[
       {Hue[0.67, 0.6, 0.6], Opacity[0], LineBox[CompressedData["
1:eJw0l3k8lV+0xokoQ4NKCikaJSX006ClFFEJIWQWFREZGpQpRURCpQghCZnn
sMzzPM+O8RgPDo7x5L73cz/XP3ztc953r2c9a+21Dxg9VjXZwMDA0MPMwPC/
v//vhwT//9e/oH/h4swkEJZ/EXj2hy6wBSV6am0iAddeE7v1aAuogN10h20k
2FPx4I915iv46D90ee9+Emz/z0dnutUbzmUdIPUKkSC0x+bUwRpfsIO9Fp+O
kOBfzAPXnAQ/GMn9JdIuSgKK5W+GmKef4evNhgMpF0jQ7CGyrMAVAhfGT/Gx
yJDA5MevL4dXQ+Fkh3GqoiwJHA5wdVhRwyB6+OLnaAUSZG50VbDvCQeJNnu2
dHVi3X7kq19mFJDdSnoCNElwPNCCZpT4Cw7fPMFgcpcEw1UfUoOio6Fs0yB7
hwEJ1BrL2i9/i4Gww+ySW81JMOBrLXLLNR4u1o3bP7UgwWL5dxbFVwmQom+b
U/+YBPQal723LySCw+7aExq2JLjAWf0SpJKgaPyevKs9CU405vW/TE+CqD3i
MqHPSGC68+3BMYlksEn6Fhv7kgSfrly1uXE6Bci2DzmCHEkQcefk58tJKeB1
r/OogzMJnrI2FZucSoWMmF/WnG4k+O/gucdiJ9MgsUBY5bknCRrE7rA1iGbA
3o7B4CkvQm8vw1DBhAyoc8vWV/UmgYfYoOf3k5mgzfPh2NQHIt5j29w4xbIA
v/HsF/pIArH0y2GMyVnQxND2SMGPBDeGV0/yi2dDZF7MqGkACaQ4NYvKJf/C
0d0FrHqfSOCUVdd4J+MvZFhu0b36mQRTt59ZcJzNARHdTBLfFxKMrt7nGcnO
gdD7c55DBHf9NdAcupALvJxMasGBJDhKr09iwVxQaTorceUrCfTWmqJvXMqD
o7eXhboJXpM+XZBWlAc6V5N5730jQQyTkeMlOYQrE7JWwwRLM5waojQhNHD3
Tt0OIkGk1k9y/6l82OXL65VAsGNTX13f03wgKcZdXCK4NP1z50xePux+rr5+
IpgEbMJGGTtZCoD1+2yRMsGiXhG7rt8sgHdBVq8NCP5R8SbSP6AA9tW2SegS
PJBP56J0FcD0zst1cgTb+ldu1RYqhITRPgV+gvew2Cu0mRWCxaPFIBLxvidd
apYmyYVw3Wkox5dg6kl3EeaVQuCv5Yk8QbBY65JYyqUiGB/iVcgg4vFPMRR5
8q4IDGW8Ik4QfJlfrkKmoQgO6e+N9SX0cJFcTNu3pxi2NvndIRH6mSr4h7Ib
FoOyanMYH8GdoizirL+L4Xl5s+NVQu+J8M3822eLweJ+2Jg2kR+36ENsx86W
wIVMrQ4dIn/25MQoJZcS6Iw9K3edyG85e0OIS0UJxMUUPJsi/PBok63KFu1S
iJa4cfKHLwna4pSN74eXQqVT4ZVLhH/6Ptg7VY+Xgs/Qqcdy70lgN3ztdZZD
GTy5WWAXS/gxQr01X6a4DNYlLfPWPEhwrehxaiNHOfjaKq4YvyFBhr/v/V0h
5bBlvKLv+WsSbNN/71AyUg5K0iyTDi4k2I+vKI4nK8AxR03vyisSFHPKBnIU
VEBapVUGmwMJYsWOC5I2V0LgV13+XKKePPhPJ/1VrQSv7jzasA0Jbk1QXN8N
VcJ655KujjUJ4jRNdjucqAKdap+sPEsS9D9+qWZjXwXDpbpn5B8S9XBLwcx+
UzUUR/76ZapL+CGt8H6uSA08UTvPdUGbBKeuFP/stKsBm8m0K3QNEszs7qxa
zauB9bdTk5eVSTBns9/imkotPNXxz++8RII7lL1yjPZ14Gl7yl7qANEPIv7Y
N/TVg5S6Eu9OfiI/JUledMYG2L1RZKCHh6iXoV3DRw82wOqXZxXnif55pm+9
/uWDBrDc/NTw0lofdG0actw12wDcx97f3/OnD6JrBYLGGJtA/s68g194H7RN
qbsvCTXBoxf57uQvfeBqt8GYWa4JgoSKnx5y7YP7j4VUuTybIP5ujuGMWh9o
m96Y3sDVDLYKDPvz53ohuNiBlftAC9CYtukvjvQC9fL66YHLLaDvf9mKrbMX
Cj2yp6PvtYBm7MGNxdgL8obgdii6BYy8BEbc3vWCqjR5olW0FT51/bOW5u6F
5cIzksvn2uBwpInGx509YL4pK0r0Zge8vL75YBBTD5TU/h7RteiAYu5ZDVdq
N6Tc26z82rsDPsW2rY7WdYNXxV3OxJoOCLO+mbb7XTfU31iV9L7ZCRI/9Oj/
5rvAqVpZ+8z1LqhduybV398FBv51vBlmXZBUUHr4R20XhFj643HPLrgzBP9l
/+qCRa8jfDPlXUAub+hS0ewi8mhzov9qN3wfitDlT+kE9/7JlivSPbC6xYa1
93snnPCWj6He7QH5RcGOlx6d0FmStNfvRQ98P2nJra7bCWbJbhd/ZvRA6nu2
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
         "]]},
       Annotation[#, "Charting`Private`Tag$112335#1"]& ]}, {}, {{{
        LineBox[{
         Scaled[{0, 0}, {2.7817340919877798`, 0.}], 
          Scaled[{0.006, 0.}, {2.7817340919877798`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.9669830399023622`, 1.9669830399023622`}], 
          Scaled[{0.004242640687119285, 0.004242640687119285}, {
           1.9669830399023622`, 1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., 2.7817340919877798`}], 
          Scaled[{0., 0.006}, {0., 2.7817340919877798`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.9669830399023622`, 1.9669830399023622`}], 
          Scaled[{-0.004242640687119285, 
           0.004242640687119285}, {-1.9669830399023622`, 
           1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-2.7817340919877798`, 0.}], 
          Scaled[{-0.006, 0.}, {-2.7817340919877798`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.9669830399023622`, -1.9669830399023622`}], 
          Scaled[{-0.004242640687119285, -0.004242640687119285}, \
{-1.9669830399023622`, -1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., -2.7817340919877798`}], 
          Scaled[{0., -0.006}, {0., -2.7817340919877798`}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.9669830399023622`, -1.9669830399023622`}], 
          Scaled[{0.004242640687119285, -0.004242640687119285}, {
           1.9669830399023622`, -1.9669830399023622`}]}]}, 
       LineBox[{}], {
        InsetBox["0", Offset[{8, 0}, {2.7817340919877798, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "4"], NCache[
         Offset[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {
           1.9669830399023622`, 1.9669830399023622`}], 
          Offset[{5.656854249492381, 5.656854249492381}, {1.9669830399023622`,
            1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 - 2^Rational[-1, 2]), 
            Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
          ImageScaled[{0.14644660940672627`, 0.14644660940672627`}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 2.7817340919877798}], 
         NCache[ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"], NCache[
         Offset[{(-4) 2^Rational[1, 2], 4 
            2^Rational[1, 2]}, {-1.9669830399023622`, 1.9669830399023622`}], 
          Offset[{-5.656854249492381, 
           5.656854249492381}, {-1.9669830399023622`, 1.9669830399023622`}]], 
         NCache[ImageScaled[{
           Rational[1, 2] (1 + 2^Rational[-1, 2]), 
            Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
          ImageScaled[{0.8535533905932737, 0.14644660940672627`}]],
         Background->Automatic], 
        InsetBox["\[Pi]", Offset[{-8, 0}, {-2.7817340919877798, 0.}], NCache[
         ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "4"], NCache[
         Offset[{(-4) 2^Rational[1, 2], (-4) 
            2^Rational[1, 2]}, {-1.9669830399023622`, -1.9669830399023622`}], 
          Offset[{-5.656854249492381, -5.656854249492381}, \
{-1.9669830399023622`, -1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + 2^Rational[-1, 2]), 
            Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
          ImageScaled[{0.8535533905932737, 0.8535533905932737}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], 
         Offset[{0, -8}, {0., -2.7817340919877798}], NCache[
         ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "4"], NCache[
         Offset[{4 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {
           1.9669830399023622`, -1.9669830399023622`}], 
          Offset[{5.656854249492381, -5.656854249492381}, {
           1.9669830399023622`, -1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 - 2^Rational[-1, 2]), 
            Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
          ImageScaled[{0.14644660940672627`, 0.8535533905932737}]],
         Background->Automatic]}, 
       CircleBox[{0, 0}, 2.7817340919877798, 
        NCache[{0, 2 Pi}, {
         0, 6.283185307179586}]]}, {}}}, {}}, {{{{}, {}}, {}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], 
        Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtyQsw1AkcB3AUPS4UcltWeZQpeVy6unT4tZOxGNV0ZSusR5MuruSVY5Vw
h+yIdQ2nKHe21MqrrEKuX3YQNbXrsbXbxln+1lq7+6dLeZRu7/Gd+c53PvO1
PXbmu0gDPT29vbr+sz1Jll71lgSI/ls8I5WE2lAIiPjrGqVyNYHlDEY8Zw0B
1KYAaakFgTMpqXGxVALqr9gZ55gRKGB4iFztCKDT2rxCTAhUrVxqUu1MgAGP
8VTfiMCrbj5pV70J0LICctynR7A9Pur5vngCegTrW4P7RvC+zZFdVf0E3LPL
t790cQQ9MukMjusoFG9MzDagjWBC3XWTjpxREMZ4GAbMDuPPO4dfnVCMgnVg
yE9tvGH8NJzxBd9TAccWwssI5jAepdvVO5UqoMA0ol61bBgllNvMtmkF+HDx
NL9RjpH8pJlNfmMgGpS3FEfKcUyvpy+iYgxa+OYhRsZyfH2grz793RgE23cF
djYNYfkSy0r5HiW4XRvMaT4+hC+otzIflChhrooeqFoyhFQ/J1mFQgmDrdyy
irA/UWoS5PPAfRwMd7VfiL42iIbm6jFJ7jhcpV2gZ8kG8FZHKsunbxyE+mK5
xH4AhbK0ySRbFbD9zwf8cvQNnuLWfWMSpQLf57aF5BUZMsocPq9uVEG2Ml/l
8eQ1mnUnvLdfUIGRsZ3F4Wkpfg5ySZLsnoB7QW+tZC5SbC0SsAtyJiCpZIfp
s0MSZBxPl67omoCagzcledmv8LyQ9bvQUA1x54tPTjS/xF/NV3g60NXQsq+N
6yUV42xoZmVuphqSJ7Z0WxmKkZPBtXdoU4NpruzQJWo/ztT0tog+qiHAQvOo
fHsfulg1vxC7aeDF/gTJVHAvRkXLS8t+0ABXdWM09nQPej5smyCua2Au+XJm
QZ4I6R76vrlCDTQ4VpdYhwixMP7DymQDLWg3e2e3JT5HenPo5LdfaeGDjcGh
Sd4zjJ57WagM08Lt3E1ntvG7cVFcdXMRWwt/1O4cvy97gr0xR9bW3tPCm/Ze
/8GlnVje4nzd7Y0W/PqrV+Utb0fNftZac30Snrpk1dU6ClCTIuiadSAhlin2
V6x7jBuM76Ra+Ot+e7Oa91tb0eZHT5bmJAl3hxxPMSObMLHfytXvIgnu8wsu
trv5qFl0wbKIS4KtQ8NYaHA9JsTMPkhuJeHiIMfo5jIeBs34rmWKSbCraVpv
WfUbGrhPbS5RkZCnpFpSygvxbvsizlud52t7D3cfKcSpDqYwYIIEWXjH+hSz
QkTmiFRPTYL34/t7+rM4uINpvu57DQkFWZ5PpyT52Lx8PsJpkoS9Iwl3P8Sz
cSOtWHhlmoQG9dIG8Y0MjE30DSF1PpUhWCn7MgPnragC7/cknO5kcAbY6bjY
wn4NqbOyhEU2yNMw60n+O9oMCUWx7HfhKSxM738ZNjRHgtZ9oIt3Kw4Plpqn
bZsnYbdhdvjRS7FYRA07m61zFLuhwkgRg1GV1uSWjyRQRIKcvHPRKPejmJ79
RMLBr9dtWMWLwBOBVdOdOouc+ceclKG4XURrpCyQcIf1aoVNWhDy4s7hQ51d
L9/Y2M47gI/p1suNP5PQ12jrNZ7mj4vVj5xDdVZ6B6daV9Hw5o5wxzqdpRhv
5V+1FfX+zSTo/Z+/AcJ/maE=
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$112388#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, \
{}}, ArrowBox[{{0, 0}, {3.5, 0.}}], 
   ArrowBox[{{0, 0}, {2.474873734152916, -2.474873734152916}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.897131492212275*^9, 3.8971315053262653`*^9}, {
  3.897131563600545*^9, 3.897131609776479*^9}},
 CellLabel->
  "Out[693]=",ExpressionUUID->"5a174c4c-01f4-47bc-b2a5-3cd6283a6c62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"15", 
    RowBox[{"Pi", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", 
        RowBox[{"Opacity", "[", "0", "]"}]}], "}"}]}], ",", 
     RowBox[{"Ticks", "->", "None"}], ",", 
     RowBox[{"PolarTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PolarGridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"2", " ", "Pi"}], "-", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "}"}]}], "}"}]}], ",", 
     RowBox[{"PolarAxes", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "/", "7"}], "+", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"7", 
        RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"3.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "0", "]"}], ",", 
           RowBox[{"Sin", "[", "0", "]"}]}], "}"}]}]}], "}"}], "]"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"3.5", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], "}"}], "]"}], 
     "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<sketch-8-2-ctp.pdf\>\"", ",", "\"\<sketch-8-2-ctp.svg\>\""}], "}"}],
     ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8971316378580637`*^9, 3.897131646999895*^9}},
 CellLabel->
  "In[698]:=",ExpressionUUID->"5cdca6f9-f38e-4d85-872e-fe4dc0a4bfa0"],

Cell[BoxData[
 GraphicsBox[{{{{{
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {2.7817340919877798`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {1.9669830399023622`, 1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., 2.7817340919877798`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.9669830399023622`, 1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-2.7817340919877798`, 0.}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {-1.9669830399023622`, -1.9669830399023622`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {0., -2.7817340919877798`}}]}, 
       {GrayLevel[0.5], Opacity[0.4], 
        LineBox[{{0, 0}, {
          1.9669830399023622`, -1.9669830399023622`}}]}}, {}}, {}, {{}, {}, 
      TagBox[
       {Hue[0.67, 0.6, 0.6], Opacity[0], LineBox[CompressedData["
1:eJw0l3k8lV+0xokoQ4NKCikaJSX006ClFFEJIWQWFREZGpQpRURCpQghCZnn
sMzzPM+O8RgPDo7x5L73cz/XP3ztc953r2c9a+21Dxg9VjXZwMDA0MPMwPC/
v//vhwT//9e/oH/h4swkEJZ/EXj2hy6wBSV6am0iAddeE7v1aAuogN10h20k
2FPx4I915iv46D90ee9+Emz/z0dnutUbzmUdIPUKkSC0x+bUwRpfsIO9Fp+O
kOBfzAPXnAQ/GMn9JdIuSgKK5W+GmKef4evNhgMpF0jQ7CGyrMAVAhfGT/Gx
yJDA5MevL4dXQ+Fkh3GqoiwJHA5wdVhRwyB6+OLnaAUSZG50VbDvCQeJNnu2
dHVi3X7kq19mFJDdSnoCNElwPNCCZpT4Cw7fPMFgcpcEw1UfUoOio6Fs0yB7
hwEJ1BrL2i9/i4Gww+ySW81JMOBrLXLLNR4u1o3bP7UgwWL5dxbFVwmQom+b
U/+YBPQal723LySCw+7aExq2JLjAWf0SpJKgaPyevKs9CU405vW/TE+CqD3i
MqHPSGC68+3BMYlksEn6Fhv7kgSfrly1uXE6Bci2DzmCHEkQcefk58tJKeB1
r/OogzMJnrI2FZucSoWMmF/WnG4k+O/gucdiJ9MgsUBY5bknCRrE7rA1iGbA
3o7B4CkvQm8vw1DBhAyoc8vWV/UmgYfYoOf3k5mgzfPh2NQHIt5j29w4xbIA
v/HsF/pIArH0y2GMyVnQxND2SMGPBDeGV0/yi2dDZF7MqGkACaQ4NYvKJf/C
0d0FrHqfSOCUVdd4J+MvZFhu0b36mQRTt59ZcJzNARHdTBLfFxKMrt7nGcnO
gdD7c55DBHf9NdAcupALvJxMasGBJDhKr09iwVxQaTorceUrCfTWmqJvXMqD
o7eXhboJXpM+XZBWlAc6V5N5730jQQyTkeMlOYQrE7JWwwRLM5waojQhNHD3
Tt0OIkGk1k9y/6l82OXL65VAsGNTX13f03wgKcZdXCK4NP1z50xePux+rr5+
IpgEbMJGGTtZCoD1+2yRMsGiXhG7rt8sgHdBVq8NCP5R8SbSP6AA9tW2SegS
PJBP56J0FcD0zst1cgTb+ldu1RYqhITRPgV+gvew2Cu0mRWCxaPFIBLxvidd
apYmyYVw3Wkox5dg6kl3EeaVQuCv5Yk8QbBY65JYyqUiGB/iVcgg4vFPMRR5
8q4IDGW8Ik4QfJlfrkKmoQgO6e+N9SX0cJFcTNu3pxi2NvndIRH6mSr4h7Ib
FoOyanMYH8GdoizirL+L4Xl5s+NVQu+J8M3822eLweJ+2Jg2kR+36ENsx86W
wIVMrQ4dIn/25MQoJZcS6Iw9K3edyG85e0OIS0UJxMUUPJsi/PBok63KFu1S
iJa4cfKHLwna4pSN74eXQqVT4ZVLhH/6Ptg7VY+Xgs/Qqcdy70lgN3ztdZZD
GTy5WWAXS/gxQr01X6a4DNYlLfPWPEhwrehxaiNHOfjaKq4YvyFBhr/v/V0h
5bBlvKLv+WsSbNN/71AyUg5K0iyTDi4k2I+vKI4nK8AxR03vyisSFHPKBnIU
VEBapVUGmwMJYsWOC5I2V0LgV13+XKKePPhPJ/1VrQSv7jzasA0Jbk1QXN8N
VcJ655KujjUJ4jRNdjucqAKdap+sPEsS9D9+qWZjXwXDpbpn5B8S9XBLwcx+
UzUUR/76ZapL+CGt8H6uSA08UTvPdUGbBKeuFP/stKsBm8m0K3QNEszs7qxa
zauB9bdTk5eVSTBns9/imkotPNXxz++8RII7lL1yjPZ14Gl7yl7qANEPIv7Y
N/TVg5S6Eu9OfiI/JUledMYG2L1RZKCHh6iXoV3DRw82wOqXZxXnif55pm+9
/uWDBrDc/NTw0lofdG0actw12wDcx97f3/OnD6JrBYLGGJtA/s68g194H7RN
qbsvCTXBoxf57uQvfeBqt8GYWa4JgoSKnx5y7YP7j4VUuTybIP5ujuGMWh9o
m96Y3sDVDLYKDPvz53ohuNiBlftAC9CYtukvjvQC9fL66YHLLaDvf9mKrbMX
Cj2yp6PvtYBm7MGNxdgL8obgdii6BYy8BEbc3vWCqjR5olW0FT51/bOW5u6F
5cIzksvn2uBwpInGx509YL4pK0r0Zge8vL75YBBTD5TU/h7RteiAYu5ZDVdq
N6Tc26z82rsDPsW2rY7WdYNXxV3OxJoOCLO+mbb7XTfU31iV9L7ZCRI/9Oj/
5rvAqVpZ+8z1LqhduybV398FBv51vBlmXZBUUHr4R20XhFj643HPLrgzBP9l
/+qCRa8jfDPlXUAub+hS0ewi8mhzov9qN3wfitDlT+kE9/7JlivSPbC6xYa1
93snnPCWj6He7QH5RcGOlx6d0FmStNfvRQ98P2nJra7bCWbJbhd/ZvRA6nu2
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
         "]]},
       Annotation[#, "Charting`Private`Tag$113595#1"]& ]}, {}, {{{
        LineBox[{
         Scaled[{0, 0}, {2.7817340919877798`, 0.}], 
          Scaled[{0.006, 0.}, {2.7817340919877798`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.9669830399023622`, 1.9669830399023622`}], 
          Scaled[{0.004242640687119285, 0.004242640687119285}, {
           1.9669830399023622`, 1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., 2.7817340919877798`}], 
          Scaled[{0., 0.006}, {0., 2.7817340919877798`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.9669830399023622`, 1.9669830399023622`}], 
          Scaled[{-0.004242640687119285, 
           0.004242640687119285}, {-1.9669830399023622`, 
           1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {-2.7817340919877798`, 0.}], 
          Scaled[{-0.006, 0.}, {-2.7817340919877798`, 0.}]}], 
        LineBox[{
         Scaled[{0, 0}, {-1.9669830399023622`, -1.9669830399023622`}], 
          Scaled[{-0.004242640687119285, -0.004242640687119285}, \
{-1.9669830399023622`, -1.9669830399023622`}]}], 
        LineBox[{
         Scaled[{0, 0}, {0., -2.7817340919877798`}], 
          Scaled[{0., -0.006}, {0., -2.7817340919877798`}]}], 
        LineBox[{
         Scaled[{0, 0}, {1.9669830399023622`, -1.9669830399023622`}], 
          Scaled[{0.004242640687119285, -0.004242640687119285}, {
           1.9669830399023622`, -1.9669830399023622`}]}]}, 
       LineBox[{}], {
        InsetBox["0", Offset[{8, 0}, {2.7817340919877798, 0.}], NCache[
         ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "4"], NCache[
         Offset[{4 2^Rational[1, 2], 4 2^Rational[1, 2]}, {
           1.9669830399023622`, 1.9669830399023622`}], 
          Offset[{5.656854249492381, 5.656854249492381}, {1.9669830399023622`,
            1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 - 2^Rational[-1, 2]), 
            Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
          ImageScaled[{0.14644660940672627`, 0.14644660940672627`}]],
         Background->Automatic], InsetBox[
         FractionBox["\[Pi]", "2"], Offset[{0, 8}, {0., 2.7817340919877798}], 
         NCache[ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"], NCache[
         Offset[{(-4) 2^Rational[1, 2], 4 
            2^Rational[1, 2]}, {-1.9669830399023622`, 1.9669830399023622`}], 
          Offset[{-5.656854249492381, 
           5.656854249492381}, {-1.9669830399023622`, 1.9669830399023622`}]], 
         NCache[ImageScaled[{
           Rational[1, 2] (1 + 2^Rational[-1, 2]), 
            Rational[1, 2] (1 - 2^Rational[-1, 2])}], 
          ImageScaled[{0.8535533905932737, 0.14644660940672627`}]],
         Background->Automatic], 
        InsetBox["\[Pi]", Offset[{-8, 0}, {-2.7817340919877798, 0.}], NCache[
         ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "4"], NCache[
         Offset[{(-4) 2^Rational[1, 2], (-4) 
            2^Rational[1, 2]}, {-1.9669830399023622`, -1.9669830399023622`}], 
          Offset[{-5.656854249492381, -5.656854249492381}, \
{-1.9669830399023622`, -1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 + 2^Rational[-1, 2]), 
            Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
          ImageScaled[{0.8535533905932737, 0.8535533905932737}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], 
         Offset[{0, -8}, {0., -2.7817340919877798}], NCache[
         ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]],
         Background->Automatic], InsetBox[
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "4"], NCache[
         Offset[{4 2^Rational[1, 2], (-4) 2^Rational[1, 2]}, {
           1.9669830399023622`, -1.9669830399023622`}], 
          Offset[{5.656854249492381, -5.656854249492381}, {
           1.9669830399023622`, -1.9669830399023622`}]], NCache[
         ImageScaled[{
           Rational[1, 2] (1 - 2^Rational[-1, 2]), 
            Rational[1, 2] (1 + 2^Rational[-1, 2])}], 
          ImageScaled[{0.14644660940672627`, 0.8535533905932737}]],
         Background->Automatic]}, 
       CircleBox[{0, 0}, 2.7817340919877798, 
        NCache[{0, 2 Pi}, {
         0, 6.283185307179586}]]}, {}}}, {}}, {{{{}, {}}, {}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], 
        Dashing[{Small, Small}], LineBox[CompressedData["
1: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
cupQ
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$113648#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, \
{}}, ArrowBox[{{0, 0}, {3.5, 0.}}], 
   ArrowBox[{{0, 0}, {2.474873734152916, -2.474873734152916}}]},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{{3.897131641993431*^9, 3.897131647695071*^9}},
 CellLabel->
  "Out[699]=",ExpressionUUID->"3eea31bc-4a0f-4cf6-90db-30039d4dcc50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"121", "*", "Degree"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "r", "]"}], ",", "Large", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "/", "2"}]}], "-", "0.4"}],
          ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "2"}]}], "-", 
          "0.6"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "0.6"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", "0.6"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}]}], "==", 
           RowBox[{"r", "^", "2"}]}], "]"}], ",", "Large", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.6"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(0,0)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "-", "0.6"}], ",", 
         RowBox[{"0", "-", "0.6"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"GridLines", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<trig-function-defn.pdf\>\"", ",", "\"\<trig-function-defn.svg\>\""}],
     "}"}], ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8971440749728127`*^9, 3.897144241665873*^9}, {
  3.8971446897124987`*^9, 3.897144718170673*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"759a0777-244a-4224-81ab-03453af0d957"],

Cell[BoxData[
 RowBox[{"121", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.89714410658479*^9, 3.897144242109294*^9}, {
  3.897144701578186*^9, 3.897144718449959*^9}},
 CellLabel->
  "Out[218]=",ExpressionUUID->"605b2540-2338-42ce-afa9-da6b2c85295b"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-2.0601522996402166`, 
      3.4286692028084493`}, {-2.0601522996402166`, 
      3.4286692028084493`}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{4., 0.}, {4., 0.}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0., 0.}}]}, {{}, {}}}, InsetBox[
    StyleBox[
     TagBox["r",
      HoldForm],
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-1.6875951872751354, 1.5429182517552809}], 
   InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-3.175190374550271, 3.685836503510562}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LongEqual]", 
       SuperscriptBox["r", "2"]}],
      HoldForm],
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {3.0621178005173357, 4.485836503510562}], InsetBox[
    StyleBox["\<\"(0,0)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-0.6, -0.6}], 
   ArrowBox[NCache[{{0, 0}, {(-5) Sin[31 Degree], 5 Cos[31 Degree]}}, {{0, 
      0}, {-2.575190374550271, 4.285836503510562}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 121 Degree}, {0, 2.111848394913139}]], 
   InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {0.9924235601034672, 1.0703556959398997}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.89714410658479*^9, 3.897144242109294*^9}, {
  3.897144701578186*^9, 3.897144718584641*^9}},
 CellLabel->
  "Out[219]=",ExpressionUUID->"c423f346-94ec-4a16-af95-5bfa910c1546"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trig-function-defn.pdf\"\>", 
   ",", "\<\"trig-function-defn.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.89714410658479*^9, 3.897144242109294*^9}, {
  3.897144701578186*^9, 3.8971447191306133`*^9}},
 CellLabel->
  "Out[220]=",ExpressionUUID->"c7de6a7f-b116-4324-9698-0bd0cdbc6838"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{
   RowBox[{"121", "*", "Degree"}], "-", 
   RowBox[{"90", "*", "Degree"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "r", "]"}], ",", "Large", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "/", "2"}]}], "-", "0.4"}],
          ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "2"}]}], "+", 
          "0.4"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "0.4"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", "0.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}]}], "==", 
           RowBox[{"r", "^", "2"}]}], "]"}], ",", "14", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"GridLines", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<trig-function-defn-q1.pdf\>\"", ",", 
     "\"\<trig-function-defn-q1.svg\>\""}], "}"}], ",", "%"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8971711232955627`*^9, 3.897171138701824*^9}, {
  3.8971712415474777`*^9, 3.897171357486968*^9}},
 CellLabel->
  "In[478]:=",ExpressionUUID->"a2d86663-3d62-40a4-adcb-bbc348d4bf7a"],

Cell[BoxData[
 RowBox[{"31", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.897171132263651*^9, 3.89717113897434*^9}, {
   3.8971712445525618`*^9, 3.8971713579354258`*^9}, 3.897171862228764*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"09483608-c509-4827-a3b3-4c7bb0cee297"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{3.4286692028084493`, 2.0601522996402166`}, {
      3.4286692028084493`, 2.0601522996402166`}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{4., 0.}, {4., 0.}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0., 0.}}]}, {{}, {}}}, InsetBox[
    StyleBox[
     TagBox["r",
      HoldForm],
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {1.742918251755281, 1.6875951872751354}], InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {3.885836503510562, 2.975190374550271}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LongEqual]", 
       SuperscriptBox["r", "2"]}],
      HoldForm],
     StripOnInput->False,
     FontSize->14,
     FontSlant->Italic], {2, 4.5}], 
   ArrowBox[NCache[{{0, 0}, {5 Cos[31 Degree], 5 Sin[31 Degree]}}, {{0, 0}, {
      4.285836503510562, 2.575190374550271}}]], ArrowBox[{{0, 0}, {5, 0}}], 
   CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 31 Degree}, {0, 0.5410520681182421}]], 
   InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {1.4636304532086228, 0.46723837607825686}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.897171132263651*^9, 3.89717113897434*^9}, {
   3.8971712445525618`*^9, 3.8971713579354258`*^9}, 3.897171862343254*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"70bd61d7-2d08-42a3-b798-7e64fd03aea4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trig-function-defn-q1.pdf\"\>", 
   ",", "\<\"trig-function-defn-q1.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.897171132263651*^9, 3.89717113897434*^9}, {
   3.8971712445525618`*^9, 3.8971713579354258`*^9}, 3.8971718628714027`*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"a428c9c6-218c-4e48-a7d2-a65b9264b391"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{
   RowBox[{"121", "*", "Degree"}], "-", 
   RowBox[{"0", "*", "90", "*", "Degree"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "r", "]"}], ",", "Large", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "/", "2"}]}], "+", "0.6"}],
          ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "2"}]}], "-", 
          "0.4"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "0.8"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", "0.8"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}]}], "==", 
           RowBox[{"r", "^", "2"}]}], "]"}], ",", "14", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"GridLines", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<trig-function-defn-q2.pdf\>\"", ",", 
     "\"\<trig-function-defn-q2.svg\>\""}], "}"}], ",", "%"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.897171157961329*^9, 3.8971711682885447`*^9}, {
  3.89717137881255*^9, 3.897171459881966*^9}},
 CellLabel->
  "In[482]:=",ExpressionUUID->"b3ff7dd3-bc73-4766-ab54-f4e85bf7918d"],

Cell[BoxData[
 RowBox[{"121", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.897171160597025*^9, 3.897171168685924*^9}, {
   3.8971713846399918`*^9, 3.897171460223013*^9}, 3.897171866002865*^9},
 CellLabel->
  "Out[483]=",ExpressionUUID->"4e34e2d6-eed1-4a10-8874-9aaf63c7eb82"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-2.0601522996402166`, 
      3.4286692028084493`}, {-2.0601522996402166`, 
      3.4286692028084493`}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{4., 0.}, {4., 0.}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0., 0.}}]}, {{}, {}}}, InsetBox[
    StyleBox[
     TagBox["r",
      HoldForm],
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-0.6875951872751355, 1.742918251755281}], InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-3.3751903745502707, 3.485836503510562}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LongEqual]", 
       SuperscriptBox["r", "2"]}],
      HoldForm],
     StripOnInput->False,
     FontSize->14,
     FontSlant->Italic], {2, 4.5}], 
   ArrowBox[NCache[{{0, 0}, {(-5) Sin[31 Degree], 5 Cos[31 Degree]}}, {{0, 
      0}, {-2.575190374550271, 4.285836503510562}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 121 Degree}, {0, 2.111848394913139}]], 
   InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {0.9924235601034672, 1.0703556959398997}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->None]], "Output",
 CellChangeTimes->{{3.897171160597025*^9, 3.897171168685924*^9}, {
   3.8971713846399918`*^9, 3.897171460223013*^9}, 3.897171866124111*^9},
 CellLabel->
  "Out[484]=",ExpressionUUID->"88a2c45a-eebe-4bcb-9c17-f4a090fcc9d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trig-function-defn-q2.pdf\"\>", 
   ",", "\<\"trig-function-defn-q2.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.897171160597025*^9, 3.897171168685924*^9}, {
   3.8971713846399918`*^9, 3.897171460223013*^9}, 3.8971718666492653`*^9},
 CellLabel->
  "Out[485]=",ExpressionUUID->"1a567d78-6819-4bd5-9872-495c0b47aeaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{
   RowBox[{"121", "*", "Degree"}], "+", 
   RowBox[{"1", "*", "90", "*", "Degree"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "r", "]"}], ",", "Large", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "/", "2"}]}], "+", "0.6"}],
          ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "2"}]}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", "0.4"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}]}], "==", 
           RowBox[{"r", "^", "2"}]}], "]"}], ",", "14", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"GridLines", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<trig-function-defn-q3.pdf\>\"", ",", 
     "\"\<trig-function-defn-q3.svg\>\""}], "}"}], ",", "%"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.897171176511168*^9, 3.8971711827112703`*^9}, {
  3.897171484906147*^9, 3.897171548089395*^9}},
 CellLabel->
  "In[486]:=",ExpressionUUID->"5b4574e8-fe9f-45e8-ba17-6312076c8a12"],

Cell[BoxData[
 RowBox[{"211", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{
  3.897171183287228*^9, {3.897171503177539*^9, 3.897171548450779*^9}, 
   3.897171868252939*^9},
 CellLabel->
  "Out[487]=",ExpressionUUID->"8a87b271-d0f1-4451-ae33-b50f00d24a8b"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-3.4286692028084493`, -2.0601522996402166`}, \
{-3.4286692028084493`, -2.0601522996402166`}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{4., 0.}, {4., 0.}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0., 0.}}]}, {{}, {}}}, InsetBox[
    StyleBox[
     TagBox["r",
      HoldForm],
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], 
    NCache[{-1.5429182517552809`, Rational[-5, 2] 
      Sin[31 Degree]}, {-1.5429182517552809`, -1.2875951872751354`}]], 
   InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], 
    NCache[{(-5) 
      Cos[31 Degree], -2.975190374550271}, {-4.285836503510562, \
-2.975190374550271}]], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LongEqual]", 
       SuperscriptBox["r", "2"]}],
      HoldForm],
     StripOnInput->False,
     FontSize->14,
     FontSlant->Italic], {2, 4.5}], 
   ArrowBox[NCache[{{0, 0}, {(-5) Cos[31 Degree], (-5) Sin[31 Degree]}}, {{0, 
      0}, {-4.285836503510562, -2.575190374550271}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 211 Degree}, {0, 3.6826447217080354`}]], 
   InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {0.23276162392174315, 1.163630453208623}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->None]], "Output",
 CellChangeTimes->{
  3.897171183287228*^9, {3.897171503177539*^9, 3.897171548450779*^9}, 
   3.8971718683809*^9},
 CellLabel->
  "Out[488]=",ExpressionUUID->"cbff5b0d-5749-499f-a24f-5ee8d978c632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trig-function-defn-q3.pdf\"\>", 
   ",", "\<\"trig-function-defn-q3.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.897171183287228*^9, {3.897171503177539*^9, 3.897171548450779*^9}, 
   3.897171868942224*^9},
 CellLabel->
  "Out[489]=",ExpressionUUID->"c8981bd4-5a2b-486c-b7fa-8506cc7a0f9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{
   RowBox[{"121", "*", "Degree"}], "+", 
   RowBox[{"2", "*", "90", "*", "Degree"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "r", "]"}], ",", "Large", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "/", "2"}]}], "+", "0.6"}],
          ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "2"}]}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "0.6"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", "0.8"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}]}], "==", 
           RowBox[{"r", "^", "2"}]}], "]"}], ",", "14", ",", "Italic"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4.5"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", "\[Theta]", "]"}], ",", "Large"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.8"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"GridLines", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<trig-function-defn-q4.pdf\>\"", ",", 
     "\"\<trig-function-defn-q4.svg\>\""}], "}"}], ",", "%"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8971711893393593`*^9, 3.897171195577552*^9}, {
  3.89717156444971*^9, 3.8971716574062777`*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"3c40b9f0-cd33-4b92-8ff3-22f034d118d0"],

Cell[BoxData[
 RowBox[{"301", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{
  3.897171195973777*^9, {3.897171567896924*^9, 3.897171657830065*^9}, 
   3.89717187017577*^9},
 CellLabel->
  "Out[491]=",ExpressionUUID->"e6fd446c-4676-4a5f-bc3f-ea392bd6e7ea"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{2.0601522996402166`, -3.4286692028084493`}, {
      2.0601522996402166`, -3.4286692028084493`}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{4., 0.}, {4., 0.}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0., 0.}}]}, {{}, {}}}, InsetBox[
    StyleBox[
     TagBox["r",
      HoldForm],
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], 
    NCache[{1.8875951872751355`, Rational[-5, 2] Cos[31 Degree]}, {
     1.8875951872751355`, -2.142918251755281}]], InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {3.175190374550271, -3.485836503510562}], InsetBox[
    StyleBox[
     TagBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LongEqual]", 
       SuperscriptBox["r", "2"]}],
      HoldForm],
     StripOnInput->False,
     FontSize->14,
     FontSlant->Italic], {2, 4.5}], 
   ArrowBox[NCache[{{0, 0}, {5 Sin[31 Degree], (-5) Cos[31 Degree]}}, {{0, 
      0}, {2.575190374550271, -4.285836503510562}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 301 Degree}, {0, 5.253441048502932}]], 
   InsetBox[
    StyleBox[
     TagBox["\[Theta]",
      HoldForm],
     StripOnInput->False,
     FontSize->Large], {-0.07035569593989965, 1.2924235601034673}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->None]], "Output",
 CellChangeTimes->{
  3.897171195973777*^9, {3.897171567896924*^9, 3.897171657830065*^9}, 
   3.897171870327075*^9},
 CellLabel->
  "Out[492]=",ExpressionUUID->"13ac3570-c201-456c-9578-8c0ddde74311"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"trig-function-defn-q4.pdf\"\>", 
   ",", "\<\"trig-function-defn-q4.svg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.897171195973777*^9, {3.897171567896924*^9, 3.897171657830065*^9}, 
   3.897171870811903*^9},
 CellLabel->
  "Out[493]=",ExpressionUUID->"5f94dc6c-389b-40fd-ad13-217c76e5012b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]", "=", 
  RowBox[{"207", "*", "Degree"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"r", " ", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<(x,y)\>\"", ",", "Large", ",", "Italic"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5"}], ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "1"}], ")"}], " ", ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"0.2", "r"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\[Theta]", ",", "Large"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "-", "0.5"}], ",", 
         RowBox[{
          RowBox[{"0.2", 
           RowBox[{"(", 
            RowBox[{"r", "+", "1"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "+", "0.2"}]}], "}"}]}], 
      "]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"r", "+", "1"}], ")"}]}], ",", 
        RowBox[{"r", "+", "1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<circle.pdf\>\"", ",", "\"\<circle.svg\>\""}], "}"}], ",", 
   "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.897398459624185*^9, 3.8973985724622793`*^9}},
 CellLabel->
  "In[1063]:=",ExpressionUUID->"2230c4cc-314e-428b-9b1a-5741bf3c6a3f"],

Cell[BoxData[
 RowBox[{"207", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{{3.897398479141678*^9, 3.8973985727478533`*^9}},
 CellLabel->
  "Out[1064]=",ExpressionUUID->"6940461c-072a-4ecc-82f7-49f2d123c5b7"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-3.5640260967534716`, -1.8159619989581872`}, \
{-3.5640260967534716`, -1.8159619989581872`}}]}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{4., 0.}, {4., 0.}}]}, {{}, {}}}, InsetBox[
    StyleBox["\<\"(x,y)\"\>",
     StripOnInput->False,
     FontSize->Large,
     FontSlant->Italic], {-2.5, -2}], 
   ArrowBox[NCache[{{0, 0}, {(-5) Cos[27 Degree], (-5) Sin[27 Degree]}}, {{0, 
      0}, {-4.455032620941839, -2.2699524986977337`}}]], 
   ArrowBox[{{0, 0}, {5, 0}}], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 0.8, NCache[{0, 207 Degree}, {0, 3.612831551628262}]], 
   InsetBox[
    StyleBox[
     RowBox[{"207", " ", "\[Degree]"}],
     StripOnInput->False,
     FontSize->Large], {-0.7334453638559054, 1.1723699203976765}]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[18],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.897398479141678*^9, 3.8973985729161663`*^9}},
 CellLabel->
  "Out[1065]=",ExpressionUUID->"94ea9aaa-9888-43bd-bdd6-3bed97a9bcd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"circle.pdf\"\>", ",", "\<\"circle.svg\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{{3.897398479141678*^9, 3.897398573396338*^9}},
 CellLabel->
  "Out[1066]=",ExpressionUUID->"5b647a5f-b4bd-4fa9-b0ac-8ef86398edfc"]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"040220d3-7d80-4956-bbe2-60be343d75aa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 206, 5, 46, "Input",ExpressionUUID->"53ac9e73-d89c-48b2-b0b1-98dc367cbbcc"],
Cell[CellGroupData[{
Cell[789, 29, 1621, 45, 202, "Input",ExpressionUUID->"f9f63efc-f772-443a-97c6-9ecd4fa48fe8"],
Cell[2413, 76, 1546, 41, 367, "Output",ExpressionUUID->"c4425255-21d2-4642-810f-2e4b5a49f720"],
Cell[3962, 119, 290, 4, 52, "Output",ExpressionUUID->"582181e3-7773-4208-a433-48aedea52b30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4289, 128, 5041, 146, 481, "Input",ExpressionUUID->"2794ecda-d096-4ca3-9fa5-724e2f71cd24"],
Cell[9333, 276, 499, 7, 52, "Output",ExpressionUUID->"40226fec-e339-4c07-bac4-83682225ad0d"],
Cell[9835, 285, 2655, 65, 581, "Output",ExpressionUUID->"0a66d6ee-698c-4afc-a2b5-cd8ebbb1347b"],
Cell[12493, 352, 484, 6, 52, "Output",ExpressionUUID->"e3660767-dfb8-41b2-bb85-8cb398077040"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13014, 363, 3252, 92, 326, "Input",ExpressionUUID->"87b164fa-8581-4b27-a36e-2a39c94cb70f"],
Cell[16269, 457, 989, 26, 674, "Output",ExpressionUUID->"ce76b3f2-311f-46c8-aca7-26f0710301b7"],
Cell[17261, 485, 300, 5, 52, "Output",ExpressionUUID->"76e85a28-e577-4bc9-a7eb-e4ffb51c06a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17598, 495, 3276, 95, 326, "Input",ExpressionUUID->"03aa7a81-9e40-49ed-96b0-011e158ca73a"],
Cell[20877, 592, 838, 24, 674, "Output",ExpressionUUID->"16f9a731-7f7d-47b4-bacb-73932b7e2170"],
Cell[21718, 618, 150, 3, 52, "Output",ExpressionUUID->"03449a16-808e-4261-b7e8-257563a2f1ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21905, 626, 514, 11, 78, "Input",ExpressionUUID->"f685556c-4208-4eb6-b4de-f07531c499a6"],
Cell[22422, 639, 25945, 480, 566, "Output",ExpressionUUID->"ca37635c-5943-4dba-950b-7ec10761c3b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48404, 1124, 4940, 145, 481, "Input",ExpressionUUID->"ac11b0c8-ba1f-4f3e-9e15-bd678ca0c142"],
Cell[53347, 1271, 29549, 552, 545, "Output",ExpressionUUID->"1e9f74fc-9aad-410a-b0da-4d9dcfb0aeca"],
Cell[82899, 1825, 29446, 532, 557, "Output",ExpressionUUID->"5a216560-09fc-471f-a47a-650d86852542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112382, 2362, 414, 12, 46, "Input",ExpressionUUID->"1e85dd21-54ea-4812-a1c0-8d4d3f511fd3"],
Cell[112799, 2376, 738, 22, 70, "Output",ExpressionUUID->"85eeb809-370c-44a8-b535-84747b0ead7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113574, 2403, 3101, 90, 326, "Input",ExpressionUUID->"ac8ed612-f77e-447d-9fb2-3596158cae62"],
Cell[116678, 2495, 838, 24, 674, "Output",ExpressionUUID->"434b8d81-9c99-4caf-a8eb-d20af7a08163"],
Cell[117519, 2521, 145, 3, 52, "Output",ExpressionUUID->"e1eca376-275a-4d28-8f5f-39d3e84563e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117701, 2529, 289, 7, 46, "Input",ExpressionUUID->"f7e36015-bdc7-4d6c-9655-e36d02ae2736"],
Cell[117993, 2538, 220, 4, 52, "Output",ExpressionUUID->"ed37a4f3-5318-4647-8341-8827cc88a579"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118250, 2547, 180, 4, 46, "Input",ExpressionUUID->"380890d3-3b37-4542-af0e-73d589eefaca"],
Cell[118433, 2553, 131, 3, 52, "Output",ExpressionUUID->"9d2eff4d-97fc-4428-bb24-91ea62c70bd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118601, 2561, 306, 8, 46, "Input",ExpressionUUID->"cf3d3d48-fd19-4c40-b062-e8fb67c205c1"],
Cell[118910, 2571, 240, 5, 52, "Output",ExpressionUUID->"b43704d4-5655-4beb-9760-eb842f062870"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119187, 2581, 1696, 51, 202, "Input",ExpressionUUID->"49d53b42-a973-4579-9219-2ef9f714b299"],
Cell[120886, 2634, 18476, 327, 376, "Output",ExpressionUUID->"2b7375b1-dbaa-4a11-bb17-9e1892c15ecc"],
Cell[139365, 2963, 266, 4, 52, "Output",ExpressionUUID->"637ca38d-c198-4943-a113-d6432ef7236e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139668, 2972, 1963, 59, 202, "Input",ExpressionUUID->"6bd661aa-79fe-4e18-9e18-51ad2b32ec01"],
Cell[141634, 3033, 18181, 322, 376, "Output",ExpressionUUID->"7a6e81b2-05ed-4f5b-9841-8799bfe28ce6"],
Cell[159818, 3357, 169, 3, 52, "Output",ExpressionUUID->"2d6b7825-f640-40b1-aac4-e98e65441bc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160024, 3365, 1955, 59, 202, "Input",ExpressionUUID->"80489909-7b71-40ff-8b63-66c769001a72"],
Cell[161982, 3426, 24772, 435, 376, "Output",ExpressionUUID->"51744723-d3c9-4ddc-b6e4-a6a1ce83c32c"],
Cell[186757, 3863, 188, 3, 52, "Output",ExpressionUUID->"a65863ac-ac44-4eb9-a022-02035ea764d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186982, 3871, 1965, 59, 202, "Input",ExpressionUUID->"ec749c8b-6a0b-417e-90d3-6b24507d0a43"],
Cell[188950, 3932, 24722, 433, 401, "Output",ExpressionUUID->"e60e75c9-a9a6-4985-a36c-3194c34d4edf"],
Cell[213675, 4367, 192, 3, 52, "Output",ExpressionUUID->"69582f26-0fd3-4520-ae06-8cdf15084a45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213904, 4375, 2253, 65, 202, "Input",ExpressionUUID->"fb9ca97e-e9e7-4c44-867d-955a3f536ffb"],
Cell[216160, 4442, 8449, 179, 381, "Output",ExpressionUUID->"4a93b564-e075-4a04-933c-e6cdc925e912"],
Cell[224612, 4623, 292, 5, 52, "Output",ExpressionUUID->"56b2e18c-7321-4f18-a855-f8c17ee97268"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224941, 4633, 357, 10, 46, "Input",ExpressionUUID->"52a61742-17b4-4cf4-abfc-9c61e97c25c8"],
Cell[225301, 4645, 282, 8, 69, "Output",ExpressionUUID->"c5d7d6d1-b666-4c6b-a4b0-53278c19c955"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225620, 4658, 1935, 59, 171, "Input",ExpressionUUID->"6b9acf17-aa2d-404a-974b-769c228d4ff3"],
Cell[227558, 4719, 11721, 224, 398, "Output",ExpressionUUID->"d9cd71bc-1f99-4ef5-bdee-418a7506dca7"],
Cell[239282, 4945, 193, 4, 52, "Output",ExpressionUUID->"7223bc95-64a6-4a99-a95e-195b2f0394b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239512, 4954, 247, 7, 46, "Input",ExpressionUUID->"b39cd8a7-c643-4a31-904e-b2d943437d1e"],
Cell[239762, 4963, 179, 5, 70, "Output",ExpressionUUID->"88830e85-6af5-4ddf-b4fd-85be19dfd379"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239978, 4973, 2217, 65, 202, "Input",ExpressionUUID->"044aea80-6219-4806-9202-56a7b776baca"],
Cell[242198, 5040, 29119, 507, 376, "Output",ExpressionUUID->"c6491b65-64ef-481c-8c95-7daae7af02f1"],
Cell[271320, 5549, 192, 3, 52, "Output",ExpressionUUID->"fa71dfaf-8199-438f-b245-7c6e468dedee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271549, 5557, 3613, 104, 419, "Input",ExpressionUUID->"1b8ba446-98b3-41c3-9fb1-68d4c22e9819"],
Cell[275165, 5663, 4775, 90, 496, "Output",ExpressionUUID->"2f42c6ee-2dd9-4132-8789-9262993335ca"],
Cell[279943, 5755, 542, 10, 52, "Output",ExpressionUUID->"4c625b1f-1621-42df-bd8c-5fa5343c399e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280522, 5770, 3672, 106, 419, "Input",ExpressionUUID->"97e1f80b-1aa6-4df6-b037-5b226caf178d"],
Cell[284197, 5878, 4638, 88, 496, "Output",ExpressionUUID->"b64cdff6-2e7e-41ec-a0ac-dccc994cdf26"],
Cell[288838, 5968, 401, 8, 52, "Output",ExpressionUUID->"737600bd-629f-43f5-9417-4aa50d9b969e"]
}, Open  ]],
Cell[289254, 5979, 3422, 101, 419, "Input",ExpressionUUID->"4a63019b-92a9-46e4-a2d9-d75af9b29a24"],
Cell[292679, 6082, 152, 3, 46, "Input",ExpressionUUID->"3dbbe8f8-d4d2-4181-ad8c-639460d8b66a"],
Cell[CellGroupData[{
Cell[292856, 6089, 3632, 106, 450, "Input",ExpressionUUID->"bc36161a-3d1c-4f28-856e-819d1bda8012"],
Cell[296491, 6197, 28582, 479, 525, "Output",ExpressionUUID->"6f4f1ece-7c4a-4e3c-a2cc-d809892fca23"],
Cell[325076, 6678, 318, 7, 52, "Output",ExpressionUUID->"c30bacff-2af7-4758-83c2-d6496cf40c84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325431, 6690, 4256, 124, 512, "Input",ExpressionUUID->"78b456a7-0b33-4275-991e-84b5392e189a"],
Cell[329690, 6816, 7878, 141, 524, "Output",ExpressionUUID->"171abb04-4093-4a78-9bea-71ff13689c17"],
Cell[337571, 6959, 462, 9, 52, "Output",ExpressionUUID->"012c9757-3209-45c9-81ef-c12649fb3d0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338070, 6973, 4465, 130, 574, "Input",ExpressionUUID->"6eb498ae-7fdc-4bea-8d77-8de300bbd340"],
Cell[342538, 7105, 15937, 277, 488, "Output",ExpressionUUID->"aebef547-de10-4c84-9509-87b502dd51e0"],
Cell[358478, 7384, 381, 8, 52, "Output",ExpressionUUID->"a7ba0f59-be97-45fc-ae56-7cbad448b176"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358896, 7397, 4352, 128, 574, "Input",ExpressionUUID->"eb768e8a-f0c3-4ab1-9af1-90f7ff82f420"],
Cell[363251, 7527, 15882, 275, 488, "Output",ExpressionUUID->"d5e4a80e-66f1-4d88-963e-b19111152b42"],
Cell[379136, 7804, 374, 8, 52, "Output",ExpressionUUID->"6b3a3b4c-01c5-4820-8036-7892a6891707"]
}, Open  ]],
Cell[379525, 7815, 292, 5, 46, "Input",ExpressionUUID->"4ef2e92c-8d3f-4761-abca-d7a4cf49c2f1"],
Cell[379820, 7822, 156, 3, 46, "Input",ExpressionUUID->"d846112c-0dec-4ce4-b3de-02981e3decd4"],
Cell[CellGroupData[{
Cell[380001, 7829, 4597, 136, 450, "Input",ExpressionUUID->"6d4c107e-319f-4919-8f12-98ecaabb52a8"],
Cell[384601, 7967, 9689, 187, 581, "Output",ExpressionUUID->"d1ade5df-4fa8-40c4-9647-dcfccc61714c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394327, 8159, 4206, 126, 419, "Input",ExpressionUUID->"c3b13620-e7c3-4b4e-90b3-d282038e2ff8"],
Cell[398536, 8287, 14018, 255, 581, "Output",ExpressionUUID->"e126ce29-c362-4bad-bc4d-0c9a11c1c6b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412591, 8547, 4520, 135, 419, "Input",ExpressionUUID->"9ec6eb63-4f79-4312-8412-0559cc06c0a8"],
Cell[417114, 8684, 27258, 472, 581, "Output",ExpressionUUID->"872a8df8-e814-42a6-aab3-54de788e4a6d"]
}, Open  ]],
Cell[444387, 9159, 174, 3, 46, "Input",ExpressionUUID->"7b360dcf-c77f-474c-bb61-c79196846e99"],
Cell[444564, 9164, 201, 4, 46, "Input",ExpressionUUID->"8f83871d-6d54-4dea-974f-1a1c22e7b916"],
Cell[CellGroupData[{
Cell[444790, 9172, 4808, 144, 481, "Input",ExpressionUUID->"9cb84a09-ebdb-41dc-89cb-62a3aeea89f2"],
Cell[449601, 9318, 384, 7, 52, "Output",ExpressionUUID->"67a1ab20-8425-4d3a-9c8c-8afdbd8b23aa"],
Cell[449988, 9327, 28552, 494, 581, "Output",ExpressionUUID->"928df7e4-46f5-4f1e-a27d-b7974638c174"]
}, Open  ]],
Cell[478555, 9824, 136, 3, 46, "Input",ExpressionUUID->"62b6474e-3d28-4526-9131-2023897c92bc"],
Cell[CellGroupData[{
Cell[478716, 9831, 12365, 370, 1221, "Input",ExpressionUUID->"94525ac7-44f7-486d-b92f-5d351f1fbc5a"],
Cell[491084, 10203, 11320, 211, 581, "Output",ExpressionUUID->"8394c54a-4a59-4b46-91d3-467d26b935aa"],
Cell[502407, 10416, 7029, 140, 581, "Output",ExpressionUUID->"19c680fb-1333-4ada-a9cb-f6eacb299c2b"],
Cell[509439, 10558, 17149, 306, 581, "Output",ExpressionUUID->"86c960b1-2c6f-4b3c-be66-efd0e8ee3f33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526625, 10869, 217, 5, 46, "Input",ExpressionUUID->"afc2aabe-5ff7-4283-992f-dc8bef101325"],
Cell[526845, 10876, 197, 4, 52, "Output",ExpressionUUID->"55253e74-a255-4091-9b0f-d47aa5dba77a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527079, 10885, 1712, 48, 171, "Input",ExpressionUUID->"e115f4c8-eab2-4412-94d2-ddddb55b140f"],
Cell[528794, 10935, 8387, 195, 566, "Output",ExpressionUUID->"5d1f1e5f-fcc1-4026-8e5b-66f247a8caea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537218, 11135, 2783, 80, 233, "Input",ExpressionUUID->"010d6bb3-7909-428d-b600-7b5425600af0"],
Cell[540004, 11217, 34484, 621, 504, "Output",ExpressionUUID->"c7285a43-2502-45a0-8099-1a84577f3199"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574525, 11843, 2982, 89, 264, "Input",ExpressionUUID->"267e5463-ee36-45a5-8639-2e263100dd59"],
Cell[577510, 11934, 23645, 446, 566, "Output",ExpressionUUID->"56bd5d11-d9da-4943-ae1d-66ca8eae62b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601192, 12385, 2962, 88, 264, "Input",ExpressionUUID->"1c9f8236-8bf0-4bce-8872-87f6327b1969"],
Cell[604157, 12475, 31236, 587, 566, "Output",ExpressionUUID->"5e48868e-5a0a-4a26-8711-ce481788c6cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635430, 13067, 3021, 89, 264, "Input",ExpressionUUID->"ba58893d-8eda-4c84-b6c3-a667211a9340"],
Cell[638454, 13158, 32785, 583, 566, "Output",ExpressionUUID->"cc21e926-3a2d-4cb6-908b-f13191cd4658"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671276, 13746, 3174, 93, 295, "Input",ExpressionUUID->"d5335628-391e-4e2e-9f65-50088294cfe0"],
Cell[674453, 13841, 36391, 655, 504, "Output",ExpressionUUID->"5a174c4c-01f4-47bc-b2a5-3cd6283a6c62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710881, 14501, 3172, 93, 295, "Input",ExpressionUUID->"5cdca6f9-f38e-4d85-872e-fe4dc0a4bfa0"],
Cell[714056, 14596, 52058, 912, 504, "Output",ExpressionUUID->"3eea31bc-4a0f-4cf6-90db-30039d4dcc50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766151, 15513, 7618, 225, 636, "Input",ExpressionUUID->"759a0777-244a-4224-81ab-03453af0d957"],
Cell[773772, 15740, 257, 5, 52, "Output",ExpressionUUID->"605b2540-2338-42ce-afa9-da6b2c85295b"],
Cell[774032, 15747, 4937, 137, 581, "Output",ExpressionUUID->"c423f346-94ec-4a16-af95-5bfa910c1546"],
Cell[778972, 15886, 334, 7, 52, "Output",ExpressionUUID->"c7de6a7f-b116-4324-9698-0bd0cdbc6838"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779343, 15898, 6920, 206, 574, "Input",ExpressionUUID->"a2d86663-3d62-40a4-adcb-bbc348d4bf7a"],
Cell[786266, 16106, 283, 5, 52, "Output",ExpressionUUID->"09483608-c509-4827-a3b3-4c7bb0cee297"],
Cell[786552, 16113, 4783, 131, 581, "Output",ExpressionUUID->"70bd61d7-2d08-42a3-b798-7e64fd03aea4"],
Cell[791338, 16246, 367, 7, 52, "Output",ExpressionUUID->"a428c9c6-218c-4e48-a7d2-a65b9264b391"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791742, 16258, 6927, 206, 574, "Input",ExpressionUUID->"b3ff7dd3-bc73-4766-ab54-f4e85bf7918d"],
Cell[798672, 16466, 283, 5, 52, "Output",ExpressionUUID->"4e34e2d6-eed1-4a10-8874-9aaf63c7eb82"],
Cell[798958, 16473, 4797, 132, 581, "Output",ExpressionUUID->"88a2c45a-eebe-4bcb-9c17-f4a090fcc9d8"],
Cell[803758, 16607, 366, 7, 52, "Output",ExpressionUUID->"1a567d78-6819-4bd5-9872-495c0b47aeaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[804161, 16619, 6851, 204, 574, "Input",ExpressionUUID->"5b4574e8-fe9f-45e8-ba17-6312076c8a12"],
Cell[811015, 16825, 260, 6, 52, "Output",ExpressionUUID->"8a87b271-d0f1-4451-ae33-b50f00d24a8b"],
Cell[811278, 16833, 4917, 138, 581, "Output",ExpressionUUID->"cbff5b0d-5749-499f-a24f-5ee8d978c632"],
Cell[816198, 16973, 341, 8, 52, "Output",ExpressionUUID->"c8981bd4-5a2b-486c-b7fa-8506cc7a0f9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816576, 16986, 6888, 205, 574, "Input",ExpressionUUID->"3c40b9f0-cd33-4b92-8ff3-22f034d118d0"],
Cell[823467, 17193, 259, 6, 52, "Output",ExpressionUUID->"e6fd446c-4676-4a5f-bc3f-ea392bd6e7ea"],
Cell[823729, 17201, 4843, 134, 581, "Output",ExpressionUUID->"13ac3570-c201-456c-9578-8c0ddde74311"],
Cell[828575, 17337, 341, 8, 52, "Output",ExpressionUUID->"5f94dc6c-389b-40fd-ad13-217c76e5012b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828953, 17350, 4724, 140, 481, "Input",ExpressionUUID->"2230c4cc-314e-428b-9b1a-5741bf3c6a3f"],
Cell[833680, 17492, 212, 4, 73, "Output",ExpressionUUID->"6940461c-072a-4ecc-82f7-49f2d123c5b7"],
Cell[833895, 17498, 4131, 110, 602, "Output",ExpressionUUID->"94ea9aaa-9888-43bd-bdd6-3bed97a9bcd4"],
Cell[838029, 17610, 259, 6, 73, "Output",ExpressionUUID->"5b647a5f-b4bd-4fa9-b0ac-8ef86398edfc"]
}, Open  ]]
}
]
*)

